"use strict";(self.webpackChunkterra_framework=self.webpackChunkterra_framework||[]).push([[40785],{74112:function(e,n,t){t.r(n),t.d(n,{default:function(){return k}});var a=t(87462),r=t(44925),l=t(67294),d=t(81254),i=t(75983),o=t(5101),m=t(78530),s=["components"],c={},u="wrapper";function p(e){var n=e.components,t=(0,r.Z)(e,s);return(0,d.mdx)(u,(0,a.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,d.mdx)(m.ZP,{mdxType:"PropsTable"},(0,d.mdx)(m.X2,{key:"ROW1",mdxType:"Row"},(0,d.mdx)(m.O,{mdxType:"PropNameCell"},"ariaLabelledBy"),(0,d.mdx)(m.Di,{mdxType:"TypeCell"},(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-javascript"},"string\n"))),(0,d.mdx)(m.dS,{isRequired:!1,mdxType:"RequiredCell"}),(0,d.mdx)(m.mW,{mdxType:"DefaultValueCell"},(0,d.mdx)("p",null,"none")),(0,d.mdx)(m.Ex,{mdxType:"DescriptionCell"},(0,d.mdx)("p",null,"String that identifies the element (or elements) that labels the grid."))),(0,d.mdx)(m.X2,{key:"ROW2",mdxType:"Row"},(0,d.mdx)(m.O,{mdxType:"PropNameCell"},"ariaLabel"),(0,d.mdx)(m.Di,{mdxType:"TypeCell"},(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-javascript"},"string\n"))),(0,d.mdx)(m.dS,{isRequired:!1,mdxType:"RequiredCell"}),(0,d.mdx)(m.mW,{mdxType:"DefaultValueCell"},(0,d.mdx)("p",null,"none")),(0,d.mdx)(m.Ex,{mdxType:"DescriptionCell"},(0,d.mdx)("p",null,"String that labels the grid for accessibility. If ariaLabelledBy is specified, ariaLabel will not be used."))),(0,d.mdx)(m.X2,{key:"ROW3",mdxType:"Row"},(0,d.mdx)(m.O,{mdxType:"PropNameCell"},"id"),(0,d.mdx)(m.Di,{mdxType:"TypeCell"},(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-javascript"},"string\n"))),(0,d.mdx)(m.dS,{isRequired:!0,mdxType:"RequiredCell"}),(0,d.mdx)(m.mW,{mdxType:"DefaultValueCell"},(0,d.mdx)("p",null,"none")),(0,d.mdx)(m.Ex,{mdxType:"DescriptionCell"},(0,d.mdx)("p",null,"String that will be used to identify the Grid. If multiple grids are on the same page, each grid should have\na unique id."))),(0,d.mdx)(m.X2,{key:"ROW4",mdxType:"Row"},(0,d.mdx)(m.O,{mdxType:"PropNameCell"},"columns"),(0,d.mdx)(m.Di,{mdxType:"TypeCell"},(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-javascript"},"arrayOf: [{\n  type: 'custom',\n}],\n"))),(0,d.mdx)(m.dS,{isRequired:!1,mdxType:"RequiredCell"}),(0,d.mdx)(m.mW,{mdxType:"DefaultValueCell"},(0,d.mdx)("p",null,"none")),(0,d.mdx)(m.Ex,{mdxType:"DescriptionCell"},(0,d.mdx)("p",null,"Data for columns. Columns will be presented in the order given."))),(0,d.mdx)(m.X2,{key:"ROW5",mdxType:"Row"},(0,d.mdx)(m.O,{mdxType:"PropNameCell"},"rows"),(0,d.mdx)(m.Di,{mdxType:"TypeCell"},(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-javascript"},"arrayOf: [{\n  type: 'custom',\n}],\n"))),(0,d.mdx)(m.dS,{isRequired:!1,mdxType:"RequiredCell"}),(0,d.mdx)(m.mW,{mdxType:"DefaultValueCell"},(0,d.mdx)("p",null,"none")),(0,d.mdx)(m.Ex,{mdxType:"DescriptionCell"},(0,d.mdx)("p",null,"Data for content in the body of the Grid. Rows will be rendered in the order given."))),(0,d.mdx)(m.X2,{key:"ROW6",mdxType:"Row"},(0,d.mdx)(m.O,{mdxType:"PropNameCell"},"defaultColumnWidth"),(0,d.mdx)(m.Di,{mdxType:"TypeCell"},(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-javascript"},"number\n"))),(0,d.mdx)(m.dS,{isRequired:!1,mdxType:"RequiredCell"}),(0,d.mdx)(m.mW,{mdxType:"DefaultValueCell"},(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-javascript"},"200\n"))),(0,d.mdx)(m.Ex,{mdxType:"DescriptionCell"},(0,d.mdx)("p",null,"Number indicating the default column width in px. This value will be used if no overriding width value is provided on a per-column basis."))),(0,d.mdx)(m.X2,{key:"ROW7",mdxType:"Row"},(0,d.mdx)(m.O,{mdxType:"PropNameCell"},"columnHeaderHeight"),(0,d.mdx)(m.Di,{mdxType:"TypeCell"},(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-javascript"},"string\n"))),(0,d.mdx)(m.dS,{isRequired:!1,mdxType:"RequiredCell"}),(0,d.mdx)(m.mW,{mdxType:"DefaultValueCell"},(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-javascript"},"'2.5rem'\n"))),(0,d.mdx)(m.Ex,{mdxType:"DescriptionCell"},(0,d.mdx)("p",null,"String that specifies the column height. Any valid CSS height value is accepted."))),(0,d.mdx)(m.X2,{key:"ROW8",mdxType:"Row"},(0,d.mdx)(m.O,{mdxType:"PropNameCell"},"rowHeight"),(0,d.mdx)(m.Di,{mdxType:"TypeCell"},(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-javascript"},"string\n"))),(0,d.mdx)(m.dS,{isRequired:!1,mdxType:"RequiredCell"}),(0,d.mdx)(m.mW,{mdxType:"DefaultValueCell"},(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-javascript"},"'2.5rem'\n"))),(0,d.mdx)(m.Ex,{mdxType:"DescriptionCell"},(0,d.mdx)("p",null,"String that specifies the height for the rows in the grid. Any valid CSS value is accepted."))),(0,d.mdx)(m.X2,{key:"ROW9",mdxType:"Row"},(0,d.mdx)(m.O,{mdxType:"PropNameCell"},"rowHeaderIndex"),(0,d.mdx)(m.Di,{mdxType:"TypeCell"},(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-javascript"},"number\n"))),(0,d.mdx)(m.dS,{isRequired:!1,mdxType:"RequiredCell"}),(0,d.mdx)(m.mW,{mdxType:"DefaultValueCell"},(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-javascript"},"0\n"))),(0,d.mdx)(m.Ex,{mdxType:"DescriptionCell"},(0,d.mdx)("p",null,"Number indicating the index of the column that represents row header. Index is 0 based and cannot exceed one less than the number of columns in the grid."))),(0,d.mdx)(m.X2,{key:"ROW10",mdxType:"Row"},(0,d.mdx)(m.O,{mdxType:"PropNameCell"},"onColumnResize"),(0,d.mdx)(m.Di,{mdxType:"TypeCell"},(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-javascript"},"func\n"))),(0,d.mdx)(m.dS,{isRequired:!1,mdxType:"RequiredCell"}),(0,d.mdx)(m.mW,{mdxType:"DefaultValueCell"},(0,d.mdx)("p",null,"none")),(0,d.mdx)(m.Ex,{mdxType:"DescriptionCell"},(0,d.mdx)("p",null,"Function that is called when a resizable column is resized. Parameters:\n@param {string} columnId columnId\n@param {string} requestedWidth requestedWidth"))),(0,d.mdx)(m.X2,{key:"ROW11",mdxType:"Row"},(0,d.mdx)(m.O,{mdxType:"PropNameCell"},"onCellSelect"),(0,d.mdx)(m.Di,{mdxType:"TypeCell"},(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-javascript"},"func\n"))),(0,d.mdx)(m.dS,{isRequired:!1,mdxType:"RequiredCell"}),(0,d.mdx)(m.mW,{mdxType:"DefaultValueCell"},(0,d.mdx)("p",null,"none")),(0,d.mdx)(m.Ex,{mdxType:"DescriptionCell"},(0,d.mdx)("p",null,"Callback function that is called when a selectable cell is selected. Parameters:\n@param {string} rowId rowId\n@param {string} columnId columnId"))),(0,d.mdx)(m.X2,{key:"ROW12",mdxType:"Row"},(0,d.mdx)(m.O,{mdxType:"PropNameCell"},"onRowSelect"),(0,d.mdx)(m.Di,{mdxType:"TypeCell"},(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-javascript"},"func\n"))),(0,d.mdx)(m.dS,{isRequired:!1,mdxType:"RequiredCell"}),(0,d.mdx)(m.mW,{mdxType:"DefaultValueCell"},(0,d.mdx)("p",null,"none")),(0,d.mdx)(m.Ex,{mdxType:"DescriptionCell"},(0,d.mdx)("p",null,"Callback function that is called when a row is selected. Parameters:\n@param {string} rowId rowId"))),(0,d.mdx)(m.X2,{key:"ROW13",mdxType:"Row"},(0,d.mdx)(m.O,{mdxType:"PropNameCell"},"onRowSelectAll"),(0,d.mdx)(m.Di,{mdxType:"TypeCell"},(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-javascript"},"func\n"))),(0,d.mdx)(m.dS,{isRequired:!1,mdxType:"RequiredCell"}),(0,d.mdx)(m.mW,{mdxType:"DefaultValueCell"},(0,d.mdx)("p",null,"none")),(0,d.mdx)(m.Ex,{mdxType:"DescriptionCell"},(0,d.mdx)("p",null,"Callback function that is called when all rows are selected. Parameters: none."))),(0,d.mdx)(m.X2,{key:"ROW14",mdxType:"Row"},(0,d.mdx)(m.O,{mdxType:"PropNameCell"},"onColumnSelect"),(0,d.mdx)(m.Di,{mdxType:"TypeCell"},(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-javascript"},"func\n"))),(0,d.mdx)(m.dS,{isRequired:!1,mdxType:"RequiredCell"}),(0,d.mdx)(m.mW,{mdxType:"DefaultValueCell"},(0,d.mdx)("p",null,"none")),(0,d.mdx)(m.Ex,{mdxType:"DescriptionCell"},(0,d.mdx)("p",null,"Callback function that is called when a selectable column is selected. Parameters:\n@param {string} columnId columnId"))),(0,d.mdx)(m.X2,{key:"ROW15",mdxType:"Row"},(0,d.mdx)(m.O,{mdxType:"PropNameCell"},"onClearSelectedRows"),(0,d.mdx)(m.Di,{mdxType:"TypeCell"},(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-javascript"},"func\n"))),(0,d.mdx)(m.dS,{isRequired:!1,mdxType:"RequiredCell"}),(0,d.mdx)(m.mW,{mdxType:"DefaultValueCell"},(0,d.mdx)("p",null,"none")),(0,d.mdx)(m.Ex,{mdxType:"DescriptionCell"},(0,d.mdx)("p",null,"Callback function that is called when all selected rows need to be unselected. Parameters: none."))),(0,d.mdx)(m.X2,{key:"ROW16",mdxType:"Row"},(0,d.mdx)(m.O,{mdxType:"PropNameCell"},"onDisableSelectableRows"),(0,d.mdx)(m.Di,{mdxType:"TypeCell"},(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-javascript"},"func\n"))),(0,d.mdx)(m.dS,{isRequired:!1,mdxType:"RequiredCell"}),(0,d.mdx)(m.mW,{mdxType:"DefaultValueCell"},(0,d.mdx)("p",null,"none")),(0,d.mdx)(m.Ex,{mdxType:"DescriptionCell"},(0,d.mdx)("p",null,"Callback function that is called when no row is selected and the row selection mode needs to be disabled. Parameters: none."))),(0,d.mdx)(m.X2,{key:"ROW17",mdxType:"Row"},(0,d.mdx)(m.O,{mdxType:"PropNameCell"},"hasSelectableRows"),(0,d.mdx)(m.Di,{mdxType:"TypeCell"},(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-javascript"},"bool\n"))),(0,d.mdx)(m.dS,{isRequired:!1,mdxType:"RequiredCell"}),(0,d.mdx)(m.mW,{mdxType:"DefaultValueCell"},(0,d.mdx)("p",null,"none")),(0,d.mdx)(m.Ex,{mdxType:"DescriptionCell"},(0,d.mdx)("p",null,"Boolean indicating whether or not the DataGrid should allow entire rows to be selected. An additional column will be\nrendered to allow for row selection to occur.")))))}p.isMDXComponent=!0;var x=t(5607),y=["components"],f={};function C(e){var n=e.components,t=(0,r.Z)(e,y);return(0,d.mdx)("wrapper",(0,a.Z)({},f,t,{components:n,mdxType:"MDXLayout"}),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-js"},"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _react = _interopRequireDefault(require(\"react\"));\nvar _terraWorklistDataGrid = _interopRequireDefault(require(\"terra-worklist-data-grid\"));\nvar gridDataJSON = {\n  cols: [{\n    id: 'Column-0',\n    displayName: 'Patient'\n  }, {\n    id: 'Column-1',\n    displayName: 'Location'\n  }, {\n    id: 'Column-2',\n    displayName: 'Illness Severity'\n  }, {\n    id: 'Column-3',\n    displayName: 'Visit'\n  }, {\n    id: 'Column-4',\n    displayName: 'Allergy'\n  }, {\n    id: 'Column-5',\n    displayName: 'Primary Contact'\n  }, {\n    id: 'Column-6',\n    displayName: 'Generic Order Counts'\n  }, {\n    id: 'Column-7',\n    displayName: 'Patient Age'\n  }, {\n    id: 'Column-8',\n    displayName: 'Medication History'\n  }, {\n    id: 'Column-9',\n    displayName: 'My Relationship'\n  }, {\n    id: 'Column-10',\n    displayName: 'Not Selectable',\n    isSelectable: false\n  }],\n  rows: [{\n    id: '1',\n    cells: [{\n      content: 'Fleck, Arthur'\n    }, {\n      content: '1007-MTN'\n    }, {\n      content: 'Unstable'\n    }, {\n      content: 'Inpatient, 2 months'\n    }, {\n      content: ''\n    }, {\n      content: 'Quinzell, Harleen'\n    }, {\n      content: ''\n    }, {\n      isMasked: true\n    }, {\n      isMasked: true\n    }, {\n      content: 'Admitting Physician'\n    }, {\n      content: '',\n      isSelectable: false\n    }]\n  }, {\n    id: '2',\n    cells: [{\n      content: 'Wayne, Bruce'\n    }, {\n      content: '1007-MTN-DR'\n    }, {\n      content: 'Stable'\n    }, {\n      content: 'Outpatient, 2 days'\n    }, {\n      content: 'Phytochemicals'\n    }, {\n      content: 'Grayson, Richard'\n    }, {\n      content: ''\n    }, {\n      content: ''\n    }, {\n      isMasked: true\n    }, {\n      content: 'Admitting Physician'\n    }, {\n      content: '',\n      isSelectable: false\n    }]\n  }]\n};\nvar DefaultWorklistDataGrid = function DefaultWorklistDataGrid() {\n  var rowHeaderIndex = 0;\n  var cols = gridDataJSON.cols,\n    rows = gridDataJSON.rows;\n  return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement(_terraWorklistDataGrid.default, {\n    id: \"default-terra-worklist-data-grid\",\n    columns: cols,\n    rows: rows,\n    rowHeaderIndex: rowHeaderIndex,\n    ariaLabel: \"Worklist Data Grid\"\n  }));\n};\nvar _default = DefaultWorklistDataGrid;\nexports.default = _default;\n")))}C.isMDXComponent=!0;var g=t(49271),b=function(e){var n=e.title,t=e.description,a=e.isExpanded;return l.createElement(g.Z,{title:n||"Default Worklist Data Grid",description:t,example:l.createElement(x.Z,null),exampleSrc:l.createElement(C,null),isExpanded:a})},h=t(21700),w=["components"],N={};function T(e){var n=e.components,t=(0,r.Z)(e,w);return(0,d.mdx)("wrapper",(0,a.Z)({},N,t,{components:n,mdxType:"MDXLayout"}),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-js"},"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nvar _typeof = require(\"@babel/runtime/helpers/typeof\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\nvar _react = _interopRequireWildcard(require(\"react\"));\nvar _terraWorklistDataGrid = _interopRequireDefault(require(\"terra-worklist-data-grid\"));\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nvar gridDataJSON = {\n  cols: [{\n    id: 'Column-0',\n    displayName: 'Patient',\n    sortIndicator: 'ascending',\n    hasError: true\n  }, {\n    id: 'Column-1',\n    displayName: 'Location'\n  }, {\n    id: 'Column-2',\n    displayName: 'Illness Severity'\n  }, {\n    id: 'Column-3',\n    displayName: 'Visit'\n  }, {\n    id: 'Column-4',\n    displayName: 'Allergy',\n    hasError: true\n  }, {\n    id: 'Column-5',\n    displayName: 'Primary Contact'\n  }, {\n    id: 'Column-6',\n    displayName: 'Generic Order Counts'\n  }, {\n    id: 'Column-7',\n    displayName: 'Patient Age'\n  }, {\n    id: 'Column-8',\n    displayName: 'Medication History'\n  }, {\n    id: 'Column-9',\n    displayName: 'My Relationship'\n  }, {\n    id: 'Column-10',\n    displayName: 'Not Selectable',\n    isSelectable: false\n  }],\n  rows: [{\n    id: '1',\n    cells: [{\n      content: 'Fleck, Arthur'\n    }, {\n      content: '1007-MTN'\n    }, {\n      content: 'Unstable'\n    }, {\n      content: 'Inpatient, 2 months'\n    }, {\n      content: ''\n    }, {\n      content: 'Quinzell, Harleen'\n    }, {\n      content: ''\n    }, {\n      isMasked: true\n    }, {\n      isMasked: true\n    }, {\n      content: 'Admitting Physician'\n    }, {\n      content: '',\n      isSelectable: false\n    }]\n  }, {\n    id: '2',\n    cells: [{\n      content: 'Wayne, Bruce'\n    }, {\n      content: '1007-MTN-DR'\n    }, {\n      content: 'Stable'\n    }, {\n      content: 'Outpatient, 2 days'\n    }, {\n      content: 'Phytochemicals'\n    }, {\n      content: 'Grayson, Richard'\n    }, {\n      content: ''\n    }, {\n      content: ''\n    }, {\n      isMasked: true\n    }, {\n      content: 'Admitting Physician'\n    }, {\n      content: '',\n      isSelectable: false\n    }]\n  }]\n};\nvar DefaultWorklistDataGrid = function DefaultWorklistDataGrid() {\n  var rowHeaderIndex = 0;\n  var cols = gridDataJSON.cols,\n    rows = gridDataJSON.rows;\n  var _useState = (0, _react.useState)(cols),\n    _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n    gridColumns = _useState2[0],\n    setGridColumns = _useState2[1];\n  var _useState3 = (0, _react.useState)(rows),\n    _useState4 = (0, _slicedToArray2.default)(_useState3, 2),\n    gridRows = _useState4[0],\n    setGridRows = _useState4[1];\n  var onColumnSelect = function onColumnSelect(columnId) {\n    var newColumnArray = gridColumns.map(function (column, columnIndex) {\n      var newColumn = _objectSpread({}, column);\n      if (column.id === columnId) {\n        newColumn.sortIndicator = column.sortIndicator === 'ascending' ? 'descending' : 'ascending';\n        var newGridRows = (0, _toConsumableArray2.default)(gridRows);\n        newGridRows.sort(function (rowA, rowB) {\n          var firstRowContent = rowA.cells[columnIndex].content || '';\n          var secondRowContent = rowB.cells[columnIndex].content || '';\n          if (newColumn.sortIndicator === 'ascending') {\n            return firstRowContent.localeCompare(secondRowContent);\n          }\n          return secondRowContent.localeCompare(firstRowContent);\n        });\n        setGridRows(newGridRows);\n      } else {\n        newColumn.sortIndicator = undefined;\n      }\n      return newColumn;\n    });\n    setGridColumns(newColumnArray);\n  };\n  return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement(_terraWorklistDataGrid.default, {\n    id: \"default-terra-worklist-data-grid\",\n    columns: gridColumns,\n    rows: gridRows,\n    rowHeaderIndex: rowHeaderIndex,\n    rowHeight: \"50px\",\n    columnWidth: \"100px\",\n    columnHeaderHeight: \"50px\",\n    onColumnSelect: onColumnSelect,\n    ariaLabel: \"Worklist Data Grid\"\n  }));\n};\nvar _default = DefaultWorklistDataGrid;\nexports.default = _default;\n")))}T.isMDXComponent=!0;var D=function(e){var n=e.title,t=e.description,a=e.isExpanded;return l.createElement(g.Z,{title:n||"Worklist Data Grid Column States",description:t,example:l.createElement(h.Z,null),exampleSrc:l.createElement(T,null),isExpanded:a})},R=["components"],v={},O="wrapper";function k(e){var n=e.components,t=(0,r.Z)(e,R);return(0,d.mdx)(O,(0,a.Z)({},v,t,{components:n,mdxType:"MDXLayout"}),(0,d.mdx)(o.C,{mdxType:"Badge"}),(0,d.mdx)("h1",{id:"terra-worklistdatagrid"},"Terra WorklistDataGrid"),(0,d.mdx)(i.Notice,{variant:"caution",ariaLevel:"2",mdxType:"Notice"},"Terra Worklist Data Grid is currently under alpha release. There may be breaking changes between releases until it is stable with the 1.0 release."),(0,d.mdx)("h2",{id:"getting-started"},"Getting Started"),(0,d.mdx)("ul",null,(0,d.mdx)("li",{parentName:"ul"},"Install with ",(0,d.mdx)("a",{parentName:"li",href:"https://www.npmjs.com/"},"npmjs"),":",(0,d.mdx)("ul",{parentName:"li"},(0,d.mdx)("li",{parentName:"ul"},(0,d.mdx)("inlineCode",{parentName:"li"},"npm install terra-worklist-data-grid"))))),(0,d.mdx)("h2",{id:"peer-dependencies"},"Peer Dependencies"),(0,d.mdx)("p",null,"This component requires the following peer dependencies be installed in your app for the component to properly function."),(0,d.mdx)("table",null,(0,d.mdx)("thead",{parentName:"table"},(0,d.mdx)("tr",{parentName:"thead"},(0,d.mdx)("th",{parentName:"tr",align:null},"Peer Dependency"),(0,d.mdx)("th",{parentName:"tr",align:null},"Version"))),(0,d.mdx)("tbody",{parentName:"table"},(0,d.mdx)("tr",{parentName:"tbody"},(0,d.mdx)("td",{parentName:"tr",align:null},"react"),(0,d.mdx)("td",{parentName:"tr",align:null},"^16.8.5")),(0,d.mdx)("tr",{parentName:"tbody"},(0,d.mdx)("td",{parentName:"tr",align:null},"react-dom"),(0,d.mdx)("td",{parentName:"tr",align:null},"^16.8.5")),(0,d.mdx)("tr",{parentName:"tbody"},(0,d.mdx)("td",{parentName:"tr",align:null},"react-intl"),(0,d.mdx)("td",{parentName:"tr",align:null},"^2.8.0")))),(0,d.mdx)("h2",{id:"component-features"},"Component Features"),(0,d.mdx)("ul",null,(0,d.mdx)("li",{parentName:"ul"},(0,d.mdx)("a",{parentName:"li",href:"https://engineering.cerner.com/terra-ui/about/terra-ui/component-standards#cross-browser-support"},"Cross-Browser Support")),(0,d.mdx)("li",{parentName:"ul"},(0,d.mdx)("a",{parentName:"li",href:"https://engineering.cerner.com/terra-ui/about/terra-ui/component-standards#mobile-support"},"Mobile Support")),(0,d.mdx)("li",{parentName:"ul"},(0,d.mdx)("a",{parentName:"li",href:"https://engineering.cerner.com/terra-ui/about/terra-ui/component-standards#internationalization-i18n"},"Internationalization Support")),(0,d.mdx)("li",{parentName:"ul"},(0,d.mdx)("a",{parentName:"li",href:"https://engineering.cerner.com/terra-ui/about/terra-ui/component-standards#ltr--rtl"},"LTR/RTL Support"))),(0,d.mdx)("h2",{id:"examples"},"Examples"),(0,d.mdx)(b,{title:"Default Worklist Data Grid",mdxType:"DefaultWorklistDataGrid"}),(0,d.mdx)(D,{title:"Worklist Data Grid Column States",mdxType:"WorklistDataGridColumnStates"}),(0,d.mdx)("h2",{id:"grid-props-table"},"Grid props table"),(0,d.mdx)(p,{mdxType:"WorklistDataGridPropsTable"}),(0,d.mdx)("h2",{id:"testing"},"Testing"))}k.isMDXComponent=!0},5607:function(e,n,t){var a=t(64836);n.Z=void 0;var r=a(t(67294)),l=a(t(72095)),d=[{id:"Column-0",displayName:"Patient"},{id:"Column-1",displayName:"Location"},{id:"Column-2",displayName:"Illness Severity"},{id:"Column-3",displayName:"Visit"},{id:"Column-4",displayName:"Allergy"},{id:"Column-5",displayName:"Primary Contact"},{id:"Column-6",displayName:"Generic Order Counts"},{id:"Column-7",displayName:"Patient Age"},{id:"Column-8",displayName:"Medication History"},{id:"Column-9",displayName:"My Relationship"},{id:"Column-10",displayName:"Not Selectable",isSelectable:!1}],i=[{id:"1",cells:[{content:"Fleck, Arthur"},{content:"1007-MTN"},{content:"Unstable"},{content:"Inpatient, 2 months"},{content:""},{content:"Quinzell, Harleen"},{content:""},{isMasked:!0},{isMasked:!0},{content:"Admitting Physician"},{content:"",isSelectable:!1}]},{id:"2",cells:[{content:"Wayne, Bruce"},{content:"1007-MTN-DR"},{content:"Stable"},{content:"Outpatient, 2 days"},{content:"Phytochemicals"},{content:"Grayson, Richard"},{content:""},{content:""},{isMasked:!0},{content:"Admitting Physician"},{content:"",isSelectable:!1}]}],o=function(){var e=d,n=i;return r.default.createElement(r.default.Fragment,null,r.default.createElement(l.default,{id:"default-terra-worklist-data-grid",columns:e,rows:n,rowHeaderIndex:0,ariaLabel:"Worklist Data Grid"}))};n.Z=o},21700:function(e,n,t){var a=t(64836),r=t(18698);n.Z=void 0;var l=a(t(861)),d=a(t(38416)),i=a(t(27424)),o=function(e,n){if(!n&&e&&e.__esModule)return e;if(null===e||"object"!==r(e)&&"function"!=typeof e)return{default:e};var t=s(n);if(t&&t.has(e))return t.get(e);var a={},l=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var d in e)if("default"!==d&&Object.prototype.hasOwnProperty.call(e,d)){var i=l?Object.getOwnPropertyDescriptor(e,d):null;i&&(i.get||i.set)?Object.defineProperty(a,d,i):a[d]=e[d]}a.default=e,t&&t.set(e,a);return a}(t(67294)),m=a(t(72095));function s(e){if("function"!=typeof WeakMap)return null;var n=new WeakMap,t=new WeakMap;return(s=function(e){return e?t:n})(e)}function c(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}var u=[{id:"Column-0",displayName:"Patient",sortIndicator:"ascending",hasError:!0},{id:"Column-1",displayName:"Location"},{id:"Column-2",displayName:"Illness Severity"},{id:"Column-3",displayName:"Visit"},{id:"Column-4",displayName:"Allergy",hasError:!0},{id:"Column-5",displayName:"Primary Contact"},{id:"Column-6",displayName:"Generic Order Counts"},{id:"Column-7",displayName:"Patient Age"},{id:"Column-8",displayName:"Medication History"},{id:"Column-9",displayName:"My Relationship"},{id:"Column-10",displayName:"Not Selectable",isSelectable:!1}],p=[{id:"1",cells:[{content:"Fleck, Arthur"},{content:"1007-MTN"},{content:"Unstable"},{content:"Inpatient, 2 months"},{content:""},{content:"Quinzell, Harleen"},{content:""},{isMasked:!0},{isMasked:!0},{content:"Admitting Physician"},{content:"",isSelectable:!1}]},{id:"2",cells:[{content:"Wayne, Bruce"},{content:"1007-MTN-DR"},{content:"Stable"},{content:"Outpatient, 2 days"},{content:"Phytochemicals"},{content:"Grayson, Richard"},{content:""},{content:""},{isMasked:!0},{content:"Admitting Physician"},{content:"",isSelectable:!1}]}],x=function(){var e=u,n=p,t=(0,o.useState)(e),a=(0,i.default)(t,2),r=a[0],s=a[1],x=(0,o.useState)(n),y=(0,i.default)(x,2),f=y[0],C=y[1];return o.default.createElement(o.default.Fragment,null,o.default.createElement(m.default,{id:"default-terra-worklist-data-grid",columns:r,rows:f,rowHeaderIndex:0,rowHeight:"50px",columnWidth:"100px",columnHeaderHeight:"50px",onColumnSelect:function(e){var n=r.map((function(n,t){var a=function(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?c(Object(t),!0).forEach((function(n){(0,d.default)(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):c(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}({},n);if(n.id===e){a.sortIndicator="ascending"===n.sortIndicator?"descending":"ascending";var r=(0,l.default)(f);r.sort((function(e,n){var r=e.cells[t].content||"",l=n.cells[t].content||"";return"ascending"===a.sortIndicator?r.localeCompare(l):l.localeCompare(r)})),C(r)}else a.sortIndicator=void 0;return a}));s(n)},ariaLabel:"Worklist Data Grid"}))};n.Z=x}}]);