"use strict";
var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __commonJS = (cb, mod) => function __require() {
  return mod || (0, cb[__getOwnPropNames(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
  isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
  mod
));

// libs/commands/publish/src/lib/get-tagged-packages.ts
var require_get_tagged_packages = __commonJS({
  "libs/commands/publish/src/lib/get-tagged-packages.ts"(exports2, module2) {
    "use strict";
    var import_npmlog = __toESM(require("npmlog"));
    var import_path = __toESM(require("path"));
    var childProcess = require("@lerna/child-process");
    module2.exports.getTaggedPackages = getTaggedPackages;
    function getTaggedPackages(packageGraph, rootPath, execOpts) {
      import_npmlog.default.silly("getTaggedPackages");
      return childProcess.exec("git", ["diff-tree", "--name-only", "--no-commit-id", "--root", "-r", "-c", "HEAD"], execOpts).then(({ stdout }) => {
        const manifests = stdout.split("\n").filter((fp) => import_path.default.basename(fp) === "package.json");
        const locations = new Set(manifests.map((fp) => import_path.default.join(rootPath, import_path.default.dirname(fp))));
        return Array.from(packageGraph.values()).filter((node) => locations.has(node.location));
      });
    }
  }
});

// packages/lerna/src/commands/publish/lib/get-tagged-packages.ts
module.exports = require_get_tagged_packages();
