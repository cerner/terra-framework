"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _react = _interopRequireDefault(require("react"));
var _propTypes = _interopRequireDefault(require("prop-types"));
var _classnames = _interopRequireDefault(require("classnames"));
var _bind = _interopRequireDefault(require("classnames/bind"));
var _terraThemeContext = _interopRequireDefault(require("terra-theme-context"));
var _ListUtils = _interopRequireDefault(require("./ListUtils"));
var _ListSubsectionHeaderModule = _interopRequireDefault(require("./ListSubsectionHeader.module.scss"));
var _excluded = ["isCollapsed", "isCollapsible", "level", "metaData", "onBlur", "onClick", "onKeyDown", "onMouseDown", "onSelect", "refCallback", "title"];
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }
function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }
function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }
var cx = _bind.default.bind(_ListSubsectionHeaderModule.default);
var propTypes = {
  /**
   * @private Whether or not the subsection is collapsed.
   */
  isCollapsed: _propTypes.default.bool,
  /**
   * @private Whether or not the subsection can be collapsed.
   */
  isCollapsible: _propTypes.default.bool,
  /**
   * Optionally sets the heading level. One of `2`, `3`, `4`, `5`, `6`.
   */
  level: _propTypes.default.oneOf([2, 3, 4, 5, 6]),
  /**
   * @private The associated metaData to be provided in the onSelect callback.
   */
  // eslint-disable-next-line react/forbid-prop-types
  metaData: _propTypes.default.object,
  /**
   * @private Function callback for when the appropriate click or key action is performed.
   * Callback contains the javascript evnt and prop metadata, e.g. onSelect(event, metaData)
   */
  onSelect: _propTypes.default.func,
  /**
   * Function callback passthrough for the ref of the section li.
   */
  refCallback: _propTypes.default.func,
  /**
   * Title text to be placed within the subsection header.
   */
  title: _propTypes.default.string.isRequired,
  /**
   * @private Callback function not intended for use with this API, but if set pass it through to the element regardless.
   */
  onBlur: _propTypes.default.func,
  /**
   * @private Callback function not intended for use with this API, but if set pass it through to the element regardless.
   */
  onClick: _propTypes.default.func,
  /**
   * @private Callback function not intended for use with this API, but if set pass it through to the element regardless.
   */
  onKeyDown: _propTypes.default.func,
  /**
   * @private Callback function not intended for use with this API, but if set pass it through to the element regardless.
   */
  onMouseDown: _propTypes.default.func
};
var defaultProps = {
  isCollapsed: false,
  isCollapsible: false,
  level: 2
};
var ListSubsectionHeader = function ListSubsectionHeader(_ref) {
  var isCollapsed = _ref.isCollapsed,
    isCollapsible = _ref.isCollapsible,
    level = _ref.level,
    metaData = _ref.metaData,
    onBlur = _ref.onBlur,
    onClick = _ref.onClick,
    onKeyDown = _ref.onKeyDown,
    onMouseDown = _ref.onMouseDown,
    onSelect = _ref.onSelect,
    refCallback = _ref.refCallback,
    title = _ref.title,
    customProps = _objectWithoutProperties(_ref, _excluded);
  var theme = _react.default.useContext(_terraThemeContext.default);
  var sectionHeaderClassNames = (0, _classnames.default)(cx('subsection-header', {
    'is-collapsible': isCollapsible
  }), customProps.className);
  var attrSpread = {};
  var Element = "h".concat(level);
  var titleElement = /*#__PURE__*/_react.default.createElement("div", {
    className: cx('fill')
  }, title);
  var accordionIcon;
  if (isCollapsible) {
    accordionIcon = /*#__PURE__*/_react.default.createElement("div", {
      className: cx('start')
    }, /*#__PURE__*/_react.default.createElement("span", {
      className: cx(['accordion-icon', {
        'is-open': !isCollapsed
      }])
    }));
    attrSpread.onClick = _ListUtils.default.wrappedOnClickForItem(onClick, onSelect, metaData);
    attrSpread.onKeyDown = _ListUtils.default.wrappedOnKeyDownForItem(onKeyDown, onSelect, metaData);
    attrSpread.tabIndex = '0';
    attrSpread.role = 'button';
    attrSpread['aria-expanded'] = !isCollapsed;
    attrSpread['data-item-show-focus'] = 'true';
    attrSpread.onBlur = _ListUtils.default.wrappedEventCallback(onBlur, function (event) {
      return event.currentTarget.setAttribute('data-item-show-focus', 'true');
    });
    attrSpread.onMouseDown = _ListUtils.default.wrappedEventCallback(onMouseDown, function (event) {
      return event.currentTarget.setAttribute('data-item-show-focus', 'false');
    });
  }
  return /*#__PURE__*/_react.default.createElement("li", {
    className: cx(theme.className)
  }, /*#__PURE__*/_react.default.createElement(Element, {
    className: cx('title')
  }, /*#__PURE__*/_react.default.createElement("div", _extends({}, customProps, attrSpread, {
    className: sectionHeaderClassNames,
    ref: refCallback
  }), accordionIcon, titleElement)));
};
ListSubsectionHeader.propTypes = propTypes;
ListSubsectionHeader.defaultProps = defaultProps;
var _default = ListSubsectionHeader;
exports.default = _default;