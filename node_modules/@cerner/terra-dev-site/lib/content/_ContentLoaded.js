"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _react = _interopRequireDefault(require("react"));
var _propTypes = _interopRequireDefault(require("prop-types"));
var _bind = _interopRequireDefault(require("classnames/bind"));
var _theme = require("terra-application/lib/theme");
var _ContentLoadedModule = _interopRequireDefault(require("./ContentLoaded.module.scss"));
var cx = _bind.default.bind(_ContentLoadedModule.default);
var propTypes = {
  /**
   * The type of the content loaded
   */
  type: _propTypes.default.string,
  /**
   * The content to render
   */
  children: _propTypes.default.element.isRequired,
  /**
   * Set to true if scroll styles should be applied to the container.
   */
  isScrollContainer: _propTypes.default.bool
};
var ContentLoaded = function ContentLoaded(_ref) {
  var children = _ref.children,
    type = _ref.type,
    isScrollContainer = _ref.isScrollContainer;
  var theme = _react.default.useContext(_theme.ThemeContext);

  // Re enable if hash links aren't working
  // useEffect(() => {
  //   if (!window.location || window.location.length < 2) {
  //     return;
  //   }
  //   const elementName = window.location.hash.slice(1);
  //   const element = document.getElementById(elementName);
  //   if (element) {
  //     element.scrollIntoView();
  //   }
  // }, []);

  return /*#__PURE__*/_react.default.createElement("div", {
    id: "site",
    "data-terra-dev-site-content": true,
    "data-terra-test-content": true,
    className: cx(theme.className, 'dev-site-content', {
      markdown: ['md', 'mdx'].includes(type),
      scroll: isScrollContainer
    })
  }, children);
};
ContentLoaded.propTypes = propTypes;
var _default = ContentLoaded;
exports.default = _default;