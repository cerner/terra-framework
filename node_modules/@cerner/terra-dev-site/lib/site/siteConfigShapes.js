"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.titleConfigShape = exports.sitesShape = exports.settingsConfigShape = exports.routesMapShape = exports.pageContentConfigShape = exports.pageConfigShape = exports.navigationConfigShape = exports.default = exports.contentImportsShape = void 0;
var _propTypes = _interopRequireDefault(require("prop-types"));
/**
 * Object describing in site configurable settings
 */
var settingsConfigShape = _propTypes.default.shape({
  /**
   * By default the site is set to this theme
   */
  defaultTheme: _propTypes.default.string,
  /**
   * By default the site is set to this locale
   */
  defaultLocale: _propTypes.default.string,
  /**
   * By default the site is set to this direction
   */
  defaultDirection: _propTypes.default.string
});

/**
 * Additional Sites that can be switched to.
 */
exports.settingsConfigShape = settingsConfigShape;
var sitesShape = _propTypes.default.arrayOf(_propTypes.default.shape({
  /**
   * The path to the site
   */
  path: _propTypes.default.string,
  /**
   * The title of the site
   */
  title: _propTypes.default.string,
  /**
   * The url to navigate to the site
   */
  url: _propTypes.default.string
}));

/**
 * Describes the extensions
 */
exports.sitesShape = sitesShape;
var extensionItemsShape = _propTypes.default.arrayOf(_propTypes.default.shape({
  /**
   * The react key for the extension.
   */
  key: _propTypes.default.string,
  /**
   * The text describing the extension.
   */
  text: _propTypes.default.string,
  /**
   * The icon to represent the extension.
   */
  icon: _propTypes.default.elementType,
  /**
   * The modal to launch from the extension.
   */
  modal: _propTypes.default.elementType
}));

/**
 * Describes page content
 */
var pageContentConfigShape = _propTypes.default.shape({
  /**
   * The path to the page
   */
  path: _propTypes.default.string,
  /**
   * Text for the page
   */
  label: _propTypes.default.string.isRequired,
  /**
   * The type of the content being loaded
   */
  type: _propTypes.default.string.isRequired
});

/**
 * Describes navigation config
 */
exports.pageContentConfigShape = pageContentConfigShape;
var navigationConfigShape = _propTypes.default.arrayOf(_propTypes.default.shape({
  /**
   * The text for the nav item
   */
  label: _propTypes.default.string.isRequired,
  /**
   * The singular page config item
   */
  pageConfig: pageContentConfigShape,
  /**
   * children
   */
  // eslint-disable-next-line react/forbid-prop-types
  children: _propTypes.default.array
}));

/**
 * Path to imports map
 */
exports.navigationConfigShape = navigationConfigShape;
var contentImportsShape = _propTypes.default.object;
/**
 * Path to page config map
 */
exports.contentImportsShape = contentImportsShape;
var pageConfigShape = _propTypes.default.object;
/**
 * Short routes to content routes.
 */
exports.pageConfigShape = pageConfigShape;
var routesMapShape = _propTypes.default.object;

/**
 * Describes the title config
 */
exports.routesMapShape = routesMapShape;
var titleConfigShape = _propTypes.default.shape({
  /**
   * Title for site
   */
  title: _propTypes.default.string.isRequired,
  /**
   * Headline for site
   */
  subline: _propTypes.default.string,
  /**
   * subline for site
   */
  headline: _propTypes.default.string
});

/**
 * Object describing the generated dev-site-config object.
 */
exports.titleConfigShape = titleConfigShape;
var siteConfigShape = _propTypes.default.shape({
  /**
   * The basename for the application.
   */
  basename: _propTypes.default.string.isRequired,
  /**
   * The map of routes to lazy components.
   */
  contentImports: contentImportsShape.isRequired,
  /**
   * Custom extensions
   */
  extensionItems: extensionItemsShape.isRequired,
  /**
   * Configuration layout out primary and secondary navigation.
   */
  navigationConfig: navigationConfigShape,
  /**
   * The map of routes to page config
   */
  pageConfig: pageConfigShape.isRequired,
  /**
   * map of routes to redirect to content routes.
   */
  routesMap: routesMapShape.isRequired,
  /**
   * Object describing in site configurable settings
   */
  settingsConfig: settingsConfigShape.isRequired,
  /**
   * Sites to switch to
   */
  sites: sitesShape.isRequired,
  /**
   * Describes the site name
   */
  titleConfig: titleConfigShape.isRequired,
  /**
   * A bucket of config useful when extending dev site.
   */
  // eslint-disable-next-line react/forbid-prop-types
  additionalConfig: _propTypes.default.object
});
var _default = siteConfigShape;
exports.default = _default;