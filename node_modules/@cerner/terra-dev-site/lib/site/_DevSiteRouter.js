"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _react = _interopRequireDefault(require("react"));
var _reactRouterDom = require("react-router-dom");
var _propTypes = _interopRequireDefault(require("prop-types"));
var _siteConfigShapes = require("./siteConfigShapes");
var _session = _interopRequireDefault(require("../browser-router-redirect/session"));
var propTypes = {
  /**
   * The site config for the application.
   */
  sites: _siteConfigShapes.sitesShape.isRequired,
  /**
   * The map of routes to redirect to
   */
  routesMap: _siteConfigShapes.routesMapShape.isRequired,
  /**
   * Children
   */
  children: _propTypes.default.node.isRequired
};
var DevSiteRouter = function DevSiteRouter(_ref) {
  var sites = _ref.sites,
    routesMap = _ref.routesMap,
    children = _ref.children;
  var isRoot = (0, _reactRouterDom.useRouteMatch)('/');
  var location = (0, _reactRouterDom.useLocation)();

  // Remove # Route if at root.
  if (isRoot && location.hash.startsWith('#/')) {
    return /*#__PURE__*/_react.default.createElement(_reactRouterDom.Redirect, {
      to: "/".concat(location.hash.slice(2))
    });
  }
  var pathname = location.pathname.toLocaleLowerCase();

  // Redirect to reserved routes other sites.
  var reservedExternalApp = sites.find(function (site) {
    return pathname.startsWith("/".concat(site.path));
  });
  if (reservedExternalApp) {
    if ((0, _session.default)() !== undefined) {
      window.sessionStorage.redirect = window.location.href;
    }
    window.location.pathname = reservedExternalApp.url;
    return null;
  }

  // Redirect to exact path from
  var pathWithoutTrailingSlash = pathname.length !== 1 && pathname.endsWith('/') ? pathname.slice(0, -1) : pathname;
  var primaryNavPath = routesMap[pathWithoutTrailingSlash];
  if (primaryNavPath) {
    return /*#__PURE__*/_react.default.createElement(_reactRouterDom.Redirect, {
      to: primaryNavPath
    });
  }
  return children;
};
DevSiteRouter.propTypes = propTypes;
var _default = DevSiteRouter;
exports.default = _default;