"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _typeof = require("@babel/runtime/helpers/typeof");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));
var _react = _interopRequireDefault(require("react"));
var _propTypes = _interopRequireDefault(require("prop-types"));
var _prismReactRenderer = _interopRequireWildcard(require("prism-react-renderer"));
var _bind = _interopRequireDefault(require("classnames/bind"));
var _MarkdownTagsModule = _interopRequireDefault(require("./MarkdownTags.module.scss"));
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
var cx = _bind.default.bind(_MarkdownTagsModule.default);
var propTypes = {
  /**
   * Children for the component.
   */
  children: _propTypes.default.node,
  /**
   * ClassName for the component.
   */
  className: _propTypes.default.string
};
var Code = function Code(_ref) {
  var children = _ref.children,
    className = _ref.className;
  var language = (className || '').replace(/language-/, '');
  return (
    /*#__PURE__*/
    // We remove the theme to just use the css theme.
    _react.default.createElement(_prismReactRenderer.default, (0, _extends2.default)({}, _prismReactRenderer.defaultProps, {
      code: children,
      language: language,
      theme: undefined
    }), function (_ref2) {
      var highlightClassName = _ref2.className,
        tokens = _ref2.tokens,
        getLineProps = _ref2.getLineProps,
        getTokenProps = _ref2.getTokenProps;
      return (
        /*#__PURE__*/
        // add the code block class.
        _react.default.createElement("code", {
          className: cx('code', highlightClassName)
        }, tokens.slice(0, -1).map(function (line, i) {
          return /*#__PURE__*/_react.default.createElement("div", getLineProps({
            line: line,
            key: i
          }), line.map(function (token, key) {
            return /*#__PURE__*/_react.default.createElement("span", getTokenProps({
              token: token,
              key: key
            }));
          }));
        }))
      );
    })
  );
};
Code.propTypes = propTypes;
var _default = Code;
exports.default = _default;