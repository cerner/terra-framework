"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _typeof = require("@babel/runtime/helpers/typeof");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));
var _react = _interopRequireWildcard(require("react"));
var _propTypes = _interopRequireDefault(require("prop-types"));
var _bind = _interopRequireDefault(require("classnames/bind"));
var _theme = require("terra-application/lib/theme");
var _IconChevronLeft = _interopRequireDefault(require("terra-icon/lib/icon/IconChevronLeft"));
var _IconChevronRight = _interopRequireDefault(require("terra-icon/lib/icon/IconChevronRight"));
var _keycodeJs = require("keycode-js");
var _ExampleTemplateModule = _interopRequireDefault(require("./ExampleTemplate.module.scss"));
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
var cx = _bind.default.bind(_ExampleTemplateModule.default);
var propTypes = {
  /**
   * The example component.
   */
  example: _propTypes.default.element,
  /**
   * The example source code.
   */
  exampleSrc: _propTypes.default.element,
  /**
   * The example source css.
   */
  exampleCssSrc: _propTypes.default.element,
  /**
   * The example title.
   */
  title: _propTypes.default.string,
  /**
   * The example description.
   */
  description: _propTypes.default.node,
  isExpanded: _propTypes.default.bool
};
var defaultProps = {
  isExpanded: false
};

/**
 * Enables focus styles for the target of the given event. Typically used as an onBlur callback on selectable elements.
 */
var enableFocusStyles = function enableFocusStyles(event) {
  event.currentTarget.setAttribute('data-focus-styles-enabled', 'true');
};

/**
 * Disables focus styles for the target of the given event. Typically used as an onMouseDown callback on selectable elements.
 */
var disableFocusStyles = function disableFocusStyles(event) {
  event.currentTarget.setAttribute('data-focus-styles-enabled', 'false');
};
var ExampleTemplate = function ExampleTemplate(_ref) {
  var example = _ref.example,
    exampleSrc = _ref.exampleSrc,
    exampleCssSrc = _ref.exampleCssSrc,
    title = _ref.title,
    description = _ref.description,
    isExpanded = _ref.isExpanded;
  var _useState = (0, _react.useState)(isExpanded),
    _useState2 = (0, _slicedToArray2.default)(_useState, 2),
    codeIsVisible = _useState2[0],
    setCodeIsVisible = _useState2[1];
  var _useState3 = (0, _react.useState)(false),
    _useState4 = (0, _slicedToArray2.default)(_useState3, 2),
    cssIsVisible = _useState4[0],
    setCssIsVisible = _useState4[1];
  var theme = _react.default.useContext(_theme.ThemeContext);
  var cssButtonVisible = exampleCssSrc !== undefined;
  var handleCssToggle = function handleCssToggle() {
    setCssIsVisible(!cssIsVisible);
    if (codeIsVisible) {
      setCodeIsVisible(!codeIsVisible);
    }
  };
  var handleCodeToggle = function handleCodeToggle() {
    setCodeIsVisible(!codeIsVisible);
    if (cssIsVisible) {
      setCssIsVisible(!cssIsVisible);
    }
  };
  var handleKeyDown = function handleKeyDown(event, handleToggle) {
    if (event.nativeEvent.keyCode === _keycodeJs.KEY_SPACE || event.nativeEvent.keyCode === _keycodeJs.KEY_RETURN) {
      event.preventDefault();
      handleToggle();
    }
  };
  var renderButtons = function renderButtons() {
    if (!exampleSrc) {
      return null;
    }
    return /*#__PURE__*/_react.default.createElement("div", {
      className: cx('button-container')
    }, cssButtonVisible && /*#__PURE__*/_react.default.createElement("button", {
      type: "button",
      className: cx('css-toggle', 'item', {
        'is-selected': cssIsVisible
      }),
      onClick: handleCssToggle,
      onKeyDown: function onKeyDown(event) {
        return handleKeyDown(event, handleCssToggle);
      },
      onBlur: enableFocusStyles,
      onMouseDown: disableFocusStyles,
      tabIndex: 0,
      "data-focus-styles-enabled": true
    }, /*#__PURE__*/_react.default.createElement(_IconChevronLeft.default, {
      className: cx('chevron')
    }), /*#__PURE__*/_react.default.createElement("span", null, "CSS"), /*#__PURE__*/_react.default.createElement(_IconChevronRight.default, {
      className: cx('chevron')
    })), /*#__PURE__*/_react.default.createElement("button", {
      type: "button",
      className: cx('code-toggle', 'item', {
        'is-selected': codeIsVisible
      }),
      onClick: handleCodeToggle,
      onKeyDown: function onKeyDown(event) {
        return handleKeyDown(event, handleCodeToggle);
      },
      onBlur: enableFocusStyles,
      onMouseDown: disableFocusStyles,
      tabIndex: 0,
      "data-focus-styles-enabled": true
    }, /*#__PURE__*/_react.default.createElement(_IconChevronLeft.default, {
      className: cx('chevron')
    }), /*#__PURE__*/_react.default.createElement("span", null, "Code"), /*#__PURE__*/_react.default.createElement(_IconChevronRight.default, {
      className: cx('chevron')
    })));
  };
  var renderExamples = function renderExamples() {
    return /*#__PURE__*/_react.default.createElement("div", null, cssIsVisible && /*#__PURE__*/_react.default.createElement("div", {
      className: cx('css')
    }, exampleCssSrc), codeIsVisible && /*#__PURE__*/_react.default.createElement("div", {
      className: cx('code')
    }, exampleSrc));
  };
  return /*#__PURE__*/_react.default.createElement("div", {
    className: cx('template', theme.className)
  }, /*#__PURE__*/_react.default.createElement("div", {
    className: cx('header')
  }, title && /*#__PURE__*/_react.default.createElement("h2", {
    className: cx('title')
  }, title)), /*#__PURE__*/_react.default.createElement("div", {
    className: cx('content')
  }, description && /*#__PURE__*/_react.default.createElement("div", {
    className: cx('description')
  }, description), example), /*#__PURE__*/_react.default.createElement("div", {
    className: cx('footer')
  }, renderButtons(), renderExamples()));
};
ExampleTemplate.propTypes = propTypes;
ExampleTemplate.defaultProps = defaultProps;
var _default = ExampleTemplate;
exports.default = _default;