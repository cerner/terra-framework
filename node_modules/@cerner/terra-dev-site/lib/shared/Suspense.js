"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));
var _react = _interopRequireDefault(require("react"));
var _propTypes = _interopRequireDefault(require("prop-types"));
var _ErrorBoundary = _interopRequireDefault(require("./ErrorBoundary"));
var CallbackFallback = function CallbackFallback(_ref) {
  var children = _ref.children,
    onMount = _ref.onMount;
  _react.default.useLayoutEffect(function () {
    onMount(true);
    return function () {
      return onMount(false);
    };
  }, [onMount]);
  return children || /*#__PURE__*/_react.default.createElement("div", null);
};
CallbackFallback.propTypes = {
  onMount: _propTypes.default.func,
  children: _propTypes.default.node
};
var Suspense = function Suspense(_ref2) {
  var onLoadStart = _ref2.onLoadStart,
    onLoadEnd = _ref2.onLoadEnd,
    onError = _ref2.onError,
    fallback = _ref2.fallback,
    children = _ref2.children;
  var _React$useState = _react.default.useState(false),
    _React$useState2 = (0, _slicedToArray2.default)(_React$useState, 2),
    fallbackIsRendered = _React$useState2[0],
    setFallbackIsRendered = _React$useState2[1];
  var loadingIndicatorRef = _react.default.useRef(false);
  _react.default.useEffect(function () {
    if (onLoadStart && fallbackIsRendered && !loadingIndicatorRef.current) {
      loadingIndicatorRef.current = true;
      onLoadStart();
    }
  }, [onLoadStart, fallbackIsRendered]);
  _react.default.useEffect(function () {
    if (onLoadEnd && !fallbackIsRendered && loadingIndicatorRef.current) {
      onLoadEnd();
    }
  }, [onLoadEnd, fallbackIsRendered]);
  return /*#__PURE__*/_react.default.createElement(_ErrorBoundary.default, {
    onCatchError: function onCatchError(caughtError) {
      if (onError) {
        onError(caughtError);
      }
    }
  }, /*#__PURE__*/_react.default.createElement(_react.default.Suspense, {
    fallback: /*#__PURE__*/_react.default.createElement(CallbackFallback, {
      onMount: setFallbackIsRendered
    }, fallback)
  }, children));
};
Suspense.propTypes = {
  onLoadStart: _propTypes.default.func,
  onLoadEnd: _propTypes.default.func,
  onError: _propTypes.default.func,
  fallback: _propTypes.default.node,
  children: _propTypes.default.node
};
var _default = Suspense;
exports.default = _default;