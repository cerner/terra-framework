"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _react = _interopRequireDefault(require("react"));
var _propTypes = _interopRequireDefault(require("prop-types"));
var _reactRouterDom = require("react-router-dom");
var _IconSearch = _interopRequireDefault(require("terra-icon/lib/icon/IconSearch"));
var _IconTile = _interopRequireDefault(require("terra-icon/lib/icon/IconTile"));
var _applicationNavigation = _interopRequireDefault(require("terra-application/lib/application-navigation"));
var _disclosureManager = require("terra-application/lib/disclosure-manager");
var _DevSitePage = _interopRequireDefault(require("../pages/_DevSitePage"));
var _pageContainer = _interopRequireDefault(require("./page-container"));
var _NotFoundPage = _interopRequireDefault(require("../pages/_NotFoundPage"));
var _SettingsModal = _interopRequireDefault(require("../modals/_SettingsModal"));
var _SearchModal = _interopRequireDefault(require("../modals/_SearchModal"));
var _ApplicationSwitcherModal = _interopRequireDefault(require("../modals/_ApplicationSwitcherModal"));
var _siteConfigShapes = _interopRequireDefault(require("../site/siteConfigShapes"));
var _DevSiteSecondaryNavigationLayout = _interopRequireDefault(require("./_DevSiteSecondaryNavigationLayout"));
var _ContentLayout = _interopRequireDefault(require("./_ContentLayout"));
var propTypes = {
  /**
   * The site config for the application.
   */
  siteConfig: _siteConfigShapes.default.isRequired,
  /**
   * An override component for a custom application base. Must render children and adhere to the terra application base api.
   */
  ApplicationNavigation: _propTypes.default.func
};
var DevSiteNavigationLayout = function DevSiteNavigationLayout(_ref) {
  var siteConfig = _ref.siteConfig,
    ApplicationNavigation = _ref.ApplicationNavigation;
  var location = (0, _reactRouterDom.useLocation)();
  var history = (0, _reactRouterDom.useHistory)();
  var isHome = (0, _reactRouterDom.useRouteMatch)('/home');
  var disclosureManager = _react.default.useContext(_disclosureManager.DisclosureManagerContext);
  var AppNav = ApplicationNavigation || _applicationNavigation.default;
  var setNavigationState = function setNavigationState(key) {
    history.push(siteConfig.routesMap[key]);
  };
  var handleSettingsSelection = function handleSettingsSelection() {
    disclosureManager.disclose({
      preferredType: 'modal',
      size: 'small',
      content: {
        key: 'terra-dev-site.settings',
        component: /*#__PURE__*/_react.default.createElement(_SettingsModal.default, null)
      }
    });
  };
  var handleExtensionSelection = function handleExtensionSelection(key, metaData) {
    metaData.disclose();
  };
  var handleUtilityItemSelection = function handleUtilityItemSelection(key, metaData) {
    metaData.disclose();
  };
  var getExtensionItems = function getExtensionItems() {
    var extensionArray = (siteConfig.extensionItems || []).map(function (ext) {
      return {
        icon: /*#__PURE__*/_react.default.createElement(ext.icon, null),
        key: ext.key,
        text: ext.text,
        metaData: {
          disclose: function disclose() {
            disclosureManager.disclose({
              preferredType: 'modal',
              size: 'large',
              content: {
                key: ext.key,
                component: /*#__PURE__*/_react.default.createElement(ext.modal, null)
              }
            });
          }
        }
      };
    });
    extensionArray.unshift({
      icon: /*#__PURE__*/_react.default.createElement(_IconSearch.default, null),
      key: 'terra-dev-site.search',
      text: 'Search',
      metaData: {
        disclose: function disclose() {
          disclosureManager.disclose({
            preferredType: 'modal',
            size: 'large',
            content: {
              key: 'terra-dev-site.search',
              component: /*#__PURE__*/_react.default.createElement(_SearchModal.default, {
                pageConfig: siteConfig.pageConfig
              })
            }
          });
        }
      }
    });
    return extensionArray;
  };
  var getUtilityItems = function getUtilityItems(sites) {
    var utilityItems = [];
    if (sites.length > 0) {
      utilityItems.push({
        icon: /*#__PURE__*/_react.default.createElement(_IconTile.default, null),
        key: 'terra-dev-site.application-switcher',
        text: 'Application Switcher',
        metaData: {
          disclose: function disclose() {
            disclosureManager.disclose({
              preferredType: 'modal',
              size: 'tiny',
              content: {
                key: 'terra-dev-site.application-switcher',
                component: /*#__PURE__*/_react.default.createElement(_ApplicationSwitcherModal.default, {
                  sites: sites
                })
              }
            });
          }
        }
      });
    }
    return utilityItems;
  };
  var activeNavigationKey = "/".concat(location.pathname.toLocaleLowerCase().split('/')[1]);
  var activeNavItem = siteConfig.navigationConfig.find(function (element) {
    return element.path === activeNavigationKey;
  });
  var getContent = function getContent() {
    if (!activeNavItem) {
      return /*#__PURE__*/_react.default.createElement(_pageContainer.default, null, /*#__PURE__*/_react.default.createElement(_NotFoundPage.default, null));
    }
    if (activeNavItem.pageConfig) {
      if (isHome) {
        return /*#__PURE__*/_react.default.createElement(_ContentLayout.default, {
          pageContentConfig: activeNavItem.pageConfig,
          contentImports: siteConfig.contentImports
        });
      }
      return /*#__PURE__*/_react.default.createElement(_pageContainer.default, null, /*#__PURE__*/_react.default.createElement(_DevSitePage.default, {
        pageContentConfig: activeNavItem.pageConfig,
        contentImports: siteConfig.contentImports
      }));
    }
    return /*#__PURE__*/_react.default.createElement(_DevSiteSecondaryNavigationLayout.default, {
      label: activeNavItem.label,
      id: activeNavItem.path.substring(1),
      config: activeNavItem.children,
      contentImports: siteConfig.contentImports
    });
  };
  return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement(AppNav, {
    id: "terra-dev-site",
    titleConfig: siteConfig.titleConfig,
    navigationItems: siteConfig.navigationConfig.map(function (navItem) {
      return {
        key: navItem.path,
        text: navItem.label
      };
    }),
    onSelectSettings: handleSettingsSelection,
    onSelectExtensionItem: handleExtensionSelection,
    onSelectUtilityItem: handleUtilityItemSelection,
    onSelectNavigationItem: function onSelectNavigationItem(key) {
      setNavigationState(key);
    },
    activeNavigationItemKey: activeNavItem ? activeNavigationKey : undefined,
    extensionItems: getExtensionItems(),
    utilityItems: getUtilityItems(siteConfig.sites)
  }, getContent()));
};
DevSiteNavigationLayout.propTypes = propTypes;
var _default = DevSiteNavigationLayout;
exports.default = _default;