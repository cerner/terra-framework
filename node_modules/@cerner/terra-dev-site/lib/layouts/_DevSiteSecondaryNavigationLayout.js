"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _typeof = require("@babel/runtime/helpers/typeof");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _react = _interopRequireDefault(require("react"));
var _propTypes = _interopRequireDefault(require("prop-types"));
var _reactRouterDom = require("react-router-dom");
var _navigationItem = _interopRequireWildcard(require("./secondary-navigation-layout/navigation-item"));
var _pageContainer = _interopRequireDefault(require("./page-container"));
var _SecondaryNavigationLayout = _interopRequireDefault(require("./secondary-navigation-layout/SecondaryNavigationLayout"));
var _SecondaryNavigationGroup = _interopRequireDefault(require("./secondary-navigation-layout/SecondaryNavigationGroup"));
var _DevSitePage = _interopRequireDefault(require("../pages/_DevSitePage"));
var _NotFoundPage = _interopRequireDefault(require("../pages/_NotFoundPage"));
var _siteConfigShapes = require("../site/siteConfigShapes");
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
var propTypes = {
  /**
   * The unique id for secondary navigation layout.
   */
  id: _propTypes.default.string.isRequired,
  /**
   * The map linking the route to the content component to load.
   */
  contentImports: _siteConfigShapes.contentImportsShape.isRequired,
  /**
   * The navigation configuration describing the secondary navigation
   */
  config: _siteConfigShapes.navigationConfigShape,
  /**
   * The label to apply to secondary navigation.
   */
  label: _propTypes.default.string.isRequired
};
var retrieveNavItems = function retrieveNavItems(navItems, contentImports) {
  return navItems.map(function (navItem) {
    if (navItem.children) {
      return /*#__PURE__*/_react.default.createElement(_SecondaryNavigationGroup.default, {
        key: navItem.label,
        label: navItem.label
      }, retrieveNavItems(navItem.children, contentImports));
    }
    return /*#__PURE__*/_react.default.createElement(_navigationItem.default, {
      key: navItem.path,
      navigationKey: navItem.path,
      label: navItem.label,
      renderPage: function renderPage() {
        return /*#__PURE__*/_react.default.createElement(_DevSitePage.default, {
          pageContentConfig: navItem,
          contentImports: contentImports
        });
      }
    });
  });
};
var DevSiteSecondaryNavigationLayout = function DevSiteSecondaryNavigationLayout(_ref) {
  var id = _ref.id,
    label = _ref.label,
    config = _ref.config,
    contentImports = _ref.contentImports;
  var location = (0, _reactRouterDom.useLocation)();
  var history = (0, _reactRouterDom.useHistory)();
  var _React$useContext = _react.default.useContext(_navigationItem.NavigationItemContext),
    isActive = _React$useContext.isActive;
  var navItems = _react.default.useMemo(function () {
    return retrieveNavItems(config, contentImports);
  }, [config, contentImports]);
  if (!isActive) {
    return null;
  }
  return /*#__PURE__*/_react.default.createElement(_SecondaryNavigationLayout.default, {
    id: id,
    activeNavigationKey: location.pathname.toLocaleLowerCase(),
    label: label,
    onSelectNavigationItem: function onSelectNavigationItem(key) {
      return history.push(key);
    },
    renderNavigationFallback: function renderNavigationFallback() {
      return /*#__PURE__*/_react.default.createElement(_pageContainer.default, {
        isMain: true
      }, /*#__PURE__*/_react.default.createElement(_NotFoundPage.default, null));
    }
  }, navItems);
};
DevSiteSecondaryNavigationLayout.propTypes = propTypes;
var _default = DevSiteSecondaryNavigationLayout;
exports.default = _default;