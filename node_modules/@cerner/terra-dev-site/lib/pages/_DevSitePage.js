"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _typeof = require("@babel/runtime/helpers/typeof");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));
var _react = _interopRequireDefault(require("react"));
var _IconStartPresenting = _interopRequireDefault(require("terra-icon/lib/icon/IconStartPresenting"));
var _IconSettings = _interopRequireDefault(require("terra-icon/lib/icon/IconSettings"));
var _reactRouterDom = require("react-router-dom");
var _terraButton = _interopRequireDefault(require("terra-button"));
var _disclosureManager = require("terra-application/lib/disclosure-manager");
var _page = _interopRequireWildcard(require("./page"));
var _Suspense = _interopRequireDefault(require("../shared/Suspense"));
var _siteConfigShapes = require("../site/siteConfigShapes");
var _ContentLoaded = _interopRequireDefault(require("../content/_ContentLoaded"));
var _NotFoundPage = _interopRequireDefault(require("./_NotFoundPage"));
var _navigationItem = require("../layouts/secondary-navigation-layout/navigation-item");
var _SettingsModal = _interopRequireDefault(require("../modals/_SettingsModal"));
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
var propTypes = {
  /**
   * Config describing the page
   */
  pageContentConfig: _siteConfigShapes.pageContentConfigShape.isRequired,
  /**
   * Function called to request closing the modal
   */
  contentImports: _siteConfigShapes.contentImportsShape.isRequired
};
var DevSitePage = function DevSitePage(_ref) {
  var pageContentConfig = _ref.pageContentConfig,
    contentImports = _ref.contentImports;
  var location = (0, _reactRouterDom.useLocation)();
  var history = (0, _reactRouterDom.useHistory)();
  var _React$useContext = _react.default.useContext(_navigationItem.NavigationItemContext),
    isActive = _React$useContext.isActive;
  var disclosureManager = _react.default.useContext(_disclosureManager.DisclosureManagerContext);
  var _React$useState = _react.default.useState(),
    _React$useState2 = (0, _slicedToArray2.default)(_React$useState, 2),
    isLoadingComponent = _React$useState2[0],
    setIsLoadingComponent = _React$useState2[1];
  var _React$useState3 = _react.default.useState(),
    _React$useState4 = (0, _slicedToArray2.default)(_React$useState3, 2),
    loadingFailed = _React$useState4[0],
    setLoadingFailed = _React$useState4[1];
  if (!isActive) {
    return null;
  }
  if (!pageContentConfig) {
    return _NotFoundPage.default;
  }
  var ContentComponent = contentImports[pageContentConfig.path];
  if (!ContentComponent) {
    return _NotFoundPage.default;
  }
  var pageActions = /*#__PURE__*/_react.default.createElement(_page.default.Actions, null, /*#__PURE__*/_react.default.createElement(_page.default.Action, {
    actionKey: "raw",
    label: "Raw",
    icon: /*#__PURE__*/_react.default.createElement(_IconStartPresenting.default, null),
    onSelect: function onSelect() {
      history.push("/raw".concat(pageContentConfig.path));
    }
  }), /*#__PURE__*/_react.default.createElement(_page.default.Action, {
    actionKey: "settings",
    label: "Settings",
    icon: /*#__PURE__*/_react.default.createElement(_IconSettings.default, null),
    onSelect: function onSelect() {
      disclosureManager.disclose({
        preferredType: 'modal',
        size: 'small',
        content: {
          key: 'terra-dev-site.settings',
          component: /*#__PURE__*/_react.default.createElement(_SettingsModal.default, null)
        }
      });
    }
  }));
  var loadingOverlay;
  if (isLoadingComponent) {
    loadingOverlay = /*#__PURE__*/_react.default.createElement(_page.PageActivityOverlay, {
      variant: "loading"
    });
  }
  var statusOverlay;
  if (loadingFailed) {
    statusOverlay = /*#__PURE__*/_react.default.createElement(_ContentLoaded.default, {
      type: pageContentConfig.type
    }, /*#__PURE__*/_react.default.createElement(_page.StatusLayout, {
      message: "Chunk failed to load.",
      variant: "error"
    }, /*#__PURE__*/_react.default.createElement(_terraButton.default, {
      text: "Reload Site",
      onClick: function onClick() {
        location.reload();
      }
    })));
  }
  return /*#__PURE__*/_react.default.createElement(_page.default, {
    label: pageContentConfig.label,
    pageKey: pageContentConfig.path,
    actions: pageActions,
    activityOverlay: loadingOverlay,
    statusOverlay: statusOverlay
  }, /*#__PURE__*/_react.default.createElement(_Suspense.default, {
    onLoadStart: function onLoadStart() {
      setIsLoadingComponent(true);
    },
    onLoadEnd: function onLoadEnd() {
      setIsLoadingComponent(false);
    },
    onError: function onError() {
      setLoadingFailed(true);
      setIsLoadingComponent(false);
    }
  }, /*#__PURE__*/_react.default.createElement(_page.CardLayout, null, /*#__PURE__*/_react.default.createElement(_page.Card, {
    minHeightFill: true
  }, /*#__PURE__*/_react.default.createElement(_ContentLoaded.default, {
    type: pageContentConfig.type
  }, /*#__PURE__*/_react.default.createElement(ContentComponent, {
    key: pageContentConfig.path
  }))))));
};
DevSitePage.propTypes = propTypes;
var _default = DevSitePage;
exports.default = _default;