"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _typeof = require("@babel/runtime/helpers/typeof");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));
var _react = _interopRequireWildcard(require("react"));
var _propTypes = _interopRequireDefault(require("prop-types"));
var _bind = _interopRequireDefault(require("classnames/bind"));
var _terraMenu = _interopRequireDefault(require("terra-menu"));
var _IconChevronDown = _interopRequireDefault(require("terra-icon/lib/icon/IconChevronDown"));
var _terraButton = _interopRequireDefault(require("terra-button"));
var _MenuButtonModule = _interopRequireDefault(require("./MenuButton.module.scss"));
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
var cx = _bind.default.bind(_MenuButtonModule.default);
var propTypes = {
  /**
   * Button text
   */
  text: _propTypes.default.string.isRequired,
  /**
   * menu items
   */
  items: _propTypes.default.arrayOf(_propTypes.default.string).isRequired,
  /**
   * Selected menu item
   */
  selectedKey: _propTypes.default.string,
  /**
   * On change callback
   */
  onChange: _propTypes.default.func.isRequired
};
var MenuButton = function MenuButton(_ref) {
  var text = _ref.text,
    items = _ref.items,
    selectedKey = _ref.selectedKey,
    _onChange = _ref.onChange;
  var buttonRef = (0, _react.useRef)(null);
  var _useState = (0, _react.useState)(false),
    _useState2 = (0, _slicedToArray2.default)(_useState, 2),
    isOpen = _useState2[0],
    setIsOpen = _useState2[1];
  return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement(_terraMenu.default, {
    isOpen: isOpen,
    targetRef: function targetRef() {
      return buttonRef.current;
    },
    onRequestClose: function onRequestClose() {
      return setIsOpen(false);
    }
  }, /*#__PURE__*/_react.default.createElement(_terraMenu.default.ItemGroup, {
    key: text,
    onChange: function onChange(event, index) {
      setIsOpen(false);
      _onChange(items[index]);
    }
  }, items.map(function (item) {
    return /*#__PURE__*/_react.default.createElement(_terraMenu.default.Item, {
      text: item,
      key: item,
      isSelected: selectedKey === item
    });
  }))), /*#__PURE__*/_react.default.createElement(_terraButton.default, {
    text: text,
    className: cx('button'),
    icon: /*#__PURE__*/_react.default.createElement(_IconChevronDown.default, null),
    isReversed: true,
    variant: "ghost",
    refCallback: function refCallback(node) {
      buttonRef.current = node;
    },
    onClick: function onClick() {
      return setIsOpen(true);
    }
  }));
};
MenuButton.propTypes = propTypes;
var _default = MenuButton;
exports.default = _default;