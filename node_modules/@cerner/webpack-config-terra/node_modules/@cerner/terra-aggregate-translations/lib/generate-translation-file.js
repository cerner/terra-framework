"use strict";

var sortMessages = function sortMessages(messages) {
  var sortedKeys = Object.keys(messages).sort(function (a, b) {
    var lowerA = a.toLowerCase();
    var lowerB = b.toLowerCase();

    if (lowerA === lowerB) {
      return 0;
    }

    return lowerA < lowerB ? -1 : 1;
  });
  var sortedMessages = {};
  sortedKeys.forEach(function (messageKey) {
    sortedMessages[messageKey] = messages[messageKey];
    return undefined;
  });
  return sortedMessages;
};

var translationFile = function translationFile(locale, baseLocale, messages) {
  return "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.messages = exports.locale = exports.areTranslationsLoaded = undefined;\n\nvar _reactIntl = require('react-intl');\n\nvar _".concat(baseLocale, " = require('react-intl/locale-data/").concat(baseLocale, "');\n\nvar _").concat(baseLocale, "2 = _interopRequireDefault(_").concat(baseLocale, ");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n(0, _reactIntl.addLocaleData)(_").concat(baseLocale, "2.default);\n\nvar messages = ").concat(JSON.stringify(messages, null, 2), ";\nvar areTranslationsLoaded = true;\nvar locale = '").concat(locale, "';\nexports.areTranslationsLoaded = areTranslationsLoaded;\nexports.locale = locale;\nexports.messages = messages;\n");
};

var v5TranslationFile = function v5TranslationFile(messages) {
  return "'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n\n  var _default = ".concat(JSON.stringify(messages, null, 2), ";\n  exports.default = _default;\n");
};

var generateTranslationFile = function generateTranslationFile(locale, messages, isReactIntlV5) {
  var sortedMessages = sortMessages(messages);
  var baseLocale = locale.split('-')[0];

  if (isReactIntlV5) {
    return v5TranslationFile(sortedMessages);
  }

  return translationFile(locale, baseLocale, sortedMessages);
};

module.exports = generateTranslationFile;