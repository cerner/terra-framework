"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.SpacerSizes = exports.SpacerClassMappings = void 0;
var _SpacerClassMappings;
function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }
var SpacerSizes = {
  NONE: 'none',
  'SMALL-2': 'small-2',
  'SMALL-1': 'small-1',
  SMALL: 'small',
  MEDIUM: 'medium',
  LARGE: 'large',
  'LARGE+1': 'large+1',
  'LARGE+2': 'large+2',
  'LARGE+3': 'large+3',
  'LARGE+4': 'large+4'
};
exports.SpacerSizes = SpacerSizes;
var SpacerClassMappings = (_SpacerClassMappings = {}, _defineProperty(_SpacerClassMappings, SpacerSizes.NONE, 'none'), _defineProperty(_SpacerClassMappings, SpacerSizes['SMALL-2'], 'small-minus-2'), _defineProperty(_SpacerClassMappings, SpacerSizes['SMALL-1'], 'small-minus-1'), _defineProperty(_SpacerClassMappings, SpacerSizes.SMALL, 'small'), _defineProperty(_SpacerClassMappings, SpacerSizes.MEDIUM, 'medium'), _defineProperty(_SpacerClassMappings, SpacerSizes.LARGE, 'large'), _defineProperty(_SpacerClassMappings, SpacerSizes['LARGE+1'], 'large-plus-1'), _defineProperty(_SpacerClassMappings, SpacerSizes['LARGE+2'], 'large-plus-2'), _defineProperty(_SpacerClassMappings, SpacerSizes['LARGE+3'], 'large-plus-3'), _defineProperty(_SpacerClassMappings, SpacerSizes['LARGE+4'], 'large-plus-4'), _SpacerClassMappings);
exports.SpacerClassMappings = SpacerClassMappings;