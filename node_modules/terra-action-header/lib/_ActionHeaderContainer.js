"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _react = _interopRequireDefault(require("react"));
var _propTypes = _interopRequireDefault(require("prop-types"));
var _classnames = _interopRequireDefault(require("classnames"));
var _bind = _interopRequireDefault(require("classnames/bind"));
var _terraThemeContext = _interopRequireDefault(require("terra-theme-context"));
var _terraVisuallyHiddenText = _interopRequireDefault(require("terra-visually-hidden-text"));
var _reactIntl = require("react-intl");
var _ActionHeaderContainerModule = _interopRequireDefault(require("./ActionHeaderContainer.module.scss"));
var _excluded = ["children", "text", "startContent", "endContent", "level", "intl"];
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }
function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }
function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }
var cx = _bind.default.bind(_ActionHeaderContainerModule.default);
var propTypes = {
  /**
   * Child element to be displayed on the right end of the header.
   * The element passed as children will be decorated with flex attributes.
   */
  children: _propTypes.default.element,
  /**
   * Content to be displayed at the start of the header, placed before the title.
   */
  startContent: _propTypes.default.element,
  /**
   * Text to be displayed as the title in the header bar.
   */
  text: _propTypes.default.string,
  /**
   * Content to be displayed at the end of the header.
   * The element passed as endContent will be wrapped in a div with flex attributes.
   */
  endContent: _propTypes.default.element,
  /**
   * Sets the heading level. One of `1`, `2`, `3`, `4`, `5`, `6`. This helps screen readers to announce appropriate heading levels.
   * Changing 'level' will not visually change the style of the content.
   */
  level: _propTypes.default.oneOf([1, 2, 3, 4, 5, 6]).isRequired,
  /**
   * @private
   * The intl object to be injected for translations.
   */
  intl: _propTypes.default.shape({
    formatMessage: _propTypes.default.func
  })
};
var defaultProps = {
  text: undefined,
  startContent: undefined,
  endContent: undefined
};
var ActionHeaderContainer = function ActionHeaderContainer(_ref) {
  var children = _ref.children,
    text = _ref.text,
    startContent = _ref.startContent,
    endContent = _ref.endContent,
    level = _ref.level,
    intl = _ref.intl,
    customProps = _objectWithoutProperties(_ref, _excluded);
  var theme = _react.default.useContext(_terraThemeContext.default);
  var HeaderElement = "h".concat(level);
  var content = _react.default.Children.map(children, function (child) {
    return /*#__PURE__*/_react.default.cloneElement(child, {
      className: cx(['flex-collapse', children.props.className])
    });
  });
  var closeButtonId = "terra-action-header-close-button-".concat(customProps.id);
  var maximizeButtonId = "terra-action-header-maximize-button-".concat(customProps.id);
  var minimizeButtonId = "terra-action-header-minimize-button-".concat(customProps.id);
  var visuallyHiddenComponent = /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement(_terraVisuallyHiddenText.default, {
    "aria-hidden": true,
    id: closeButtonId,
    text: intl.formatMessage({
      id: 'Terra.actionHeader.close.description'
    }, {
      text: text
    })
  }), /*#__PURE__*/_react.default.createElement(_terraVisuallyHiddenText.default, {
    "aria-hidden": true,
    id: maximizeButtonId,
    text: intl.formatMessage({
      id: 'Terra.actionHeader.maximize.description'
    }, {
      text: text
    })
  }), /*#__PURE__*/_react.default.createElement(_terraVisuallyHiddenText.default, {
    "aria-hidden": true,
    id: minimizeButtonId,
    text: intl.formatMessage({
      id: 'Terra.actionHeader.minimize.description'
    }, {
      text: text
    })
  }));
  var titleElement = text ? /*#__PURE__*/_react.default.createElement("div", {
    className: cx('title-container')
  }, /*#__PURE__*/_react.default.createElement(HeaderElement, {
    className: cx('title')
  }, text)) : undefined;
  return /*#__PURE__*/_react.default.createElement("div", _extends({}, customProps, {
    className: (0, _classnames.default)(cx(['flex-header', theme.className]), customProps.className)
  }), startContent && /*#__PURE__*/_react.default.createElement("div", {
    className: cx('flex-end')
  }, startContent), /*#__PURE__*/_react.default.createElement("div", {
    className: cx('flex-fill')
  }, titleElement), content, endContent && /*#__PURE__*/_react.default.createElement("div", {
    className: cx('flex-end')
  }, endContent), /*#__PURE__*/_react.default.createElement("div", {
    className: cx('hidden-label')
  }, visuallyHiddenComponent));
};
ActionHeaderContainer.propTypes = propTypes;
ActionHeaderContainer.defaultProps = defaultProps;
var _default = (0, _reactIntl.injectIntl)(ActionHeaderContainer);
exports.default = _default;