import { BaseRequestOptions, BaseService, PaginatedRequestOptions, Sudo } from '../infrastructure';
import { SnippetVisibility } from './Snippets';
export declare class ProjectSnippets extends BaseService {
    all(projectId: string | number, options?: PaginatedRequestOptions): Promise<import("../infrastructure").GetResponse>;
    content(projectId: string | number, snippetId: number, options?: Sudo): Promise<import("../infrastructure").GetResponse>;
    create(projectId: string | number, title: string, fileName: string, code: string, visibility: SnippetVisibility, options?: BaseRequestOptions): Promise<import("../infrastructure").PostResponse>;
    edit(projectId: string | number, snippetId: number, options?: BaseRequestOptions): Promise<import("../infrastructure").PostResponse>;
    remove(projectId: string | number, snippetId: number, options?: Sudo): Promise<import("../infrastructure").PostResponse>;
    show(projectId: string | number, snippetId: number, options?: Sudo): Promise<import("../infrastructure").GetResponse>;
    userAgentDetails(projectId: string | number, snippetId: number, options?: Sudo): Promise<import("../infrastructure").GetResponse>;
}
