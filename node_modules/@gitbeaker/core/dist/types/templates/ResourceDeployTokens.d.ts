import { BaseRequestOptions, BaseService, BaseServiceOptions, PaginatedRequestOptions, Sudo } from '../infrastructure';
declare type DeployTokenScope = 'read_repository' | 'read_registry' | 'write_registry';
export declare class ResourceDeployTokens extends BaseService {
    constructor(resourceType: string, options: BaseServiceOptions);
    add(resourceId: string | number, tokenName: string, tokenScopes: DeployTokenScope[], options?: BaseRequestOptions): Promise<import("../infrastructure").PostResponse>;
    all({ resourceId, ...options }: {
        resourceId?: string | number;
    } & PaginatedRequestOptions): Promise<import("../infrastructure").GetResponse>;
    remove(resourceId: string | number, tokenId: number, options?: Sudo): Promise<import("../infrastructure").PostResponse>;
}
export {};
