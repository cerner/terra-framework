import { BaseRequestOptions, BaseService, BaseServiceOptions, PaginatedRequestOptions, Sudo } from '../infrastructure';
export declare class ResourceDiscussions extends BaseService {
    protected resource2Type: string;
    constructor(resourceType: string, resource2Type: string, options: BaseServiceOptions);
    addNote(resourceId: string | number, resource2Id: string | number, discussionId: string | number, noteId: number, content: string, options?: BaseRequestOptions): Promise<import("../infrastructure").PostResponse>;
    all(resourceId: string | number, resource2Id: string | number, options?: PaginatedRequestOptions): Promise<import("../infrastructure").GetResponse>;
    create(resourceId: string | number, resource2Id: string | number, content: string, options?: BaseRequestOptions): Promise<import("../infrastructure").PostResponse>;
    editNote(resourceId: string | number, resource2Id: string | number, discussionId: string | number, noteId: number, content: string, options?: BaseRequestOptions): Promise<import("../infrastructure").PostResponse>;
    removeNote(resourceId: string | number, resource2Id: string | number, discussionId: string | number, noteId: number, options?: Sudo): Promise<import("../infrastructure").PostResponse>;
    show(resourceId: string | number, resource2Id: string | number, discussionId: string | number, options?: Sudo): Promise<import("../infrastructure").GetResponse>;
}
