import { BaseRequestOptions, BaseService, PaginatedRequestOptions, Sudo } from '../infrastructure';
export declare class ResourceIssueBoards extends BaseService {
    constructor(resourceType: string, options: any);
    all(resourceId: string | number, options?: PaginatedRequestOptions): Promise<import("../infrastructure").GetResponse>;
    create(resourceId: string | number, name: string, options?: Sudo): Promise<import("../infrastructure").PostResponse>;
    createList(resourceId: string | number, boardId: number, labelId: number, options?: Sudo): Promise<import("../infrastructure").PostResponse>;
    edit(resourceId: string | number, boardId: number, options?: BaseRequestOptions): Promise<import("../infrastructure").PostResponse>;
    editList(resourceId: string | number, boardId: number, listId: number, position: number, options?: Sudo): Promise<import("../infrastructure").PostResponse>;
    lists(resourceId: string | number, boardId: number, options?: Sudo): Promise<import("../infrastructure").GetResponse>;
    remove(resourceId: string | number, boardId: number, options?: Sudo): Promise<import("../infrastructure").PostResponse>;
    removeList(resourceId: string | number, boardId: number, listId: number, options?: Sudo): Promise<import("../infrastructure").PostResponse>;
    show(resourceId: string | number, boardId: number, options?: Sudo): Promise<import("../infrastructure").GetResponse>;
    showList(resourceId: string | number, boardId: number, listId: number, options?: Sudo): Promise<import("../infrastructure").GetResponse>;
}
