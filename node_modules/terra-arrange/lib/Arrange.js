"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.AlignmentTypes = void 0;
var _react = _interopRequireDefault(require("react"));
var _propTypes = _interopRequireDefault(require("prop-types"));
var _bind = _interopRequireDefault(require("classnames/bind"));
var _ArrangeModule = _interopRequireDefault(require("./Arrange.module.scss"));
var _excluded = ["fitStart", "fill", "fitEnd", "align", "alignFitStart", "alignFill", "alignFitEnd", "fitStartAttributes", "fillAttributes", "fitEndAttributes"];
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }
function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }
function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }
var AlignmentTypes = {
  CENTER: 'center',
  BOTTOM: 'bottom',
  STRETCH: 'stretch'
};
exports.AlignmentTypes = AlignmentTypes;
var cx = _bind.default.bind(_ArrangeModule.default);
var propTypes = {
  /**
   * The content to display in the body of the fitStart.
   */
  fitStart: _propTypes.default.element,
  /**
   * The content to display in the body of the fill.
   */
  fill: _propTypes.default.element.isRequired,
  /**
   * The content to display in the body of the fitEnd.
   */
  fitEnd: _propTypes.default.element,
  /**
   * The vertical orientation of all three containers. It will override the alignment of alignFitStart, alignFill and alignFitEnd if given. One of: `center`, `bottom`, `stretch`.
   */
  align: _propTypes.default.oneOf(['center', 'bottom', 'stretch']),
  /**
   * The vertical orientation of fitStart. One of: `center`, `bottom`, `stretch`.
   */
  alignFitStart: _propTypes.default.oneOf(['center', 'bottom', 'stretch']),
  /**
   * The vertical orientation of fitEnd. One of: `center`, `bottom`, `stretch`.
   */
  alignFitEnd: _propTypes.default.oneOf(['center', 'bottom', 'stretch']),
  /**
   * The vertical orientation of fill. One of: `center`, `bottom`, `stretch`.
   */
  alignFill: _propTypes.default.oneOf(['center', 'bottom', 'stretch']),
  /**
   * The attributes to be set on the fitStart wrapper element
   */
  // eslint-disable-next-line react/forbid-prop-types
  fitStartAttributes: _propTypes.default.object,
  /**
   * The attributes to be set on the fill wrapper element
   */
  // eslint-disable-next-line react/forbid-prop-types
  fillAttributes: _propTypes.default.object,
  /**
   * The attributes to be set on the fitEnd wrapper element
   */
  // eslint-disable-next-line react/forbid-prop-types
  fitEndAttributes: _propTypes.default.object
};
var Arrange = function Arrange(_ref) {
  var fitStart = _ref.fitStart,
    fill = _ref.fill,
    fitEnd = _ref.fitEnd,
    align = _ref.align,
    alignFitStart = _ref.alignFitStart,
    alignFill = _ref.alignFill,
    alignFitEnd = _ref.alignFitEnd,
    fitStartAttributes = _ref.fitStartAttributes,
    fillAttributes = _ref.fillAttributes,
    fitEndAttributes = _ref.fitEndAttributes,
    customProps = _objectWithoutProperties(_ref, _excluded);
  var fitStartProps = _objectSpread({}, fitStartAttributes);
  var fillProps = _objectSpread({}, fillAttributes);
  var fitEndProps = _objectSpread({}, fitEndAttributes);
  return /*#__PURE__*/_react.default.createElement("div", _extends({}, customProps, {
    className: cx('arrange', customProps.className)
  }), /*#__PURE__*/_react.default.createElement("div", _extends({}, fitStartProps, {
    className: cx('fit', align || alignFitStart, fitStartProps.className)
  }), fitStart), /*#__PURE__*/_react.default.createElement("div", _extends({}, fillProps, {
    className: cx('fill', align || alignFill, fillProps.className)
  }), fill), /*#__PURE__*/_react.default.createElement("div", _extends({}, fitEndProps, {
    className: cx('fit', align || alignFitEnd, fitEndProps.className)
  }), fitEnd));
};
Arrange.propTypes = propTypes;
var _default = Arrange;
exports.default = _default;