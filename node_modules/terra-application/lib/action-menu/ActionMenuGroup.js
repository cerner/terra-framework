"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _react = _interopRequireDefault(require("react"));
var _propTypes = _interopRequireDefault(require("prop-types"));
var _bind = _interopRequireDefault(require("classnames/bind"));
var _terraThemeContext = _interopRequireDefault(require("terra-theme-context"));
var _ActionMenuGroupModule = _interopRequireDefault(require("./ActionMenuGroup.module.scss"));
var cx = _bind.default.bind(_ActionMenuGroupModule.default);
var propTypes = {
  children: _propTypes.default.node,
  /**
   * @private
   * Callback function for arrow key interaction.
   * Returns the event e.g. onArrow(key, direction).
   */
  onArrow: _propTypes.default.func,
  /**
   * @private
   * Callback function for arrow char.
   * Returns the event e.g. onChar(key, char).
   */
  onChar: _propTypes.default.func,
  /**
   * @private
   * Whether or not indent children based on presence of a selectable item.
   */
  indentChildren: _propTypes.default.bool
};
var ActionMenuGroup = function ActionMenuGroup(_ref) {
  var children = _ref.children,
    onArrow = _ref.onArrow,
    onChar = _ref.onChar,
    indentChildren = _ref.indentChildren;
  var theme = _react.default.useContext(_terraThemeContext.default);
  return /*#__PURE__*/_react.default.createElement("li", {
    role: "none"
  }, /*#__PURE__*/_react.default.createElement("ul", {
    className: cx('action-menu-group', theme.className),
    role: "menu"
  }, _react.default.Children.map(children, function (child) {
    if (!child) {
      return undefined;
    }
    return /*#__PURE__*/_react.default.cloneElement(child, {
      onArrow: onArrow,
      onChar: onChar,
      indentChildren: indentChildren
    });
  })));
};
ActionMenuGroup.propTypes = propTypes;
var _default = ActionMenuGroup;
exports.default = _default;