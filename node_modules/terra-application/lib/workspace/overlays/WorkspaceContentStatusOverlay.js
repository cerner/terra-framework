"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _react = _interopRequireDefault(require("react"));
var _propTypes = _interopRequireDefault(require("prop-types"));
var _bind = _interopRequireDefault(require("classnames/bind"));
var _StatusLayout = _interopRequireDefault(require("../shared/StatusLayout"));
var _theme = require("../../theme");
var _WorkspaceContentStatusOverlayButton = _interopRequireDefault(require("./WorkspaceContentStatusOverlayButton"));
var _WorkspaceContentStatusOverlayModule = _interopRequireDefault(require("./WorkspaceContentStatusOverlay.module.scss"));
var cx = _bind.default.bind(_WorkspaceContentStatusOverlayModule.default);
var propTypes = {
  /**
   * The status variant indicating which messaging should be rendered.
   */
  variant: _propTypes.default.oneOf(['no-data', 'no-matching-results', 'not-authorized', 'error']),
  /**
   * The message to render within the overlay.
   */
  message: _propTypes.default.string,
  /**
   * The StatusOverlay.Button components to render within the status overlay.
   */
  children: function children(props, propName, componentName) {
    if (props[propName]) {
      var errorString;
      _react.default.Children.forEach(props[propName], function (child) {
        if (child.type !== _WorkspaceContentStatusOverlayButton.default) {
          errorString = "Invalid prop `".concat(propName, "` supplied to `").concat(componentName, "`. Child must be of type WorkspaceContent.StatusOverlay.Button.");
        }
      });
      if (errorString) {
        return new Error(errorString);
      }
    }
    return null;
  }
};
var WorkspaceContentStatusOverlay = function WorkspaceContentStatusOverlay(_ref) {
  var variant = _ref.variant,
    message = _ref.message,
    children = _ref.children;
  var theme = _react.default.useContext(_theme.ThemeContext);
  return /*#__PURE__*/_react.default.createElement("div", {
    className: cx('status-overlay', theme.className),
    role: "status",
    "data-testid": "workspace-content-status"
  }, /*#__PURE__*/_react.default.createElement(_StatusLayout.default, {
    variant: variant,
    message: message
  }, children));
};
WorkspaceContentStatusOverlay.propTypes = propTypes;
WorkspaceContentStatusOverlay.Button = _WorkspaceContentStatusOverlayButton.default;
var _default = WorkspaceContentStatusOverlay;
exports.default = _default;