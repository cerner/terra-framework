"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _react = _interopRequireDefault(require("react"));
var _propTypes = _interopRequireDefault(require("prop-types"));
var _bind = _interopRequireDefault(require("classnames/bind"));
var _terraThemeContext = _interopRequireDefault(require("terra-theme-context"));
var _terraVisuallyHiddenText = _interopRequireDefault(require("terra-visually-hidden-text"));
var _TabHeaderModule = _interopRequireDefault(require("./TabHeader.module.scss"));
var cx = _bind.default.bind(_TabHeaderModule.default);
var propTypes = {
  /**
   * The child content to display within the title area
   */
  title: _propTypes.default.string
};
var TabHeader = function TabHeader(_ref) {
  var title = _ref.title;
  var theme = _react.default.useContext(_terraThemeContext.default);

  // tabIndex of -1 ensure a focus location for the dropdown to navigate to with a screen reader.
  return /*#__PURE__*/_react.default.createElement("div", {
    className: cx('header', theme.className)
  }, /*#__PURE__*/_react.default.createElement(_terraVisuallyHiddenText.default, {
    "aria-level": "2",
    role: "heading",
    tabIndex: "-1",
    text: title
  }), /*#__PURE__*/_react.default.createElement("div", {
    className: cx('title'),
    "aria-hidden": "true"
  }, title));
};
TabHeader.propTypes = propTypes;
var _default = TabHeader;
exports.default = _default;