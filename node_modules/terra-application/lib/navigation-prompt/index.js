"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _typeof = require("@babel/runtime/helpers/typeof");
Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "NavigationPromptCheckpoint", {
  enumerable: true,
  get: function get() {
    return _terraNavigationPrompt.NavigationPromptCheckpoint;
  }
});
Object.defineProperty(exports, "PromptRegistrationContext", {
  enumerable: true,
  get: function get() {
    return _terraNavigationPrompt.PromptRegistrationContext;
  }
});
Object.defineProperty(exports, "default", {
  enumerable: true,
  get: function get() {
    return _terraNavigationPrompt.default;
  }
});
Object.defineProperty(exports, "getUnsavedChangesPromptOptions", {
  enumerable: true,
  get: function get() {
    return _getUnsavedChangesPromptOptions.default;
  }
});
exports.navigationPromptResolutionOptionsShape = void 0;
var _propTypes = _interopRequireDefault(require("prop-types"));
var _getUnsavedChangesPromptOptions = _interopRequireDefault(require("./getUnsavedChangesPromptOptions"));
var _terraNavigationPrompt = _interopRequireWildcard(require("terra-navigation-prompt"));
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
var navigationPromptResolutionOptionsShape = _propTypes.default.oneOfType([_propTypes.default.shape({
  /**
   * The title string for the NotificationDialog.
   */
  title: _propTypes.default.string,
  /**
   * The startMessage string for the NotificationDialog.
   */
  startMessage: _propTypes.default.string,
  /**
   * The content element for the NotificationDialog.
   */
  content: _propTypes.default.node,
  /**
   * The endMessage string for the NotificationDialog.
   */
  endMessage: _propTypes.default.string,
  /**
   * The string for the NotificationDialog's accept button text.
   */
  acceptButtonText: _propTypes.default.string,
  /**
   * The string for the NotificationDialog's reject button text.
   */
  rejectButtonText: _propTypes.default.string,
  /**
   * The string specifying the emphasized action.
   */
  emphasizedAction: _propTypes.default.oneOf(['accept', 'reject', 'none']),
  /**
   * The string specifying the button order.
   */
  buttonOrder: _propTypes.default.oneOf(['acceptFirst', 'rejectFirst'])
}), _propTypes.default.func]);
exports.navigationPromptResolutionOptionsShape = navigationPromptResolutionOptionsShape;