"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _typeof = require("@babel/runtime/helpers/typeof");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));
var _react = _interopRequireDefault(require("react"));
var _propTypes = _interopRequireDefault(require("prop-types"));
var _applicationNavigation = _interopRequireWildcard(require("terra-application/lib/application-navigation"));
var _workspace = require("terra-application/lib/workspace");
var _WorkspaceLayout = _interopRequireDefault(require("terra-application/lib/application-navigation/private/workspace-layout/WorkspaceLayout"));
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
var PageContent = function PageContent(_ref) {
  var title = _ref.title;
  var actionsContext = _react.default.useContext(_applicationNavigation.ApplicationNavigationActionsContext);
  return /*#__PURE__*/_react.default.createElement("div", {
    "data-nav-test-content": true
  }, /*#__PURE__*/_react.default.createElement("p", null, title), /*#__PURE__*/_react.default.createElement("p", null, "Layout Actions:", ' ', actionsContext.actions && actionsContext.actions.map(function (action, index) {
    return /*#__PURE__*/_react.default.createElement("button", {
      id: "test-action-id-".concat(index),
      key: action.key,
      type: "button",
      onClick: action.onSelect,
      "aria-label": action.label
    }, action.icon);
  })));
};
PageContent.propTypes = {
  title: _propTypes.default.string
};
var Tab1 = function Tab1() {
  return /*#__PURE__*/_react.default.createElement(_workspace.WorkspaceContent, null, /*#__PURE__*/_react.default.createElement("p", {
    id: "test-workspace-0"
  }, "Example Workspace Content 1"));
};
var Tab2 = function Tab2() {
  return /*#__PURE__*/_react.default.createElement(_workspace.WorkspaceContent, null, /*#__PURE__*/_react.default.createElement("p", {
    id: "test-workspace-1"
  }, "Example Workspace Content 2"));
};
var workspace = /*#__PURE__*/_react.default.createElement(_applicationNavigation.default.Workspace, {
  id: "application-workspace-example",
  initialActiveItemKey: "tab-1",
  initialSize: {
    scale: 0.50
  },
  onActiveItemChange: function onActiveItemChange(newActiveItemKey) {
    console.log("Workspace active item: ".concat(newActiveItemKey)); // eslint-disable-line no-console
  },

  onSizeChange: function onSizeChange(size) {
    console.log("Workspace size changed: ".concat(size)); // eslint-disable-line no-console
  },

  onPresentationStateChange: function onPresentationStateChange(isPresented) {
    console.log("Workspace presentation changed. isOpen - ".concat(isPresented)); // eslint-disable-line no-console
  }
}, /*#__PURE__*/_react.default.createElement(_applicationNavigation.default.Workspace.Item, {
  itemKey: "tab-1",
  label: "Tab 1",
  metaData: {
    key: 'tab-1'
  },
  render: function render() {
    return /*#__PURE__*/_react.default.createElement(Tab1, null);
  }
}), /*#__PURE__*/_react.default.createElement(_applicationNavigation.default.Workspace.Item, {
  itemKey: "tab-2",
  label: "Tab 2",
  metaData: {
    key: 'tab-2'
  },
  render: function render() {
    return /*#__PURE__*/_react.default.createElement(Tab2, null);
  }
}));
var WorkspaceLayoutTest = function WorkspaceLayoutTest() {
  var actionRef = _react.default.useRef();
  var _React$useState = _react.default.useState(false),
    _React$useState2 = (0, _slicedToArray2.default)(_React$useState, 2),
    isToggleEnabled = _React$useState2[0],
    setIsToggleEnabled = _React$useState2[1];
  return /*#__PURE__*/_react.default.createElement(_WorkspaceLayout.default, {
    id: "workspace-layout-test",
    workspace: workspace,
    skipToCallback: function skipToCallback(actionFunc) {
      actionRef.current = actionFunc;
      setIsToggleEnabled(!!actionRef.current);
    }
  }, /*#__PURE__*/_react.default.createElement(PageContent, {
    title: "Main Content Region",
    action: isToggleEnabled ? function () {
      return actionRef.current();
    } : null
  }));
};
var _default = WorkspaceLayoutTest;
exports.default = _default;