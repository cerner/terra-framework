"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _typeof = require("@babel/runtime/helpers/typeof");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));
var _react = _interopRequireWildcard(require("react"));
var _propTypes = _interopRequireDefault(require("prop-types"));
var _theme = require("terra-application/lib/theme");
var _applicationIntl = require("../../../application-intl");
var _applicationBase = _interopRequireDefault(require("../../../application-base"));
var _applicationNavigation = _interopRequireDefault(require("../../../application-navigation"));
var _navigationPrompt = _interopRequireDefault(require("../../../navigation-prompt"));
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
var PageContent = function PageContent(_ref) {
  var title = _ref.title;
  var _useState = (0, _react.useState)(false),
    _useState2 = (0, _slicedToArray2.default)(_useState, 2),
    hasPendingAction = _useState2[0],
    setHasPendingAction = _useState2[1];
  return /*#__PURE__*/_react.default.createElement("div", null, /*#__PURE__*/_react.default.createElement("p", null, title), /*#__PURE__*/_react.default.createElement("p", null, "Toggle pending action:", ' ', /*#__PURE__*/_react.default.createElement("button", {
    id: "pending-action-toggle",
    type: "button",
    onClick: function onClick() {
      setHasPendingAction(!hasPendingAction);
    }
  }, hasPendingAction ? 'Disable' : 'Enable')), hasPendingAction ? /*#__PURE__*/_react.default.createElement(_navigationPrompt.default, {
    description: "Testing ApplicationNavigation's navigation prompt handling"
  }) : undefined);
};
PageContent.propTypes = {
  title: _propTypes.default.string
};
var ApplicationNavigationDisabledPromptsTest = function ApplicationNavigationDisabledPromptsTest() {
  var applicationIntl = (0, _react.useContext)(_applicationIntl.ApplicationIntlContext);
  var theme = _react.default.useContext(_theme.ThemeContext);
  var _useState3 = (0, _react.useState)('page_1'),
    _useState4 = (0, _slicedToArray2.default)(_useState3, 2),
    activeNavItem = _useState4[0],
    setActiveNavItem = _useState4[1];
  var _useState5 = (0, _react.useState)(false),
    _useState6 = (0, _slicedToArray2.default)(_useState5, 2),
    loggedOut = _useState6[0],
    setLoggedOut = _useState6[1];
  var navigationItems = [{
    key: 'page_1',
    text: 'Page 1'
  }, {
    key: 'page_2',
    text: 'Page 2'
  }, {
    key: 'page_3',
    text: 'Page 3'
  }];
  return (
    /*#__PURE__*/
    // eslint-disable-next-line react/forbid-dom-props
    _react.default.createElement("div", {
      style: {
        height: '500px'
      }
    }, /*#__PURE__*/_react.default.createElement(_applicationBase.default, {
      locale: applicationIntl.locale,
      themeName: theme.className
    }, loggedOut ? /*#__PURE__*/_react.default.createElement("p", null, "Logged Out") : /*#__PURE__*/_react.default.createElement(_applicationNavigation.default, {
      titleConfig: {
        title: 'ApplicationNavigation Disabled Prompts Test'
      },
      navigationItems: navigationItems,
      activeNavigationItemKey: activeNavItem,
      onSelectNavigationItem: function onSelectNavigationItem(key) {
        setActiveNavItem(key);
      },
      onSelectLogout: function onSelectLogout() {
        setLoggedOut(true);
      },
      disablePromptsForLogout: true,
      disablePromptsForNavigationItems: true
    }, /*#__PURE__*/_react.default.createElement(PageContent, {
      key: activeNavItem,
      title: activeNavItem
    }))))
  );
};
var _default = ApplicationNavigationDisabledPromptsTest;
exports.default = _default;