"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _typeof = require("@babel/runtime/helpers/typeof");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));
var _react = _interopRequireWildcard(require("react"));
var _propTypes = _interopRequireDefault(require("prop-types"));
var _notificationBanner = _interopRequireDefault(require("../../../notification-banner"));
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
var Example = function Example(_ref) {
  var id = _ref.id;
  var _useState = (0, _react.useState)(false),
    _useState2 = (0, _slicedToArray2.default)(_useState, 2),
    showErrorBanner = _useState2[0],
    setShowErrorBanner = _useState2[1];
  var _useState3 = (0, _react.useState)(false),
    _useState4 = (0, _slicedToArray2.default)(_useState3, 2),
    showHazardMediumBanner = _useState4[0],
    setShowHazardMediumBanner = _useState4[1];
  var _useState5 = (0, _react.useState)(true),
    _useState6 = (0, _slicedToArray2.default)(_useState5, 2),
    showUnsatisfiedBanner = _useState6[0],
    setShowUnsatisfiedBanner = _useState6[1];
  var _useState7 = (0, _react.useState)(false),
    _useState8 = (0, _slicedToArray2.default)(_useState7, 2),
    showUnverifiedBanner = _useState8[0],
    setShowUnverifiedBanner = _useState8[1];
  var _useState9 = (0, _react.useState)(false),
    _useState10 = (0, _slicedToArray2.default)(_useState9, 2),
    showHazardLowBanner = _useState10[0],
    setShowHazardLowBanner = _useState10[1];
  (0, _react.useEffect)(function () {
    setTimeout(function () {
      setShowErrorBanner(true);
    }, 10000);
  }, []);
  (0, _react.useEffect)(function () {
    setTimeout(function () {
      setShowHazardMediumBanner(true);
    }, 30000);
  }, []);
  (0, _react.useEffect)(function () {
    setTimeout(function () {
      setShowUnverifiedBanner(true);
    }, 60000);
  }, []);
  return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, showErrorBanner && /*#__PURE__*/_react.default.createElement(_notificationBanner.default, {
    variant: "error",
    id: "error-banner-".concat(id),
    description: "Something happened..."
  }), showUnsatisfiedBanner && /*#__PURE__*/_react.default.createElement(_notificationBanner.default, {
    variant: "unsatisfied",
    id: "unsatisfied-banner-".concat(id)
  }), showHazardMediumBanner && /*#__PURE__*/_react.default.createElement(_notificationBanner.default, {
    variant: "hazard-medium",
    id: "hazard-medium-banner-".concat(id),
    onRequestClose: function onRequestClose() {
      return setShowHazardMediumBanner(false);
    }
  }), showUnverifiedBanner && /*#__PURE__*/_react.default.createElement(_notificationBanner.default, {
    variant: "unverified",
    id: "unverified-banner-".concat(id),
    description: /*#__PURE__*/_react.default.createElement("div", null, "There are records that have been included that need to be verified before they are officially added. Please review and ensure they should be included."),
    bannerAction: {
      text: 'Verify Records',
      onClick: function onClick() {
        alert('records verified.'); // eslint-disable-line no-alert
        setShowUnverifiedBanner(false);
      }
    }
  }), showHazardLowBanner && /*#__PURE__*/_react.default.createElement(_notificationBanner.default, {
    variant: "hazard-low",
    id: "hazard-low-banner-".concat(id)
  }), /*#__PURE__*/_react.default.createElement("p", null, "The error banner will appear after 10 seconds."), /*#__PURE__*/_react.default.createElement("button", {
    onClick: function onClick() {
      return setShowErrorBanner(!showErrorBanner);
    },
    type: "button",
    id: "toggle-error-banner-".concat(id)
  }, "Show/Hide Error Banner"), /*#__PURE__*/_react.default.createElement("p", null, "The hazard-medium banner will appear after 30 seconds."), /*#__PURE__*/_react.default.createElement("button", {
    onClick: function onClick() {
      return setShowHazardMediumBanner(!showHazardMediumBanner);
    },
    type: "button",
    id: "toggle-hazard-medium-banner-".concat(id)
  }, "Show/Hide Hazard Medium Banner"), /*#__PURE__*/_react.default.createElement("p", null, "Click to toggle Unsatisfied Banner."), /*#__PURE__*/_react.default.createElement("button", {
    onClick: function onClick() {
      return setShowUnsatisfiedBanner(!showUnsatisfiedBanner);
    },
    type: "button",
    id: "toggle-unsatisfied-banner-".concat(id)
  }, "Show/Hide Unsatisfied Banner"), /*#__PURE__*/_react.default.createElement("p", null, "The Unverified banner will appear after 60 seconds."), /*#__PURE__*/_react.default.createElement("button", {
    onClick: function onClick() {
      return setShowUnverifiedBanner(!showUnverifiedBanner);
    },
    type: "button",
    id: "toggle-unverified-banner-".concat(id)
  }, "Show/Hide Unverified Banner"), /*#__PURE__*/_react.default.createElement("p", null, "Click to toggle Hazard-Low Banner."), /*#__PURE__*/_react.default.createElement("button", {
    onClick: function onClick() {
      return setShowHazardLowBanner(!showHazardLowBanner);
    },
    type: "button",
    id: "toggle-hazard-low-banner-".concat(id)
  }, "Show/Hide Hazard-Low Banner"), /*#__PURE__*/_react.default.createElement("p", null, "This is a bunch of random page content to make the screen reader talk a lot longer. This is to help keep the reader going while we wait for the 60 second timeout to show the unverified banner. This contents does not add value to this example except to add a bunch of words for the voice over screen reader to read out loud. This could be cut-off when an banner is rendered unless the banner is polite and waits for the screen reader to finish so the user can understand what is happening on the page."));
};
Example.propTypes = {
  /**
   * Unique ID to append to the IDs in the example to pass accessibility when multiple
   * are rendered on one page.
   */
  id: _propTypes.default.string
};
Example.defaultProps = {
  id: '1'
};
var _default = Example;
exports.default = _default;