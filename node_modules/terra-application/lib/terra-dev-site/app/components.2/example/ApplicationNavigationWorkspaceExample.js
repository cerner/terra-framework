"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _typeof = require("@babel/runtime/helpers/typeof");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));
var _react = _interopRequireWildcard(require("react"));
var _bind = _interopRequireDefault(require("classnames/bind"));
var _applicationNavigation = _interopRequireWildcard(require("terra-application/lib/application-navigation"));
var _workspace = require("terra-application/lib/workspace");
var _notificationBanner = _interopRequireDefault(require("terra-application/lib/notification-banner"));
var _terraButton = _interopRequireDefault(require("terra-button"));
var _IconEdit = _interopRequireDefault(require("terra-icon/lib/icon/IconEdit"));
var _IconAdd = _interopRequireDefault(require("terra-icon/lib/icon/IconAdd"));
var _IconAttachment = _interopRequireDefault(require("terra-icon/lib/icon/IconAttachment"));
var _terraToolbar = _interopRequireDefault(require("terra-toolbar"));
var _ApplicationNavigationExampleModule = _interopRequireDefault(require("./ApplicationNavigationExample.module.scss"));
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
var cx = _bind.default.bind(_ApplicationNavigationExampleModule.default);

// Content to be rendered within the workspace must be rendered using the
// WorkspaceContent component. For this example, we define two components to
// represent both simple and complex scenarios.

var WorkspaceContent1 = function WorkspaceContent1() {
  return /*#__PURE__*/_react.default.createElement(_workspace.WorkspaceContent, null, /*#__PURE__*/_react.default.createElement("div", {
    className: cx('workspace-content')
  }, /*#__PURE__*/_react.default.createElement("p", null, "Example Workspace Content 1")));
};
var WorkspaceContent2 = function WorkspaceContent2() {
  return /*#__PURE__*/_react.default.createElement(_workspace.WorkspaceContent, {
    toolbar: /*#__PURE__*/_react.default.createElement(_terraToolbar.default, null, /*#__PURE__*/_react.default.createElement(_terraButton.default, {
      text: "Button 1",
      variant: "utility",
      icon: /*#__PURE__*/_react.default.createElement(_IconEdit.default, null)
    }), /*#__PURE__*/_react.default.createElement(_terraButton.default, {
      text: "Button 2",
      variant: "utility",
      icon: /*#__PURE__*/_react.default.createElement(_IconAdd.default, null)
    }), /*#__PURE__*/_react.default.createElement(_terraButton.default, {
      text: "Button 3",
      variant: "utility",
      icon: /*#__PURE__*/_react.default.createElement(_IconAttachment.default, null)
    }))
  }, /*#__PURE__*/_react.default.createElement("div", {
    className: cx('workspace-content')
  }, /*#__PURE__*/_react.default.createElement("p", null, "Example Workspace Content 2")), /*#__PURE__*/_react.default.createElement(_notificationBanner.default, {
    variant: "hazard-low",
    description: "Example Notification"
  }));
};
var ApplicationNavigationWorkspaceExample = function ApplicationNavigationWorkspaceExample() {
  var _useState = (0, _react.useState)('page_1'),
    _useState2 = (0, _slicedToArray2.default)(_useState, 2),
    activeNavigationItem = _useState2[0],
    setActiveNavigationItem = _useState2[1];
  var _useState3 = (0, _react.useState)(false),
    _useState4 = (0, _slicedToArray2.default)(_useState3, 2),
    loggedOut = _useState4[0],
    setLoggedOut = _useState4[1];

  // For the purposes of this example, the state changes reported through the
  // ApplicationNavigation.Workspace's callbacks are recorded and presented to the
  // user. In most cases, usage of these callbacks is not necessary. However, if
  // you wish to persist the current state and reapply it upon next load (using
  // the 'initial' props), these callbacks can be used to detect and respond to
  // changes in the ApplicationNavigation.Workspace's internal state.
  var _useState5 = (0, _react.useState)(),
    _useState6 = (0, _slicedToArray2.default)(_useState5, 2),
    reportedWorkspaceActiveItem = _useState6[0],
    setReportedWorkspaceActiveItem = _useState6[1];
  var _useState7 = (0, _react.useState)(),
    _useState8 = (0, _slicedToArray2.default)(_useState7, 2),
    reportedWorkspaceSize = _useState8[0],
    setReportedWorkspaceSize = _useState8[1];
  var _useState9 = (0, _react.useState)(),
    _useState10 = (0, _slicedToArray2.default)(_useState9, 2),
    reportedWorkspaceVisibility = _useState10[0],
    setReportedWorkspaceVisibility = _useState10[1];
  var workspace = /*#__PURE__*/_react.default.createElement(_applicationNavigation.default.Workspace, {
    id: "application-workspace-example",
    initialActiveItemKey: "item-1",
    initialSize: {
      scale: 0
    },
    initialIsOpen: true,
    onActiveItemChange: function onActiveItemChange(activeItem) {
      setReportedWorkspaceActiveItem(activeItem);
    },
    onSizeChange: function onSizeChange(size) {
      setReportedWorkspaceSize(size);
    },
    onPresentationStateChange: function onPresentationStateChange(isPresented) {
      setReportedWorkspaceVisibility(isPresented ? 'true' : 'false');
    }
  }, /*#__PURE__*/_react.default.createElement(_applicationNavigation.default.Workspace.Item, {
    itemKey: "item-1",
    label: "Item 1",
    render: function render() {
      return /*#__PURE__*/_react.default.createElement(WorkspaceContent1, null);
    }
  }), /*#__PURE__*/_react.default.createElement(_applicationNavigation.default.Workspace.Item, {
    itemKey: "item-2",
    label: "Item 2",
    render: function render() {
      return /*#__PURE__*/_react.default.createElement(WorkspaceContent2, null);
    }
  }));
  return /*#__PURE__*/_react.default.createElement("div", {
    className: cx('example-container')
  }, loggedOut ? /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement("p", null, "Logged Out"), /*#__PURE__*/_react.default.createElement("button", {
    type: "button",
    onClick: function onClick() {
      setLoggedOut(false);
    }
  }, "Reset")) : /*#__PURE__*/_react.default.createElement(_applicationNavigation.default, {
    titleConfig: {
      title: 'ApplicationNavigation Example',
      subline: 'With Workspace'
    },
    userConfig: {
      name: 'Example User',
      initials: 'EU'
    },
    navigationItems: [{
      key: 'page_1',
      text: 'Page 1'
    }, {
      key: 'page_2',
      text: 'Page 2'
    }, {
      key: 'page_3',
      text: 'Page 3'
    }],
    activeNavigationItemKey: activeNavigationItem,
    onSelectNavigationItem: function onSelectNavigationItem(key) {
      setActiveNavigationItem(key);
    },
    onSelectLogout: function onSelectLogout() {
      setLoggedOut(true);
    },
    workspace: workspace
  }, /*#__PURE__*/_react.default.createElement(_applicationNavigation.ApplicationNavigationActionsContext.Consumer, null, function (_ref) {
    var _ref$actions = _ref.actions,
      actions = _ref$actions === void 0 ? [] : _ref$actions;
    return /*#__PURE__*/_react.default.createElement("div", {
      className: cx('page-content')
    }, /*#__PURE__*/_react.default.createElement("p", null, "Example Content for", ' ', activeNavigationItem), /*#__PURE__*/_react.default.createElement("p", null, "Layout Actions:", ' ', actions.map(function (action) {
      return /*#__PURE__*/_react.default.createElement("button", {
        key: action.key,
        type: "button",
        onClick: action.onSelect,
        "aria-label": action.label
      }, action.icon);
    })), /*#__PURE__*/_react.default.createElement("p", null, "Last Reported Active Workspace Item:", ' ', reportedWorkspaceActiveItem), /*#__PURE__*/_react.default.createElement("p", null, "Last Reported Workspace Size:", ' ', reportedWorkspaceSize), /*#__PURE__*/_react.default.createElement("p", null, "Last Reported Workspace Visibility:", ' ', reportedWorkspaceVisibility));
  })));
};
var _default = ApplicationNavigationWorkspaceExample;
exports.default = _default;