"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _typeof = require("@babel/runtime/helpers/typeof");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));
var _react = _interopRequireWildcard(require("react"));
var _bind = _interopRequireDefault(require("classnames/bind"));
var _applicationNavigation = _interopRequireWildcard(require("terra-application/lib/application-navigation"));
var _workspace = require("terra-application/lib/workspace");
var _notificationBanner = _interopRequireDefault(require("terra-application/lib/notification-banner"));
var _terraButton = _interopRequireDefault(require("terra-button"));
var _terraToolbar = _interopRequireDefault(require("terra-toolbar"));
var _WorkspaceContentHowToExampleModule = _interopRequireDefault(require("./WorkspaceContentHowToExample.module.scss"));
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
var cx = _bind.default.bind(_WorkspaceContentHowToExampleModule.default);
var MyContent1 = function MyContent1() {
  var _React$useContext = _react.default.useContext(_workspace.WorkspaceContext),
    isActive = _React$useContext.isActive;
  _react.default.useEffect(function () {
    if (isActive) {
      // add listeners

      return function () {
        // remove listeners
      };
    }
    return undefined;
  }, [isActive]);
  return /*#__PURE__*/_react.default.createElement(_workspace.WorkspaceContent, {
    toolbar: /*#__PURE__*/_react.default.createElement(_terraToolbar.default, null, /*#__PURE__*/_react.default.createElement(_terraButton.default, {
      text: "Action 1",
      onClick: function onClick() {}
    }), /*#__PURE__*/_react.default.createElement(_terraButton.default, {
      text: "Action 2",
      onClick: function onClick() {}
    }))
  }, /*#__PURE__*/_react.default.createElement("div", null, /*#__PURE__*/_react.default.createElement("p", null, "Example Content 1")));
};
var MyContent2 = function MyContent2() {
  var _React$useState = _react.default.useState(false),
    _React$useState2 = (0, _slicedToArray2.default)(_React$useState, 2),
    showAlertBanner = _React$useState2[0],
    setShowAlertBanner = _React$useState2[1];
  var _React$useState3 = _react.default.useState(false),
    _React$useState4 = (0, _slicedToArray2.default)(_React$useState3, 2),
    isLoading = _React$useState4[0],
    setIsLoading = _React$useState4[1];
  var _React$useState5 = _react.default.useState(false),
    _React$useState6 = (0, _slicedToArray2.default)(_React$useState5, 2),
    hasNoResults = _React$useState6[0],
    setHasNoResults = _React$useState6[1];
  return /*#__PURE__*/_react.default.createElement(_workspace.WorkspaceContent, {
    activityOverlay: isLoading ? /*#__PURE__*/_react.default.createElement(_workspace.WorkspaceContent.ActivityOverlay, {
      variant: "loading"
    }) : undefined,
    statusOverlay: hasNoResults ? /*#__PURE__*/_react.default.createElement(_workspace.WorkspaceContent.StatusOverlay, {
      variant: "no-matching-results"
    }) : undefined
  }, /*#__PURE__*/_react.default.createElement("div", null, /*#__PURE__*/_react.default.createElement("p", null, "Example Content 2"), /*#__PURE__*/_react.default.createElement("button", {
    type: "button",
    onClick: function onClick() {
      setShowAlertBanner(true);
    }
  }, "Show Alert Banner"), /*#__PURE__*/_react.default.createElement("button", {
    type: "button",
    onClick: function onClick() {
      setIsLoading(true);
    }
  }, "Show Activity Overlay"), /*#__PURE__*/_react.default.createElement("button", {
    type: "button",
    onClick: function onClick() {
      setHasNoResults(true);
    }
  }, "Show Status Overlay")), showAlertBanner && /*#__PURE__*/_react.default.createElement(_notificationBanner.default, {
    variant: "hazard-high",
    id: "my-component-notification-id",
    onRequestClose: function onRequestClose() {
      return setShowAlertBanner(false);
    }
  }));
};
MyContent2.labelTranslationId = 'myNamespace.myContent2.label';
var WorkspaceContentHowToExample = function WorkspaceContentHowToExample() {
  var _useState = (0, _react.useState)('page_1'),
    _useState2 = (0, _slicedToArray2.default)(_useState, 2),
    activeNavigationItem = _useState2[0],
    setActiveNavigationItem = _useState2[1];
  var workspace = /*#__PURE__*/_react.default.createElement(_applicationNavigation.default.Workspace, {
    id: "application-workspace-example",
    initialActiveItemKey: "item-1",
    initialSize: {
      scale: 0.5
    },
    initialIsOpen: true
  }, /*#__PURE__*/_react.default.createElement(_applicationNavigation.default.Workspace.Item, {
    itemKey: "item-1",
    label: "Item 1",
    render: function render() {
      return /*#__PURE__*/_react.default.createElement(MyContent1, null);
    }
  }), /*#__PURE__*/_react.default.createElement(_applicationNavigation.default.Workspace.Item, {
    itemKey: "item-2",
    label: "Item 2",
    render: function render() {
      return /*#__PURE__*/_react.default.createElement(MyContent2, null);
    }
  }));
  return /*#__PURE__*/_react.default.createElement("div", {
    className: cx('example-container')
  }, /*#__PURE__*/_react.default.createElement(_applicationNavigation.default, {
    titleConfig: {
      title: 'Create Workspace Content ',
      headline: 'How To'
    },
    userConfig: {
      name: 'Example User',
      initials: 'EU'
    },
    navigationItems: [{
      key: 'page_1',
      text: 'Page 1'
    }, {
      key: 'page_2',
      text: 'Page 2'
    }, {
      key: 'page_3',
      text: 'Page 3'
    }],
    activeNavigationItemKey: activeNavigationItem,
    onSelectNavigationItem: function onSelectNavigationItem(key) {
      setActiveNavigationItem(key);
    },
    workspace: workspace
  }, /*#__PURE__*/_react.default.createElement(_applicationNavigation.ApplicationNavigationActionsContext.Consumer, null, function (_ref) {
    var _ref$actions = _ref.actions,
      actions = _ref$actions === void 0 ? [] : _ref$actions;
    return /*#__PURE__*/_react.default.createElement("div", {
      className: cx('page-content')
    }, /*#__PURE__*/_react.default.createElement("p", null, "Example Content for", ' ', activeNavigationItem), /*#__PURE__*/_react.default.createElement("p", null, "Layout Actions:", ' ', actions.map(function (action) {
      return /*#__PURE__*/_react.default.createElement("button", {
        key: action.key,
        type: "button",
        onClick: action.onSelect,
        "aria-label": action.label
      }, action.icon);
    })));
  })));
};
var _default = WorkspaceContentHowToExample;
exports.default = _default;