"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _typeof = require("@babel/runtime/helpers/typeof");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));
var _react = _interopRequireWildcard(require("react"));
var _propTypes = _interopRequireDefault(require("prop-types"));
var _bind = _interopRequireDefault(require("classnames/bind"));
var _breakpoints = require("terra-application/lib/breakpoints");
var _applicationLoadingOverlay = _interopRequireDefault(require("terra-application/lib/application-loading-overlay"));
var _applicationIntl = require("terra-application/lib/application-intl");
var _theme = require("terra-application/lib/theme");
var _applicationNavigation = require("terra-application/lib/application-navigation");
var _LoadingOverlayPresenter = _interopRequireDefault(require("./LoadingOverlayPresenter"));
var _ModalPresenter = _interopRequireDefault(require("./ModalPresenter"));
var _PendingActionToggle = _interopRequireDefault(require("./PendingActionToggle"));
var _StatusOverlayPresenter = _interopRequireDefault(require("./StatusOverlayPresenter"));
var _EventEmitter = _interopRequireDefault(require("./EventEmitter"));
var _AppPageModule = _interopRequireDefault(require("./AppPage.module.scss"));
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
var cx = _bind.default.bind(_AppPageModule.default);
var AppPage = function AppPage(_ref) {
  var pageName = _ref.pageName;
  var _useState = (0, _react.useState)(false),
    _useState2 = (0, _slicedToArray2.default)(_useState, 2),
    isInitialized = _useState2[0],
    setIsInitialized = _useState2[1];
  var activeBreakpoint = (0, _react.useContext)(_breakpoints.ActiveBreakpointContext);
  var applicationIntl = (0, _react.useContext)(_applicationIntl.ApplicationIntlContext);
  var theme = _react.default.useContext(_theme.ThemeContext);
  var _useState3 = (0, _react.useState)(false),
    _useState4 = (0, _slicedToArray2.default)(_useState3, 2),
    hasError = _useState4[0],
    setHasError = _useState4[1];
  (0, _react.useEffect)(function () {
    if (isInitialized) {
      return undefined;
    }
    var timeout = setTimeout(function () {
      setIsInitialized(true);
    }, window.TEST_APP_TIMEOUT);
    return function () {
      clearTimeout(timeout);
    };
  }, [isInitialized]);
  if (!isInitialized) {
    return /*#__PURE__*/_react.default.createElement(_applicationLoadingOverlay.default, {
      isOpen: true,
      backgroundStyle: "clear"
    });
  }
  if (hasError) {
    throw new Error("".concat(pageName, " threw an error to test the application's error handling"));
  }
  return /*#__PURE__*/_react.default.createElement("div", {
    className: cx('page-content', theme.className)
  }, /*#__PURE__*/_react.default.createElement("h1", null, pageName), /*#__PURE__*/_react.default.createElement("h3", null, "Configuration Properties"), /*#__PURE__*/_react.default.createElement("p", null, "Active Breakpoint:", ' ', /*#__PURE__*/_react.default.createElement("span", null, activeBreakpoint)), /*#__PURE__*/_react.default.createElement("p", null, "Intl Locale:", ' ', /*#__PURE__*/_react.default.createElement("span", null, applicationIntl.locale)), /*#__PURE__*/_react.default.createElement("h3", null, "Error Handling"), /*#__PURE__*/_react.default.createElement("p", null, "Press the button below to throw an exception that will be caught and handled by the framework"), /*#__PURE__*/_react.default.createElement("button", {
    type: "button",
    onClick: function onClick() {
      setHasError(true);
    }
  }, "Throw Error"), /*#__PURE__*/_react.default.createElement(_LoadingOverlayPresenter.default, null), /*#__PURE__*/_react.default.createElement(_StatusOverlayPresenter.default, null), /*#__PURE__*/_react.default.createElement(_ModalPresenter.default, null), /*#__PURE__*/_react.default.createElement(_PendingActionToggle.default, null), /*#__PURE__*/_react.default.createElement("h3", null, "Theming"), /*#__PURE__*/_react.default.createElement("p", null, "The div below uses the theme context to apply styling for theme: ".concat(theme.name, ".")), /*#__PURE__*/_react.default.createElement("div", {
    className: cx('themed-block')
  }), /*#__PURE__*/_react.default.createElement(_EventEmitter.default, null), /*#__PURE__*/_react.default.createElement(_applicationNavigation.ApplicationNavigationActionsContext.Consumer, null, function (_ref2) {
    var _ref2$actions = _ref2.actions,
      actions = _ref2$actions === void 0 ? [] : _ref2$actions;
    return /*#__PURE__*/_react.default.createElement("div", null, /*#__PURE__*/_react.default.createElement("h3", null, "Layout Actions"), actions.map(function (action) {
      return /*#__PURE__*/_react.default.createElement("button", {
        key: action.key,
        type: "button",
        onClick: action.onSelect,
        "aria-label": action.label
      }, action.icon);
    }));
  }));
};
AppPage.propTypes = {
  pageName: _propTypes.default.string
};
var _default = AppPage;
exports.default = _default;