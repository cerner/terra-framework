"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _typeof2 = _interopRequireDefault(require("@babel/runtime/helpers/typeof"));
var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));
var _react = _interopRequireWildcard(require("react"));
var _IconLightbulb = _interopRequireDefault(require("terra-icon/lib/icon/IconLightbulb"));
var _terraButton = _interopRequireDefault(require("terra-button"));
var _IconEdit = _interopRequireDefault(require("terra-icon/lib/icon/IconEdit"));
var _IconAdd = _interopRequireDefault(require("terra-icon/lib/icon/IconAdd"));
var _IconAttachment = _interopRequireDefault(require("terra-icon/lib/icon/IconAttachment"));
var _terraToolbar = _interopRequireDefault(require("terra-toolbar"));
var _applicationNavigation = _interopRequireDefault(require("terra-application/lib/application-navigation"));
var _disclosureManager = require("terra-application/lib/disclosure-manager");
var _workspace = require("terra-application/lib/workspace");
var _notificationBanner = _interopRequireDefault(require("terra-application/lib/notification-banner"));
var _ModalPresenter = require("./ModalPresenter");
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || (0, _typeof2.default)(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
var Page1Content = /*#__PURE__*/_react.default.lazy(function () {
  return Promise.resolve().then(function () {
    return _interopRequireWildcard(require('./Page1Content'));
  });
});
var Page2Content = /*#__PURE__*/_react.default.lazy(function () {
  return Promise.resolve().then(function () {
    return _interopRequireWildcard(require('./Page2Content'));
  });
});
var Page3Content = /*#__PURE__*/_react.default.lazy(function () {
  return Promise.resolve().then(function () {
    return _interopRequireWildcard(require('./Page3Content'));
  });
});
var userConfig = {
  name: 'Demo User',
  initials: 'DU'
};
var WorkspaceContent1 = function WorkspaceContent1() {
  return /*#__PURE__*/_react.default.createElement(_workspace.WorkspaceContent, null, /*#__PURE__*/_react.default.createElement("div", null, /*#__PURE__*/_react.default.createElement("p", null, "Example Workspace Content 1")));
};
var WorkspaceContent2 = function WorkspaceContent2() {
  return /*#__PURE__*/_react.default.createElement(_workspace.WorkspaceContent, {
    toolbar: /*#__PURE__*/_react.default.createElement(_terraToolbar.default, null, /*#__PURE__*/_react.default.createElement(_terraButton.default, {
      text: "Button 1",
      variant: "utility",
      icon: /*#__PURE__*/_react.default.createElement(_IconEdit.default, null)
    }), /*#__PURE__*/_react.default.createElement(_terraButton.default, {
      text: "Button 2",
      variant: "utility",
      icon: /*#__PURE__*/_react.default.createElement(_IconAdd.default, null)
    }), /*#__PURE__*/_react.default.createElement(_terraButton.default, {
      text: "Button 3",
      variant: "utility",
      icon: /*#__PURE__*/_react.default.createElement(_IconAttachment.default, null)
    }))
  }, /*#__PURE__*/_react.default.createElement("div", null, /*#__PURE__*/_react.default.createElement("p", null, "Example Workspace Content 2")), /*#__PURE__*/_react.default.createElement(_notificationBanner.default, {
    variant: "hazard-low",
    description: "Example Notification"
  }));
};
var DemoAppNavigation = function DemoAppNavigation() {
  var disclosureManager = (0, _react.useContext)(_disclosureManager.DisclosureManagerContext);
  var _useState = (0, _react.useState)('page_1'),
    _useState2 = (0, _slicedToArray2.default)(_useState, 2),
    activeNavItem = _useState2[0],
    setActiveNavItem = _useState2[1];
  var _useState3 = (0, _react.useState)(false),
    _useState4 = (0, _slicedToArray2.default)(_useState3, 2),
    loggedOut = _useState4[0],
    setLoggedOut = _useState4[1];
  var disclosureDismissRef = (0, _react.useRef)();
  var navigationItemsRef = (0, _react.useRef)([{
    key: 'page_1',
    text: 'Page 1'
  }, {
    key: 'page_2',
    text: 'Page 2'
  }, {
    key: 'page_3',
    text: 'Page 3'
  }]);
  if (loggedOut) {
    return /*#__PURE__*/_react.default.createElement("div", null, /*#__PURE__*/_react.default.createElement("p", null, "Logged Out"), /*#__PURE__*/_react.default.createElement("button", {
      type: "button",
      onClick: function onClick() {
        setLoggedOut(false);
      }
    }, "Reset"));
  }
  var workspace = /*#__PURE__*/_react.default.createElement(_applicationNavigation.default.Workspace, {
    id: "application-workspace-example",
    initialActiveItemKey: "item-1",
    initialSize: {
      scale: 0
    },
    initialIsOpen: true
  }, /*#__PURE__*/_react.default.createElement(_applicationNavigation.default.Workspace.Item, {
    itemKey: "item-1",
    label: "Item 1",
    render: function render() {
      return /*#__PURE__*/_react.default.createElement(WorkspaceContent1, null);
    }
  }), /*#__PURE__*/_react.default.createElement(_applicationNavigation.default.Workspace.Item, {
    itemKey: "item-2",
    label: "Item 2",
    render: function render() {
      return /*#__PURE__*/_react.default.createElement(WorkspaceContent2, null);
    }
  }), /*#__PURE__*/_react.default.createElement(_applicationNavigation.default.Workspace.Item, {
    itemKey: "item-3",
    label: "Item 3",
    render: function render() {
      return /*#__PURE__*/_react.default.createElement(WorkspaceContent2, null);
    }
  }), /*#__PURE__*/_react.default.createElement(_applicationNavigation.default.Workspace.Item, {
    itemKey: "item-4",
    label: "Item 4",
    render: function render() {
      return /*#__PURE__*/_react.default.createElement(WorkspaceContent2, null);
    }
  }), /*#__PURE__*/_react.default.createElement(_applicationNavigation.default.Workspace.Item, {
    itemKey: "item-5",
    label: "Item 5",
    render: function render() {
      return /*#__PURE__*/_react.default.createElement(WorkspaceContent2, null);
    }
  }), /*#__PURE__*/_react.default.createElement(_applicationNavigation.default.Workspace.Item, {
    itemKey: "item-6",
    label: "Item 6",
    render: function render() {
      return /*#__PURE__*/_react.default.createElement(WorkspaceContent2, null);
    }
  }));
  var pageContent;
  switch (activeNavItem) {
    case 'page_1':
      pageContent = /*#__PURE__*/_react.default.createElement(Page1Content, null);
      break;
    case 'page_2':
      pageContent = /*#__PURE__*/_react.default.createElement(Page2Content, null);
      break;
    case 'page_3':
      pageContent = /*#__PURE__*/_react.default.createElement(Page3Content, null);
      break;
    default:
      pageContent = null;
      break;
  }
  return /*#__PURE__*/_react.default.createElement(_applicationNavigation.default, {
    titleConfig: {
      title: 'Terra Application Demo'
    },
    workspace: workspace,
    userConfig: userConfig,
    navigationItems: navigationItemsRef.current,
    activeNavigationItemKey: activeNavItem,
    onSelectNavigationItem: function onSelectNavigationItem(key) {
      setActiveNavItem(key);
    },
    extensionItems: [{
      key: 'extension_1',
      icon: /*#__PURE__*/_react.default.createElement(_IconLightbulb.default, null),
      text: 'Extension 1'
    }],
    onSelectExtensionItem: function onSelectExtensionItem(key) {
      if (key === 'extension_1') {
        disclosureManager.disclose({
          preferredType: 'modal',
          size: 'large',
          content: {
            key: 'extension_1_modal',
            component: /*#__PURE__*/_react.default.createElement(_ModalPresenter.ModalContent, {
              name: "Extension Modal",
              onSubmit: function onSubmit() {
                if (disclosureDismissRef.current) {
                  disclosureDismissRef.current();
                  disclosureDismissRef.current = undefined;
                }
              }
            })
          }
        }).then(function (_ref) {
          var dismissDisclosure = _ref.dismissDisclosure;
          disclosureDismissRef.current = dismissDisclosure;
        });
      }
    },
    utilityItems: [{
      key: 'utility_1',
      text: 'Utility Item 1'
    }],
    onSelectUtilityItem: function onSelectUtilityItem(utilityItemKey) {
      if (utilityItemKey === 'utility_1') {
        disclosureManager.disclose({
          preferredType: 'modal',
          size: 'large',
          content: {
            key: 'utility_1_modal',
            component: /*#__PURE__*/_react.default.createElement(_ModalPresenter.ModalContent, {
              name: "Utility Modal",
              onSubmit: function onSubmit() {
                if (disclosureDismissRef.current) {
                  disclosureDismissRef.current();
                  disclosureDismissRef.current = undefined;
                }
              }
            })
          }
        }).then(function (_ref2) {
          var dismissDisclosure = _ref2.dismissDisclosure;
          disclosureDismissRef.current = dismissDisclosure;
        });
      }
    },
    onSelectLogout: function onSelectLogout() {
      setLoggedOut(true);
    }
  }, pageContent);
};
var _default = DemoAppNavigation;
exports.default = _default;