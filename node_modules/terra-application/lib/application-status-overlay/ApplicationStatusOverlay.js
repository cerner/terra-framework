"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _react = require("react");
var _propTypes = _interopRequireDefault(require("prop-types"));
var _terraButton = _interopRequireDefault(require("terra-button"));
var _v = _interopRequireDefault(require("uuid/v4"));
var _ApplicationStatusOverlayContext = _interopRequireDefault(require("./ApplicationStatusOverlayContext"));
var propTypes = {
  /**
   * An array of objects containing terra-button properties. A key attribute is required for each object.
   * This array is used to render buttons in the bottom section.
   * Example:`[{ text: 'Refresh Application', key: 1, variant: 'neutral', onClick: myRefreshFunction}]`
   */
  // eslint-disable-next-line react/forbid-foreign-prop-types
  buttonAttrs: _propTypes.default.arrayOf(_propTypes.default.shape(_terraButton.default.propTypes)),
  /**
   * The descriptive text, displayed under the title.
   */
  message: _propTypes.default.string,
  /**
   * Sets the glyph and title using a pre-baked variant. One of the following: `no-data`,
   * `no-matching-results`, `not-authorized`, or `error`
   */
  variant: _propTypes.default.oneOf(['no-data', 'no-matching-results', 'not-authorized', 'error'])
};
var defaultProps = {
  buttonAttrs: [],
  message: undefined,
  variant: undefined
};
var ApplicationStatusOverlay = function ApplicationStatusOverlay(props) {
  var buttonAttrs = props.buttonAttrs,
    message = props.message,
    variant = props.variant;
  var idRef = (0, _react.useRef)((0, _v.default)());
  var applicationStatusOverlay = (0, _react.useContext)(_ApplicationStatusOverlayContext.default);
  (0, _react.useLayoutEffect)(function () {
    applicationStatusOverlay.show(idRef.current, {
      buttonAttrs: buttonAttrs,
      message: message,
      variant: variant
    });
  }, [buttonAttrs, message, variant, idRef, applicationStatusOverlay]);
  (0, _react.useLayoutEffect)(function () {
    return function () {
      applicationStatusOverlay.hide(idRef.current);
    };
  }, [applicationStatusOverlay]);
  return null;
};
ApplicationStatusOverlay.propTypes = propTypes;
ApplicationStatusOverlay.defaultProps = defaultProps;
var _default = ApplicationStatusOverlay;
exports.default = _default;