"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _react = _interopRequireDefault(require("react"));
var _propTypes = _interopRequireDefault(require("prop-types"));
var _classnames = _interopRequireDefault(require("classnames"));
var _bind = _interopRequireDefault(require("classnames/bind"));
var _terraThemeContext = _interopRequireDefault(require("terra-theme-context"));
var _Option = _interopRequireDefault(require("./_Option"));
var _ClearOptionModule = _interopRequireDefault(require("./_ClearOption.module.scss"));
var _excluded = ["display", "value"];
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }
function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }
function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }
var cx = _bind.default.bind(_ClearOptionModule.default);
var propTypes = {
  /**
   * The display text of the clear option.
   */
  display: _propTypes.default.string,
  /**
   * The value of the clear option.
   */
  value: _propTypes.default.string
};
var ClearOption = function ClearOption(_ref) {
  var display = _ref.display,
    value = _ref.value,
    customProps = _objectWithoutProperties(_ref, _excluded);
  var theme = _react.default.useContext(_terraThemeContext.default);
  return /*#__PURE__*/_react.default.createElement(_Option.default, _extends({}, customProps, {
    className: (0, _classnames.default)(cx('clear-option', theme.className), customProps.className),
    display: display,
    value: value,
    isSelected: false,
    "data-terra-select-clear-option": true
  }));
};
ClearOption.propTypes = propTypes;
ClearOption.isOption = true;
var _default = ClearOption;
exports.default = _default;