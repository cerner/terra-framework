// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`DataGrid verifies onCellSelect callback is triggered when space is pressed on a masked cell 1`] = `
<ForwardRef
  id="test-terra-data-grid"
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": null,
      "now": [Function],
      "onError": [Function],
      "textComponent": "span",
      "timeZone": null,
    }
  }
  onCellSelect={
    [MockFunction] {
      "calls": Array [
        Array [
          Object {
            "columnId": "Column-2",
            "columnIndex": 2,
            "isCellSelectable": false,
            "isShiftPressed": undefined,
            "rowId": "1",
            "rowIndex": 1,
          },
        ],
      ],
      "results": Array [
        Object {
          "type": "return",
          "value": undefined,
        },
      ],
    }
  }
  overflowColumns={
    Array [
      Object {
        "displayName": "March 17",
        "id": "Column-2",
        "isSelectable": false,
      },
    ]
  }
  pinnedColumns={
    Array [
      Object {
        "displayName": " Vitals",
        "id": "Column-0",
      },
      Object {
        "displayName": "March 16",
        "id": "Column-1",
      },
    ]
  }
  rows={
    Array [
      Object {
        "cells": Array [
          Object {
            "content": "Heart Rate Monitored (bpm)",
            "isSelectable": false,
          },
          Object {
            "content": "",
          },
          Object {
            "content": "66",
            "isMasked": true,
          },
        ],
        "id": "1",
      },
      Object {
        "cells": Array [
          Object {
            "content": "Temperature Oral (degC)",
          },
          Object {
            "content": "36.7",
          },
          Object {
            "content": "36.9",
            "isMasked": true,
          },
        ],
        "id": "2",
      },
      Object {
        "cells": Array [
          Object {
            "content": "Cardiac Index (L/min/m2)",
          },
          Object {
            "content": "2.25",
          },
          Object {
            "content": "2.28",
            "isMasked": true,
          },
        ],
        "id": "3",
      },
      Object {
        "cells": Array [
          Object {
            "content": "Oxygen Flow Rate (L/min)",
          },
          Object {
            "content": "63",
          },
          Object {
            "content": "47",
          },
        ],
        "id": "4",
        "isSelected": true,
      },
    ]
  }
>
  <InjectIntl(Component)
    columnHeaderHeight="2.5rem"
    defaultColumnWidth={200}
    focusFuncRef={null}
    id="test-terra-data-grid"
    intl={
      Object {
        "defaultFormats": Object {},
        "defaultLocale": "en",
        "formatDate": [Function],
        "formatHTMLMessage": [Function],
        "formatMessage": [Function],
        "formatNumber": [Function],
        "formatPlural": [Function],
        "formatRelative": [Function],
        "formatTime": [Function],
        "formats": Object {},
        "formatters": Object {
          "getDateTimeFormat": [Function],
          "getMessageFormat": [Function],
          "getNumberFormat": [Function],
          "getPluralFormat": [Function],
          "getRelativeFormat": [Function],
        },
        "locale": "en",
        "messages": null,
        "now": [Function],
        "onError": [Function],
        "textComponent": "span",
        "timeZone": null,
      }
    }
    onCellSelect={
      [MockFunction] {
        "calls": Array [
          Array [
            Object {
              "columnId": "Column-2",
              "columnIndex": 2,
              "isCellSelectable": false,
              "isShiftPressed": undefined,
              "rowId": "1",
              "rowIndex": 1,
            },
          ],
        ],
        "results": Array [
          Object {
            "type": "return",
            "value": undefined,
          },
        ],
      }
    }
    overflowColumns={
      Array [
        Object {
          "displayName": "March 17",
          "id": "Column-2",
          "isSelectable": false,
        },
      ]
    }
    pinnedColumns={
      Array [
        Object {
          "displayName": " Vitals",
          "id": "Column-0",
        },
        Object {
          "displayName": "March 16",
          "id": "Column-1",
        },
      ]
    }
    rowHeaderIndex={0}
    rowHeight="2.5rem"
    rows={
      Array [
        Object {
          "cells": Array [
            Object {
              "content": "Heart Rate Monitored (bpm)",
              "isSelectable": false,
            },
            Object {
              "content": "",
            },
            Object {
              "content": "66",
              "isMasked": true,
            },
          ],
          "id": "1",
        },
        Object {
          "cells": Array [
            Object {
              "content": "Temperature Oral (degC)",
            },
            Object {
              "content": "36.7",
            },
            Object {
              "content": "36.9",
              "isMasked": true,
            },
          ],
          "id": "2",
        },
        Object {
          "cells": Array [
            Object {
              "content": "Cardiac Index (L/min/m2)",
            },
            Object {
              "content": "2.25",
            },
            Object {
              "content": "2.28",
              "isMasked": true,
            },
          ],
          "id": "3",
        },
        Object {
          "cells": Array [
            Object {
              "content": "Oxygen Flow Rate (L/min)",
            },
            Object {
              "content": "63",
            },
            Object {
              "content": "47",
            },
          ],
          "id": "4",
          "isSelected": true,
        },
      ]
    }
  >
<<<<<<< HEAD
    <Component
      columnHeaderHeight="2.5rem"
      defaultColumnWidth={200}
      focusFuncRef={null}
      id="test-terra-data-grid"
      intl={
        Object {
          "defaultFormats": Object {},
          "defaultLocale": "en",
          "formatDate": [Function],
          "formatHTMLMessage": [Function],
          "formatMessage": [Function],
          "formatNumber": [Function],
          "formatPlural": [Function],
          "formatRelative": [Function],
          "formatTime": [Function],
          "formats": Object {},
          "formatters": Object {
            "getDateTimeFormat": [Function],
            "getMessageFormat": [Function],
            "getNumberFormat": [Function],
            "getPluralFormat": [Function],
            "getRelativeFormat": [Function],
          },
          "locale": "en",
          "messages": null,
          "now": [Function],
          "onError": [Function],
          "textComponent": "span",
          "timeZone": null,
        }
      }
      onCellSelect={
        [MockFunction] {
          "calls": Array [
            Array [
              Object {
                "columnId": "Column-2",
                "columnIndex": 2,
                "isCellSelectable": false,
                "isShiftPressed": undefined,
                "rowId": "1",
                "rowIndex": 1,
=======
    <div
      className="data-grid-container"
    >
      <table
        className="data-grid"
        id="test-terra-data-grid"
        onFocus={[Function]}
        onKeyDown={[Function]}
        onMouseDown={[Function]}
        role="grid"
        tabIndex={0}
      >
        <Memo(ColumnHeader)
          activeColumnResizing={false}
          columns={
            Array [
              Object {
                "displayName": " Vitals",
                "id": "Column-0",
                "maximumWidth": 300,
                "minimumWidth": 60,
                "width": 200,
>>>>>>> f0c547b77 (Copy the Jest updates)
              },
            ],
          ],
          "results": Array [
            Object {
              "type": "return",
              "value": undefined,
            },
          ],
        }
      }
      overflowColumns={
        Array [
          Object {
            "displayName": "March 17",
            "id": "Column-2",
            "isSelectable": false,
          },
        ]
      }
      pinnedColumns={
        Array [
          Object {
            "displayName": " Vitals",
            "id": "Column-0",
          },
          Object {
            "displayName": "March 16",
            "id": "Column-1",
          },
        ]
      }
      rowHeaderIndex={0}
      rowHeight="2.5rem"
      rows={
        Array [
          Object {
            "cells": Array [
              Object {
<<<<<<< HEAD
                "content": "Heart Rate Monitored (bpm)",
                "isSelectable": false,
              },
              Object {
                "content": "",
              },
              Object {
                "content": "66",
                "isMasked": true,
              },
            ],
            "id": "1",
          },
          Object {
            "cells": Array [
              Object {
                "content": "Temperature Oral (degC)",
              },
              Object {
                "content": "36.7",
              },
              Object {
                "content": "36.9",
                "isMasked": true,
              },
            ],
            "id": "2",
          },
          Object {
            "cells": Array [
              Object {
                "content": "Cardiac Index (L/min/m2)",
              },
              Object {
                "content": "2.25",
              },
              Object {
                "content": "2.28",
                "isMasked": true,
              },
            ],
            "id": "3",
          },
          Object {
            "cells": Array [
              Object {
                "content": "Oxygen Flow Rate (L/min)",
              },
              Object {
                "content": "63",
              },
              Object {
                "content": "47",
              },
            ],
            "id": "4",
            "isSelected": true,
          },
        ]
      }
    >
      <div
        className="data-grid-container"
      >
        <table
          className="data-grid"
          id="test-terra-data-grid"
          onFocus={[Function]}
          onKeyDown={[Function]}
          onMouseDown={[Function]}
          role="grid"
          tabIndex={0}
        >
          <Memo(ColumnHeader)
            columns={
              Array [
                Object {
                  "displayName": " Vitals",
                  "id": "Column-0",
                  "maximumWidth": 300,
                  "minimumWidth": 60,
                  "width": 200,
                },
                Object {
                  "displayName": "March 16",
                  "id": "Column-1",
                  "maximumWidth": 300,
                  "minimumWidth": 60,
                  "width": 200,
                },
                Object {
                  "displayName": "March 17",
                  "id": "Column-2",
                  "isSelectable": false,
                  "maximumWidth": 300,
                  "minimumWidth": 60,
                  "width": 200,
                },
              ]
            }
            headerHeight="2.5rem"
            onColumnSelect={[Function]}
            onResizeMouseDown={[Function]}
            tableHeight={0}
          >
            <thead>
              <tr
                className="column-header-row"
                height="2.5rem"
=======
                "displayName": "March 16",
                "id": "Column-1",
                "maximumWidth": 300,
                "minimumWidth": 60,
                "width": 200,
              },
              Object {
                "displayName": "March 17",
                "id": "Column-2",
                "isSelectable": false,
                "maximumWidth": 300,
                "minimumWidth": 60,
                "width": 200,
              },
            ]
          }
          headerHeight="2.5rem"
          onColumnSelect={[Function]}
          onResizeHandleChange={[Function]}
          onResizeMouseDown={[Function]}
          tableHeight={0}
        >
          <thead>
            <tr
              className="column-header-row"
              height="2.5rem"
            >
              <InjectIntl(ColumnHeaderCell)
                columnIndex={0}
                displayName=" Vitals"
                headerHeight="2.5rem"
                id="Column-0"
                isActive={false}
                isResizeActive={false}
                key="Column-0"
                maximumWidth={300}
                minimumWidth={60}
                onColumnSelect={[Function]}
                onResizeHandleChange={[Function]}
                onResizeMouseDown={[Function]}
                rowIndex={0}
                tableHeight={0}
                width={200}
>>>>>>> f0c547b77 (Copy the Jest updates)
              >
                <InjectIntl(ColumnHeaderCell)
                  columnIndex={0}
                  displayName=" Vitals"
                  headerHeight="2.5rem"
                  id="Column-0"
<<<<<<< HEAD
                  key="Column-0"
                  maximumWidth={300}
                  minimumWidth={60}
=======
                  intl={
                    Object {
                      "defaultFormats": Object {},
                      "defaultLocale": "en",
                      "formatDate": [Function],
                      "formatHTMLMessage": [Function],
                      "formatMessage": [Function],
                      "formatNumber": [Function],
                      "formatPlural": [Function],
                      "formatRelative": [Function],
                      "formatTime": [Function],
                      "formats": Object {},
                      "formatters": Object {
                        "getDateTimeFormat": [Function],
                        "getMessageFormat": [Function],
                        "getNumberFormat": [Function],
                        "getPluralFormat": [Function],
                        "getRelativeFormat": [Function],
                      },
                      "locale": "en",
                      "messages": null,
                      "now": [Function],
                      "onError": [Function],
                      "textComponent": "span",
                      "timeZone": null,
                    }
                  }
                  isActive={false}
                  isResizable={true}
                  isResizeActive={false}
                  isSelectable={true}
<<<<<<< HEAD
                  maximumWidth={500}
                  minimumWidth={100}
>>>>>>> f0c547b77 (Copy the Jest updates)
=======
                  maximumWidth={300}
                  minimumWidth={60}
>>>>>>> d5c6ea0e7 (updated snapshots)
                  onColumnSelect={[Function]}
                  onResizeHandleChange={[Function]}
                  onResizeMouseDown={[Function]}
                  rowIndex={0}
                  tableHeight={0}
                  width={200}
                >
                  <ColumnHeaderCell
                    columnIndex={0}
                    displayName=" Vitals"
                    hasError={false}
                    headerHeight="2.5rem"
                    id="Column-0"
                    intl={
                      Object {
                        "defaultFormats": Object {},
                        "defaultLocale": "en",
                        "formatDate": [Function],
                        "formatHTMLMessage": [Function],
                        "formatMessage": [Function],
                        "formatNumber": [Function],
                        "formatPlural": [Function],
                        "formatRelative": [Function],
                        "formatTime": [Function],
                        "formats": Object {},
                        "formatters": Object {
                          "getDateTimeFormat": [Function],
                          "getMessageFormat": [Function],
                          "getNumberFormat": [Function],
                          "getPluralFormat": [Function],
                          "getRelativeFormat": [Function],
                        },
                        "locale": "en",
                        "messages": null,
                        "now": [Function],
                        "onError": [Function],
                        "textComponent": "span",
                        "timeZone": null,
                      }
                    }
                    isResizable={true}
                    isSelectable={true}
                    maximumWidth={300}
                    minimumWidth={60}
                    onColumnSelect={[Function]}
                    onResizeMouseDown={[Function]}
                    rowIndex={0}
                    tableHeight={0}
                    width={200}
                  >
                    <th
                      className="column-header selectable pinned"
                      key="Column-0"
                      onKeyDown={[Function]}
                      onMouseDown={[Function]}
                      role="columnheader"
                      scope="col"
                      style={
                        Object {
                          "height": "2.5rem",
                          "left": 0,
                          "width": "200px",
                        }
                      }
                      tabIndex={-1}
                    >
<<<<<<< HEAD
                      <div
                        className="header-container"
                        role="button"
                      >
                        <span>
                           Vitals
                        </span>
                      </div>
                      <InjectIntl(ColumnResizeHandle)
=======
                      <span>
                         Vitals
                      </span>
                    </div>
                    <InjectIntl(ColumnResizeHandle)
                      columnIndex={0}
                      columnText=" Vitals"
                      columnWidth={200}
                      height={0}
                      isActive={false}
                      maximumWidth={300}
                      minimumWidth={60}
                      onResizeHandleChange={[Function]}
                      onResizeMouseDown={[Function]}
                      onResizeMouseUp={[Function]}
                    >
                      <ColumnResizeHandle
>>>>>>> f0c547b77 (Copy the Jest updates)
                        columnIndex={0}
                        columnResizeIncrement={10}
                        columnText=" Vitals"
                        columnWidth={200}
<<<<<<< HEAD
<<<<<<< HEAD
                        height={0}
                        maximumWidth={300}
                        minimumWidth={60}
=======
=======
                        height={0}
>>>>>>> d5c6ea0e7 (updated snapshots)
                        intl={
                          Object {
                            "defaultFormats": Object {},
                            "defaultLocale": "en",
                            "formatDate": [Function],
                            "formatHTMLMessage": [Function],
                            "formatMessage": [Function],
                            "formatNumber": [Function],
                            "formatPlural": [Function],
                            "formatRelative": [Function],
                            "formatTime": [Function],
                            "formats": Object {},
                            "formatters": Object {
                              "getDateTimeFormat": [Function],
                              "getMessageFormat": [Function],
                              "getNumberFormat": [Function],
                              "getPluralFormat": [Function],
                              "getRelativeFormat": [Function],
                            },
                            "locale": "en",
                            "messages": null,
                            "now": [Function],
                            "onError": [Function],
                            "textComponent": "span",
                            "timeZone": null,
                          }
                        }
                        isActive={false}
                        maximumWidth={300}
                        minimumWidth={60}
                        onResizeHandleChange={[Function]}
>>>>>>> f0c547b77 (Copy the Jest updates)
                        onResizeMouseDown={[Function]}
                        onResizeMouseUp={[Function]}
                        setIsActive={[Function]}
                      >
<<<<<<< HEAD
                        <ColumnResizeHandle
                          columnIndex={0}
                          columnText=" Vitals"
                          columnWidth={200}
                          height={0}
                          intl={
                            Object {
                              "defaultFormats": Object {},
                              "defaultLocale": "en",
                              "formatDate": [Function],
                              "formatHTMLMessage": [Function],
                              "formatMessage": [Function],
                              "formatNumber": [Function],
                              "formatPlural": [Function],
                              "formatRelative": [Function],
                              "formatTime": [Function],
                              "formats": Object {},
                              "formatters": Object {
                                "getDateTimeFormat": [Function],
                                "getMessageFormat": [Function],
                                "getNumberFormat": [Function],
                                "getPluralFormat": [Function],
                                "getRelativeFormat": [Function],
                              },
                              "locale": "en",
                              "messages": null,
                              "now": [Function],
                              "onError": [Function],
                              "textComponent": "span",
                              "timeZone": null,
                            }
                          }
                          maximumWidth={300}
                          minimumWidth={60}
                          onResizeMouseDown={[Function]}
<<<<<<< HEAD
=======
                          onResizeMouseUp={[Function]}
                          setIsActive={[Function]}
>>>>>>> b81bf7514 (updated snapshots)
                        >
                          <div
                            aria-hidden={true}
                            aria-label=" Vitals"
                            aria-valuemax={300}
                            aria-valuemin={60}
                            aria-valuenow={200}
                            aria-valuetext="Terra.dataGrid.resizeHandleValueText"
                            className="resize-handle"
                            draggable={true}
                            onBlur={[Function]}
                            onFocus={[Function]}
                            onMouseDown={[Function]}
<<<<<<< HEAD
                            role="slider"
=======
                            onMouseEnter={[Function]}
                            onMouseLeave={[Function]}
                            onMouseUp={[Function]}
                            role={null}
>>>>>>> c4b58f1ad (fixed jest tests)
                            style={
                              Object {
                                "height": "0px",
                              }
                            }
                            tabIndex={-1}
                          />
                        </ColumnResizeHandle>
                      </InjectIntl(ColumnResizeHandle)>
                    </th>
                  </ColumnHeaderCell>
                </InjectIntl(ColumnHeaderCell)>
                <InjectIntl(ColumnHeaderCell)
=======
                        <div
                          aria-hidden={true}
                          aria-label={null}
                          aria-valuemax={null}
                          aria-valuemin={null}
                          aria-valuenow={null}
                          aria-valuetext={null}
                          className="resize-handle"
                          draggable={true}
                          onBlur={[Function]}
                          onClick={[Function]}
                          onFocus={[Function]}
                          onKeyDown={[Function]}
                          onMouseDown={[Function]}
                          onMouseEnter={[Function]}
                          onMouseLeave={[Function]}
                          onMouseUp={[Function]}
                          role="divider"
                          style={
                            Object {
                              "height": "0px",
                            }
                          }
                          tabIndex={-1}
                        />
                      </ColumnResizeHandle>
                    </InjectIntl(ColumnResizeHandle)>
                  </th>
                </ColumnHeaderCell>
              </InjectIntl(ColumnHeaderCell)>
              <InjectIntl(ColumnHeaderCell)
                columnIndex={1}
                displayName="March 16"
                headerHeight="2.5rem"
                id="Column-1"
                isActive={false}
                isResizeActive={false}
                key="Column-1"
                maximumWidth={300}
                minimumWidth={60}
                onColumnSelect={[Function]}
                onResizeHandleChange={[Function]}
                onResizeMouseDown={[Function]}
                rowIndex={0}
                tableHeight={0}
                width={200}
              >
                <ColumnHeaderCell
>>>>>>> f0c547b77 (Copy the Jest updates)
                  columnIndex={1}
                  displayName="March 16"
                  headerHeight="2.5rem"
                  id="Column-1"
<<<<<<< HEAD
                  key="Column-1"
                  maximumWidth={300}
                  minimumWidth={60}
=======
                  intl={
                    Object {
                      "defaultFormats": Object {},
                      "defaultLocale": "en",
                      "formatDate": [Function],
                      "formatHTMLMessage": [Function],
                      "formatMessage": [Function],
                      "formatNumber": [Function],
                      "formatPlural": [Function],
                      "formatRelative": [Function],
                      "formatTime": [Function],
                      "formats": Object {},
                      "formatters": Object {
                        "getDateTimeFormat": [Function],
                        "getMessageFormat": [Function],
                        "getNumberFormat": [Function],
                        "getPluralFormat": [Function],
                        "getRelativeFormat": [Function],
                      },
                      "locale": "en",
                      "messages": null,
                      "now": [Function],
                      "onError": [Function],
                      "textComponent": "span",
                      "timeZone": null,
                    }
                  }
                  isActive={false}
                  isResizable={true}
                  isResizeActive={false}
                  isSelectable={true}
<<<<<<< HEAD
                  maximumWidth={500}
                  minimumWidth={100}
>>>>>>> f0c547b77 (Copy the Jest updates)
=======
                  maximumWidth={300}
                  minimumWidth={60}
>>>>>>> d5c6ea0e7 (updated snapshots)
                  onColumnSelect={[Function]}
                  onResizeHandleChange={[Function]}
                  onResizeMouseDown={[Function]}
                  rowIndex={0}
                  tableHeight={0}
                  width={200}
                >
                  <ColumnHeaderCell
                    columnIndex={1}
                    displayName="March 16"
                    hasError={false}
                    headerHeight="2.5rem"
                    id="Column-1"
                    intl={
                      Object {
                        "defaultFormats": Object {},
                        "defaultLocale": "en",
                        "formatDate": [Function],
                        "formatHTMLMessage": [Function],
                        "formatMessage": [Function],
                        "formatNumber": [Function],
                        "formatPlural": [Function],
                        "formatRelative": [Function],
                        "formatTime": [Function],
                        "formats": Object {},
                        "formatters": Object {
                          "getDateTimeFormat": [Function],
                          "getMessageFormat": [Function],
                          "getNumberFormat": [Function],
                          "getPluralFormat": [Function],
                          "getRelativeFormat": [Function],
                        },
                        "locale": "en",
                        "messages": null,
                        "now": [Function],
                        "onError": [Function],
                        "textComponent": "span",
                        "timeZone": null,
                      }
                    }
                    isResizable={true}
                    isSelectable={true}
                    maximumWidth={300}
                    minimumWidth={60}
                    onColumnSelect={[Function]}
                    onResizeMouseDown={[Function]}
                    rowIndex={0}
                    tableHeight={0}
                    width={200}
                  >
                    <th
                      className="column-header selectable pinned"
                      key="Column-1"
                      onKeyDown={[Function]}
                      onMouseDown={[Function]}
                      role="columnheader"
                      scope="col"
                      style={
                        Object {
                          "height": "2.5rem",
                          "left": 200,
                          "width": "200px",
                        }
                      }
                      tabIndex={-1}
                    >
<<<<<<< HEAD
                      <div
                        className="header-container"
                        role="button"
                      >
                        <span>
                          March 16
                        </span>
                      </div>
                      <InjectIntl(ColumnResizeHandle)
=======
                      <span>
                        March 16
                      </span>
                    </div>
                    <InjectIntl(ColumnResizeHandle)
                      columnIndex={1}
                      columnText="March 16"
                      columnWidth={200}
                      height={0}
                      isActive={false}
                      maximumWidth={300}
                      minimumWidth={60}
                      onResizeHandleChange={[Function]}
                      onResizeMouseDown={[Function]}
                      onResizeMouseUp={[Function]}
                    >
                      <ColumnResizeHandle
>>>>>>> f0c547b77 (Copy the Jest updates)
                        columnIndex={1}
                        columnResizeIncrement={10}
                        columnText="March 16"
                        columnWidth={200}
<<<<<<< HEAD
<<<<<<< HEAD
                        height={0}
                        maximumWidth={300}
                        minimumWidth={60}
=======
=======
                        height={0}
>>>>>>> d5c6ea0e7 (updated snapshots)
                        intl={
                          Object {
                            "defaultFormats": Object {},
                            "defaultLocale": "en",
                            "formatDate": [Function],
                            "formatHTMLMessage": [Function],
                            "formatMessage": [Function],
                            "formatNumber": [Function],
                            "formatPlural": [Function],
                            "formatRelative": [Function],
                            "formatTime": [Function],
                            "formats": Object {},
                            "formatters": Object {
                              "getDateTimeFormat": [Function],
                              "getMessageFormat": [Function],
                              "getNumberFormat": [Function],
                              "getPluralFormat": [Function],
                              "getRelativeFormat": [Function],
                            },
                            "locale": "en",
                            "messages": null,
                            "now": [Function],
                            "onError": [Function],
                            "textComponent": "span",
                            "timeZone": null,
                          }
                        }
                        isActive={false}
                        maximumWidth={300}
                        minimumWidth={60}
                        onResizeHandleChange={[Function]}
>>>>>>> f0c547b77 (Copy the Jest updates)
                        onResizeMouseDown={[Function]}
                        onResizeMouseUp={[Function]}
                        setIsActive={[Function]}
                      >
<<<<<<< HEAD
                        <ColumnResizeHandle
                          columnIndex={1}
                          columnText="March 16"
                          columnWidth={200}
                          height={0}
                          intl={
                            Object {
                              "defaultFormats": Object {},
                              "defaultLocale": "en",
                              "formatDate": [Function],
                              "formatHTMLMessage": [Function],
                              "formatMessage": [Function],
                              "formatNumber": [Function],
                              "formatPlural": [Function],
                              "formatRelative": [Function],
                              "formatTime": [Function],
                              "formats": Object {},
                              "formatters": Object {
                                "getDateTimeFormat": [Function],
                                "getMessageFormat": [Function],
                                "getNumberFormat": [Function],
                                "getPluralFormat": [Function],
                                "getRelativeFormat": [Function],
                              },
                              "locale": "en",
                              "messages": null,
                              "now": [Function],
                              "onError": [Function],
                              "textComponent": "span",
                              "timeZone": null,
                            }
                          }
                          maximumWidth={300}
                          minimumWidth={60}
                          onResizeMouseDown={[Function]}
<<<<<<< HEAD
=======
                          onResizeMouseUp={[Function]}
                          setIsActive={[Function]}
>>>>>>> b81bf7514 (updated snapshots)
                        >
                          <div
                            aria-hidden={true}
                            aria-label="March 16"
                            aria-valuemax={300}
                            aria-valuemin={60}
                            aria-valuenow={200}
                            aria-valuetext="Terra.dataGrid.resizeHandleValueText"
                            className="resize-handle"
                            draggable={true}
                            onBlur={[Function]}
                            onFocus={[Function]}
                            onMouseDown={[Function]}
<<<<<<< HEAD
                            role="slider"
=======
                            onMouseEnter={[Function]}
                            onMouseLeave={[Function]}
                            onMouseUp={[Function]}
                            role={null}
>>>>>>> c4b58f1ad (fixed jest tests)
                            style={
                              Object {
                                "height": "0px",
                              }
                            }
                            tabIndex={-1}
                          />
                        </ColumnResizeHandle>
                      </InjectIntl(ColumnResizeHandle)>
                      <div
                        className="pinned-columns-divider"
                        style={
                          Object {
                            "height": 0,
                            "left": 199,
                          }
                        }
                      />
                    </th>
                  </ColumnHeaderCell>
                </InjectIntl(ColumnHeaderCell)>
                <InjectIntl(ColumnHeaderCell)
=======
                        <div
                          aria-hidden={true}
                          aria-label={null}
                          aria-valuemax={null}
                          aria-valuemin={null}
                          aria-valuenow={null}
                          aria-valuetext={null}
                          className="resize-handle"
                          draggable={true}
                          onBlur={[Function]}
                          onClick={[Function]}
                          onFocus={[Function]}
                          onKeyDown={[Function]}
                          onMouseDown={[Function]}
                          onMouseEnter={[Function]}
                          onMouseLeave={[Function]}
                          onMouseUp={[Function]}
                          role="divider"
                          style={
                            Object {
                              "height": "0px",
                            }
                          }
                          tabIndex={-1}
                        />
                      </ColumnResizeHandle>
                    </InjectIntl(ColumnResizeHandle)>
                    <div
                      className="pinned-columns-divider"
                      style={
                        Object {
                          "height": 0,
                          "left": 199,
                        }
                      }
                    />
                  </th>
                </ColumnHeaderCell>
              </InjectIntl(ColumnHeaderCell)>
              <InjectIntl(ColumnHeaderCell)
                columnIndex={2}
                displayName="March 17"
                headerHeight="2.5rem"
                id="Column-2"
                isActive={false}
                isResizeActive={false}
                isSelectable={false}
                key="Column-2"
                maximumWidth={300}
                minimumWidth={60}
                onColumnSelect={[Function]}
                onResizeHandleChange={[Function]}
                onResizeMouseDown={[Function]}
                rowIndex={0}
                tableHeight={0}
                width={200}
              >
                <ColumnHeaderCell
>>>>>>> f0c547b77 (Copy the Jest updates)
                  columnIndex={2}
                  displayName="March 17"
                  headerHeight="2.5rem"
                  id="Column-2"
<<<<<<< HEAD
                  isSelectable={false}
                  key="Column-2"
                  maximumWidth={300}
                  minimumWidth={60}
=======
                  intl={
                    Object {
                      "defaultFormats": Object {},
                      "defaultLocale": "en",
                      "formatDate": [Function],
                      "formatHTMLMessage": [Function],
                      "formatMessage": [Function],
                      "formatNumber": [Function],
                      "formatPlural": [Function],
                      "formatRelative": [Function],
                      "formatTime": [Function],
                      "formats": Object {},
                      "formatters": Object {
                        "getDateTimeFormat": [Function],
                        "getMessageFormat": [Function],
                        "getNumberFormat": [Function],
                        "getPluralFormat": [Function],
                        "getRelativeFormat": [Function],
                      },
                      "locale": "en",
                      "messages": null,
                      "now": [Function],
                      "onError": [Function],
                      "textComponent": "span",
                      "timeZone": null,
                    }
                  }
                  isActive={false}
                  isResizable={true}
                  isResizeActive={false}
                  isSelectable={false}
<<<<<<< HEAD
                  maximumWidth={500}
                  minimumWidth={100}
>>>>>>> f0c547b77 (Copy the Jest updates)
=======
                  maximumWidth={300}
                  minimumWidth={60}
>>>>>>> d5c6ea0e7 (updated snapshots)
                  onColumnSelect={[Function]}
                  onResizeHandleChange={[Function]}
                  onResizeMouseDown={[Function]}
                  rowIndex={0}
                  tableHeight={0}
                  width={200}
                >
<<<<<<< HEAD
                  <ColumnHeaderCell
                    columnIndex={2}
                    displayName="March 17"
                    hasError={false}
                    headerHeight="2.5rem"
                    id="Column-2"
                    intl={
=======
                  <th
                    className="column-header"
                    key="Column-2"
                    onKeyDown={[Function]}
                    onMouseDown={[Function]}
                    role="columnheader"
                    scope="col"
                    style={
>>>>>>> f0c547b77 (Copy the Jest updates)
                      Object {
                        "defaultFormats": Object {},
                        "defaultLocale": "en",
                        "formatDate": [Function],
                        "formatHTMLMessage": [Function],
                        "formatMessage": [Function],
                        "formatNumber": [Function],
                        "formatPlural": [Function],
                        "formatRelative": [Function],
                        "formatTime": [Function],
                        "formats": Object {},
                        "formatters": Object {
                          "getDateTimeFormat": [Function],
                          "getMessageFormat": [Function],
                          "getNumberFormat": [Function],
                          "getPluralFormat": [Function],
                          "getRelativeFormat": [Function],
                        },
                        "locale": "en",
                        "messages": null,
                        "now": [Function],
                        "onError": [Function],
                        "textComponent": "span",
                        "timeZone": null,
                      }
                    }
                    isResizable={true}
                    isSelectable={false}
                    maximumWidth={300}
                    minimumWidth={60}
                    onColumnSelect={[Function]}
                    onResizeMouseDown={[Function]}
                    rowIndex={0}
                    tableHeight={0}
                    width={200}
                  >
                    <th
                      className="column-header"
                      key="Column-2"
                      role="columnheader"
                      scope="col"
                      style={
                        Object {
                          "height": "2.5rem",
                          "left": null,
                          "width": "200px",
                        }
                      }
                      tabIndex={-1}
                    >
<<<<<<< HEAD
                      <div
                        className="header-container"
                        role="button"
                      >
                        <span>
                          March 17
                        </span>
                      </div>
                      <InjectIntl(ColumnResizeHandle)
=======
                      <span>
                        March 17
                      </span>
                    </div>
                    <InjectIntl(ColumnResizeHandle)
                      columnIndex={2}
                      columnText="March 17"
                      columnWidth={200}
                      height={0}
                      isActive={false}
                      maximumWidth={300}
                      minimumWidth={60}
                      onResizeHandleChange={[Function]}
                      onResizeMouseDown={[Function]}
                      onResizeMouseUp={[Function]}
                    >
                      <ColumnResizeHandle
>>>>>>> f0c547b77 (Copy the Jest updates)
                        columnIndex={2}
                        columnResizeIncrement={10}
                        columnText="March 17"
                        columnWidth={200}
<<<<<<< HEAD
<<<<<<< HEAD
                        height={0}
                        maximumWidth={300}
                        minimumWidth={60}
=======
=======
                        height={0}
>>>>>>> d5c6ea0e7 (updated snapshots)
                        intl={
                          Object {
                            "defaultFormats": Object {},
                            "defaultLocale": "en",
                            "formatDate": [Function],
                            "formatHTMLMessage": [Function],
                            "formatMessage": [Function],
                            "formatNumber": [Function],
                            "formatPlural": [Function],
                            "formatRelative": [Function],
                            "formatTime": [Function],
                            "formats": Object {},
                            "formatters": Object {
                              "getDateTimeFormat": [Function],
                              "getMessageFormat": [Function],
                              "getNumberFormat": [Function],
                              "getPluralFormat": [Function],
                              "getRelativeFormat": [Function],
                            },
                            "locale": "en",
                            "messages": null,
                            "now": [Function],
                            "onError": [Function],
                            "textComponent": "span",
                            "timeZone": null,
                          }
                        }
                        isActive={false}
                        maximumWidth={300}
                        minimumWidth={60}
                        onResizeHandleChange={[Function]}
>>>>>>> f0c547b77 (Copy the Jest updates)
                        onResizeMouseDown={[Function]}
                        onResizeMouseUp={[Function]}
                        setIsActive={[Function]}
                      >
<<<<<<< HEAD
                        <ColumnResizeHandle
                          columnIndex={2}
                          columnText="March 17"
                          columnWidth={200}
                          height={0}
                          intl={
                            Object {
                              "defaultFormats": Object {},
                              "defaultLocale": "en",
                              "formatDate": [Function],
                              "formatHTMLMessage": [Function],
                              "formatMessage": [Function],
                              "formatNumber": [Function],
                              "formatPlural": [Function],
                              "formatRelative": [Function],
                              "formatTime": [Function],
                              "formats": Object {},
                              "formatters": Object {
                                "getDateTimeFormat": [Function],
                                "getMessageFormat": [Function],
                                "getNumberFormat": [Function],
                                "getPluralFormat": [Function],
                                "getRelativeFormat": [Function],
                              },
                              "locale": "en",
                              "messages": null,
                              "now": [Function],
                              "onError": [Function],
                              "textComponent": "span",
                              "timeZone": null,
                            }
                          }
                          maximumWidth={300}
                          minimumWidth={60}
                          onResizeMouseDown={[Function]}
<<<<<<< HEAD
=======
                          onResizeMouseUp={[Function]}
                          setIsActive={[Function]}
>>>>>>> b81bf7514 (updated snapshots)
                        >
                          <div
                            aria-hidden={true}
                            aria-label="March 17"
                            aria-valuemax={300}
                            aria-valuemin={60}
                            aria-valuenow={200}
                            aria-valuetext="Terra.dataGrid.resizeHandleValueText"
                            className="resize-handle"
                            draggable={true}
                            onBlur={[Function]}
                            onFocus={[Function]}
                            onMouseDown={[Function]}
<<<<<<< HEAD
                            role="slider"
=======
                            onMouseEnter={[Function]}
                            onMouseLeave={[Function]}
                            onMouseUp={[Function]}
                            role={null}
>>>>>>> c4b58f1ad (fixed jest tests)
                            style={
                              Object {
                                "height": "0px",
                              }
                            }
                            tabIndex={-1}
                          />
                        </ColumnResizeHandle>
                      </InjectIntl(ColumnResizeHandle)>
                    </th>
                  </ColumnHeaderCell>
                </InjectIntl(ColumnHeaderCell)>
              </tr>
            </thead>
          </Memo(ColumnHeader)>
          <tbody>
            <Row
              cells={
                Array [
                  Object {
                    "content": "Heart Rate Monitored (bpm)",
                    "isSelectable": false,
                  },
                  Object {
                    "content": "",
                  },
                  Object {
                    "content": "66",
                    "isMasked": true,
                  },
                ]
=======
                        <div
                          aria-hidden={true}
                          aria-label={null}
                          aria-valuemax={null}
                          aria-valuemin={null}
                          aria-valuenow={null}
                          aria-valuetext={null}
                          className="resize-handle"
                          draggable={true}
                          onBlur={[Function]}
                          onClick={[Function]}
                          onFocus={[Function]}
                          onKeyDown={[Function]}
                          onMouseDown={[Function]}
                          onMouseEnter={[Function]}
                          onMouseLeave={[Function]}
                          onMouseUp={[Function]}
                          role="divider"
                          style={
                            Object {
                              "height": "0px",
                            }
                          }
                          tabIndex={-1}
                        />
                      </ColumnResizeHandle>
                    </InjectIntl(ColumnResizeHandle)>
                  </th>
                </ColumnHeaderCell>
              </InjectIntl(ColumnHeaderCell)>
            </tr>
          </thead>
        </Memo(ColumnHeader)>
        <tbody>
          <Row
            cells={
              Array [
                Object {
                  "content": "Heart Rate Monitored (bpm)",
                  "isSelectable": false,
                },
                Object {
                  "content": "",
                },
                Object {
                  "content": "66",
                  "isMasked": true,
                },
              ]
            }
            displayedColumns={
              Array [
                Object {
                  "displayName": " Vitals",
                  "id": "Column-0",
                },
                Object {
                  "displayName": "March 16",
                  "id": "Column-1",
                },
                Object {
                  "displayName": "March 17",
                  "id": "Column-2",
                  "isSelectable": false,
                },
              ]
            }
            height="2.5rem"
            id="1"
            key="1"
            onCellSelect={[Function]}
            rowHeaderIndex={0}
            rowIndex={1}
          >
            <tr
              className="row"
              onMouseEnter={null}
              onMouseLeave={null}
              style={
                Object {
                  "height": "2.5rem",
                }
>>>>>>> f0c547b77 (Copy the Jest updates)
              }
              displayedColumns={
                Array [
                  Object {
                    "displayName": " Vitals",
                    "id": "Column-0",
                  },
                  Object {
                    "displayName": "March 16",
                    "id": "Column-1",
                  },
                  Object {
                    "displayName": "March 17",
                    "id": "Column-2",
                    "isSelectable": false,
                  },
                ]
              }
              height="2.5rem"
              id="1"
              key="1"
              onCellSelect={[Function]}
              rowHeaderIndex={0}
              rowIndex={1}
            >
              <tr
                className="row"
                onMouseEnter={null}
                onMouseLeave={null}
                style={
                  Object {
                    "height": "2.5rem",
                  }
                }
              >
                <InjectIntl(Cell)
                  columnId="Column-0"
                  columnIndex={0}
                  height="2.5rem"
                  isHighlighted={false}
                  isRowHeader={true}
                  isSelectable={false}
                  key="1_Column-0"
                  onCellSelect={[Function]}
                  rowId="1"
                  rowIndex={1}
                >
                  <Cell
                    columnId="Column-0"
                    columnIndex={0}
                    height="2.5rem"
                    intl={
                      Object {
                        "defaultFormats": Object {},
                        "defaultLocale": "en",
                        "formatDate": [Function],
                        "formatHTMLMessage": [Function],
                        "formatMessage": [Function],
                        "formatNumber": [Function],
                        "formatPlural": [Function],
                        "formatRelative": [Function],
                        "formatTime": [Function],
                        "formats": Object {},
                        "formatters": Object {
                          "getDateTimeFormat": [Function],
                          "getMessageFormat": [Function],
                          "getNumberFormat": [Function],
                          "getPluralFormat": [Function],
                          "getRelativeFormat": [Function],
                        },
                        "locale": "en",
                        "messages": null,
                        "now": [Function],
                        "onError": [Function],
                        "textComponent": "span",
                        "timeZone": null,
                      }
                    }
                    isHighlighted={false}
                    isMasked={false}
                    isRowHeader={true}
                    isSelectable={false}
                    isSelected={false}
                    onCellSelect={[Function]}
                    rowId="1"
                    rowIndex={1}
                  >
                    <th
                      aria-selected={false}
                      className="cell pinned"
                      onKeyDown={[Function]}
                      onMouseDown={[Function]}
                      role="rowheader"
                      scope="row"
                      style={
                        Object {
                          "left": 0,
                        }
                      }
                      tabIndex={-1}
                    >
                      <FocusTrap
                        _createFocusTrap={[Function]}
                        active={false}
                        focusTrapOptions={
                          Object {
                            "clickOutsideDeactivates": true,
                            "escapeDeactivates": false,
                            "onDeactivate": [Function],
                            "returnFocusOnDeactivate": true,
                          }
                        }
                        paused={false}
                      >
                        <div
                          className="cell-content"
                          style={
                            Object {
                              "height": "2.5rem",
                            }
                          }
                        >
                          Heart Rate Monitored (bpm)
                        </div>
                      </FocusTrap>
                    </th>
                  </Cell>
                </InjectIntl(Cell)>
                <InjectIntl(Cell)
                  columnId="Column-1"
                  columnIndex={1}
                  height="2.5rem"
                  isHighlighted={false}
                  isRowHeader={false}
                  key="1_Column-1"
                  onCellSelect={[Function]}
                  rowId="1"
                  rowIndex={1}
                >
                  <Cell
                    columnId="Column-1"
                    columnIndex={1}
                    height="2.5rem"
                    intl={
                      Object {
                        "defaultFormats": Object {},
                        "defaultLocale": "en",
                        "formatDate": [Function],
                        "formatHTMLMessage": [Function],
                        "formatMessage": [Function],
                        "formatNumber": [Function],
                        "formatPlural": [Function],
                        "formatRelative": [Function],
                        "formatTime": [Function],
                        "formats": Object {},
                        "formatters": Object {
                          "getDateTimeFormat": [Function],
                          "getMessageFormat": [Function],
                          "getNumberFormat": [Function],
                          "getPluralFormat": [Function],
                          "getRelativeFormat": [Function],
                        },
                        "locale": "en",
                        "messages": null,
                        "now": [Function],
                        "onError": [Function],
                        "textComponent": "span",
                        "timeZone": null,
                      }
                    }
                    isHighlighted={false}
                    isMasked={false}
                    isRowHeader={false}
                    isSelectable={true}
                    isSelected={false}
                    onCellSelect={[Function]}
                    rowId="1"
                    rowIndex={1}
                  >
                    <td
                      aria-selected={false}
                      className="cell pinned selectable blank"
                      onKeyDown={[Function]}
                      onMouseDown={[Function]}
                      style={
                        Object {
                          "left": 200,
                        }
                      }
                      tabIndex={-1}
                    >
                      <FocusTrap
                        _createFocusTrap={[Function]}
                        active={false}
                        focusTrapOptions={
                          Object {
                            "clickOutsideDeactivates": true,
                            "escapeDeactivates": false,
                            "onDeactivate": [Function],
                            "returnFocusOnDeactivate": true,
                          }
                        }
                        paused={false}
                      >
                        <div
                          className="cell-content"
                          style={
                            Object {
                              "height": "2.5rem",
                            }
                          }
                        >
                          <span
                            className="no-data-cell"
                          >
                            Terra.dataGrid.blank
                          </span>
                        </div>
                      </FocusTrap>
                    </td>
                  </Cell>
                </InjectIntl(Cell)>
                <InjectIntl(Cell)
                  columnId="Column-2"
                  columnIndex={2}
                  height="2.5rem"
                  isHighlighted={false}
                  isMasked={true}
                  isRowHeader={false}
                  key="1_Column-2"
                  onCellSelect={[Function]}
                  rowId="1"
                  rowIndex={1}
                >
                  <Cell
                    columnId="Column-2"
                    columnIndex={2}
                    height="2.5rem"
                    intl={
                      Object {
                        "defaultFormats": Object {},
                        "defaultLocale": "en",
                        "formatDate": [Function],
                        "formatHTMLMessage": [Function],
                        "formatMessage": [Function],
                        "formatNumber": [Function],
                        "formatPlural": [Function],
                        "formatRelative": [Function],
                        "formatTime": [Function],
                        "formats": Object {},
                        "formatters": Object {
                          "getDateTimeFormat": [Function],
                          "getMessageFormat": [Function],
                          "getNumberFormat": [Function],
                          "getPluralFormat": [Function],
                          "getRelativeFormat": [Function],
                        },
                        "locale": "en",
                        "messages": null,
                        "now": [Function],
                        "onError": [Function],
                        "textComponent": "span",
                        "timeZone": null,
                      }
                    }
                    isHighlighted={false}
                    isMasked={true}
                    isRowHeader={false}
                    isSelectable={true}
                    isSelected={false}
                    onCellSelect={[Function]}
                    rowId="1"
                    rowIndex={1}
                  >
                    <td
                      aria-selected={false}
                      className="cell masked"
                      onKeyDown={[Function]}
                      onMouseDown={[Function]}
                      style={
                        Object {
                          "left": null,
                        }
                      }
                      tabIndex={-1}
                    >
                      <FocusTrap
                        _createFocusTrap={[Function]}
                        active={false}
                        focusTrapOptions={
                          Object {
                            "clickOutsideDeactivates": true,
                            "escapeDeactivates": false,
                            "onDeactivate": [Function],
                            "returnFocusOnDeactivate": true,
                          }
                        }
                        paused={false}
                      >
                        <div
                          className="cell-content"
                          style={
                            Object {
                              "height": "2.5rem",
                            }
                          }
                        >
                          <span
                            className="no-data-cell"
                          >
                            Terra.dataGrid.maskedCell
                          </span>
                        </div>
                      </FocusTrap>
                    </td>
                  </Cell>
                </InjectIntl(Cell)>
              </tr>
            </Row>
            <Row
              cells={
                Array [
                  Object {
                    "content": "Temperature Oral (degC)",
                  },
                  Object {
                    "content": "36.7",
                  },
                  Object {
                    "content": "36.9",
                    "isMasked": true,
                  },
                ]
              }
              displayedColumns={
                Array [
                  Object {
                    "displayName": " Vitals",
                    "id": "Column-0",
                  },
                  Object {
                    "displayName": "March 16",
                    "id": "Column-1",
                  },
                  Object {
                    "displayName": "March 17",
                    "id": "Column-2",
                    "isSelectable": false,
                  },
                ]
              }
              height="2.5rem"
              id="2"
              key="2"
              onCellSelect={[Function]}
              rowHeaderIndex={0}
              rowIndex={2}
            >
              <tr
                className="row"
                onMouseEnter={null}
                onMouseLeave={null}
                style={
                  Object {
                    "height": "2.5rem",
                  }
                }
              >
                <InjectIntl(Cell)
                  columnId="Column-0"
                  columnIndex={0}
                  height="2.5rem"
                  isHighlighted={false}
                  isRowHeader={true}
                  key="2_Column-0"
                  onCellSelect={[Function]}
                  rowId="2"
                  rowIndex={2}
                >
                  <Cell
                    columnId="Column-0"
                    columnIndex={0}
                    height="2.5rem"
                    intl={
                      Object {
                        "defaultFormats": Object {},
                        "defaultLocale": "en",
                        "formatDate": [Function],
                        "formatHTMLMessage": [Function],
                        "formatMessage": [Function],
                        "formatNumber": [Function],
                        "formatPlural": [Function],
                        "formatRelative": [Function],
                        "formatTime": [Function],
                        "formats": Object {},
                        "formatters": Object {
                          "getDateTimeFormat": [Function],
                          "getMessageFormat": [Function],
                          "getNumberFormat": [Function],
                          "getPluralFormat": [Function],
                          "getRelativeFormat": [Function],
                        },
                        "locale": "en",
                        "messages": null,
                        "now": [Function],
                        "onError": [Function],
                        "textComponent": "span",
                        "timeZone": null,
                      }
                    }
                    isHighlighted={false}
                    isMasked={false}
                    isRowHeader={true}
                    isSelectable={true}
                    isSelected={false}
                    onCellSelect={[Function]}
                    rowId="2"
                    rowIndex={2}
                  >
                    <th
                      aria-selected={false}
                      className="cell pinned selectable"
                      onKeyDown={[Function]}
                      onMouseDown={[Function]}
                      role="rowheader"
                      scope="row"
                      style={
                        Object {
                          "left": 0,
                        }
                      }
                      tabIndex={-1}
                    >
                      <FocusTrap
                        _createFocusTrap={[Function]}
                        active={false}
                        focusTrapOptions={
                          Object {
                            "clickOutsideDeactivates": true,
                            "escapeDeactivates": false,
                            "onDeactivate": [Function],
                            "returnFocusOnDeactivate": true,
                          }
                        }
                        paused={false}
                      >
                        <div
                          className="cell-content"
                          style={
                            Object {
                              "height": "2.5rem",
                            }
                          }
                        >
                          Temperature Oral (degC)
                        </div>
                      </FocusTrap>
                    </th>
                  </Cell>
                </InjectIntl(Cell)>
                <InjectIntl(Cell)
                  columnId="Column-1"
                  columnIndex={1}
                  height="2.5rem"
                  isHighlighted={false}
                  isRowHeader={false}
                  key="2_Column-1"
                  onCellSelect={[Function]}
                  rowId="2"
                  rowIndex={2}
                >
                  <Cell
                    columnId="Column-1"
                    columnIndex={1}
                    height="2.5rem"
                    intl={
                      Object {
                        "defaultFormats": Object {},
                        "defaultLocale": "en",
                        "formatDate": [Function],
                        "formatHTMLMessage": [Function],
                        "formatMessage": [Function],
                        "formatNumber": [Function],
                        "formatPlural": [Function],
                        "formatRelative": [Function],
                        "formatTime": [Function],
                        "formats": Object {},
                        "formatters": Object {
                          "getDateTimeFormat": [Function],
                          "getMessageFormat": [Function],
                          "getNumberFormat": [Function],
                          "getPluralFormat": [Function],
                          "getRelativeFormat": [Function],
                        },
                        "locale": "en",
                        "messages": null,
                        "now": [Function],
                        "onError": [Function],
                        "textComponent": "span",
                        "timeZone": null,
                      }
                    }
                    isHighlighted={false}
                    isMasked={false}
                    isRowHeader={false}
                    isSelectable={true}
                    isSelected={false}
                    onCellSelect={[Function]}
                    rowId="2"
                    rowIndex={2}
                  >
                    <td
                      aria-selected={false}
                      className="cell pinned selectable"
                      onKeyDown={[Function]}
                      onMouseDown={[Function]}
                      style={
                        Object {
                          "left": 200,
                        }
                      }
                      tabIndex={-1}
                    >
                      <FocusTrap
                        _createFocusTrap={[Function]}
                        active={false}
                        focusTrapOptions={
                          Object {
                            "clickOutsideDeactivates": true,
                            "escapeDeactivates": false,
                            "onDeactivate": [Function],
                            "returnFocusOnDeactivate": true,
                          }
                        }
                        paused={false}
                      >
                        <div
                          className="cell-content"
                          style={
                            Object {
                              "height": "2.5rem",
                            }
                          }
                        >
                          36.7
                        </div>
                      </FocusTrap>
                    </td>
                  </Cell>
                </InjectIntl(Cell)>
                <InjectIntl(Cell)
                  columnId="Column-2"
                  columnIndex={2}
                  height="2.5rem"
                  isHighlighted={false}
                  isMasked={true}
                  isRowHeader={false}
                  key="2_Column-2"
                  onCellSelect={[Function]}
                  rowId="2"
                  rowIndex={2}
                >
                  <Cell
                    columnId="Column-2"
                    columnIndex={2}
                    height="2.5rem"
                    intl={
                      Object {
                        "defaultFormats": Object {},
                        "defaultLocale": "en",
                        "formatDate": [Function],
                        "formatHTMLMessage": [Function],
                        "formatMessage": [Function],
                        "formatNumber": [Function],
                        "formatPlural": [Function],
                        "formatRelative": [Function],
                        "formatTime": [Function],
                        "formats": Object {},
                        "formatters": Object {
                          "getDateTimeFormat": [Function],
                          "getMessageFormat": [Function],
                          "getNumberFormat": [Function],
                          "getPluralFormat": [Function],
                          "getRelativeFormat": [Function],
                        },
                        "locale": "en",
                        "messages": null,
                        "now": [Function],
                        "onError": [Function],
                        "textComponent": "span",
                        "timeZone": null,
                      }
                    }
                    isHighlighted={false}
                    isMasked={true}
                    isRowHeader={false}
                    isSelectable={true}
                    isSelected={false}
                    onCellSelect={[Function]}
                    rowId="2"
                    rowIndex={2}
                  >
                    <td
                      aria-selected={false}
                      className="cell masked"
                      onKeyDown={[Function]}
                      onMouseDown={[Function]}
                      style={
                        Object {
                          "left": null,
                        }
                      }
                      tabIndex={-1}
                    >
                      <FocusTrap
                        _createFocusTrap={[Function]}
                        active={false}
                        focusTrapOptions={
                          Object {
                            "clickOutsideDeactivates": true,
                            "escapeDeactivates": false,
                            "onDeactivate": [Function],
                            "returnFocusOnDeactivate": true,
                          }
                        }
                        paused={false}
                      >
                        <div
                          className="cell-content"
                          style={
                            Object {
                              "height": "2.5rem",
                            }
                          }
                        >
                          <span
                            className="no-data-cell"
                          >
                            Terra.dataGrid.maskedCell
                          </span>
                        </div>
                      </FocusTrap>
                    </td>
                  </Cell>
                </InjectIntl(Cell)>
              </tr>
            </Row>
            <Row
              cells={
                Array [
                  Object {
                    "content": "Cardiac Index (L/min/m2)",
                  },
                  Object {
                    "content": "2.25",
                  },
                  Object {
                    "content": "2.28",
                    "isMasked": true,
                  },
                ]
              }
              displayedColumns={
                Array [
                  Object {
                    "displayName": " Vitals",
                    "id": "Column-0",
                  },
                  Object {
                    "displayName": "March 16",
                    "id": "Column-1",
                  },
                  Object {
                    "displayName": "March 17",
                    "id": "Column-2",
                    "isSelectable": false,
                  },
                ]
              }
              height="2.5rem"
              id="3"
              key="3"
              onCellSelect={[Function]}
              rowHeaderIndex={0}
              rowIndex={3}
            >
              <tr
                className="row"
                onMouseEnter={null}
                onMouseLeave={null}
                style={
                  Object {
                    "height": "2.5rem",
                  }
                }
              >
                <InjectIntl(Cell)
                  columnId="Column-0"
                  columnIndex={0}
                  height="2.5rem"
                  isHighlighted={false}
                  isRowHeader={true}
                  key="3_Column-0"
                  onCellSelect={[Function]}
                  rowId="3"
                  rowIndex={3}
                >
                  <Cell
                    columnId="Column-0"
                    columnIndex={0}
                    height="2.5rem"
                    intl={
                      Object {
                        "defaultFormats": Object {},
                        "defaultLocale": "en",
                        "formatDate": [Function],
                        "formatHTMLMessage": [Function],
                        "formatMessage": [Function],
                        "formatNumber": [Function],
                        "formatPlural": [Function],
                        "formatRelative": [Function],
                        "formatTime": [Function],
                        "formats": Object {},
                        "formatters": Object {
                          "getDateTimeFormat": [Function],
                          "getMessageFormat": [Function],
                          "getNumberFormat": [Function],
                          "getPluralFormat": [Function],
                          "getRelativeFormat": [Function],
                        },
                        "locale": "en",
                        "messages": null,
                        "now": [Function],
                        "onError": [Function],
                        "textComponent": "span",
                        "timeZone": null,
                      }
                    }
                    isHighlighted={false}
                    isMasked={false}
                    isRowHeader={true}
                    isSelectable={true}
                    isSelected={false}
                    onCellSelect={[Function]}
                    rowId="3"
                    rowIndex={3}
                  >
                    <th
                      aria-selected={false}
                      className="cell pinned selectable"
                      onKeyDown={[Function]}
                      onMouseDown={[Function]}
                      role="rowheader"
                      scope="row"
                      style={
                        Object {
                          "left": 0,
                        }
                      }
                      tabIndex={-1}
                    >
                      <FocusTrap
                        _createFocusTrap={[Function]}
                        active={false}
                        focusTrapOptions={
                          Object {
                            "clickOutsideDeactivates": true,
                            "escapeDeactivates": false,
                            "onDeactivate": [Function],
                            "returnFocusOnDeactivate": true,
                          }
                        }
                        paused={false}
                      >
                        <div
                          className="cell-content"
                          style={
                            Object {
                              "height": "2.5rem",
                            }
                          }
                        >
                          Cardiac Index (L/min/m2)
                        </div>
                      </FocusTrap>
                    </th>
                  </Cell>
                </InjectIntl(Cell)>
                <InjectIntl(Cell)
                  columnId="Column-1"
                  columnIndex={1}
                  height="2.5rem"
                  isHighlighted={false}
                  isRowHeader={false}
                  key="3_Column-1"
                  onCellSelect={[Function]}
                  rowId="3"
                  rowIndex={3}
                >
                  <Cell
                    columnId="Column-1"
                    columnIndex={1}
                    height="2.5rem"
                    intl={
                      Object {
                        "defaultFormats": Object {},
                        "defaultLocale": "en",
                        "formatDate": [Function],
                        "formatHTMLMessage": [Function],
                        "formatMessage": [Function],
                        "formatNumber": [Function],
                        "formatPlural": [Function],
                        "formatRelative": [Function],
                        "formatTime": [Function],
                        "formats": Object {},
                        "formatters": Object {
                          "getDateTimeFormat": [Function],
                          "getMessageFormat": [Function],
                          "getNumberFormat": [Function],
                          "getPluralFormat": [Function],
                          "getRelativeFormat": [Function],
                        },
                        "locale": "en",
                        "messages": null,
                        "now": [Function],
                        "onError": [Function],
                        "textComponent": "span",
                        "timeZone": null,
                      }
                    }
                    isHighlighted={false}
                    isMasked={false}
                    isRowHeader={false}
                    isSelectable={true}
                    isSelected={false}
                    onCellSelect={[Function]}
                    rowId="3"
                    rowIndex={3}
                  >
                    <td
                      aria-selected={false}
                      className="cell pinned selectable"
                      onKeyDown={[Function]}
                      onMouseDown={[Function]}
                      style={
                        Object {
                          "left": 200,
                        }
                      }
                      tabIndex={-1}
                    >
                      <FocusTrap
                        _createFocusTrap={[Function]}
                        active={false}
                        focusTrapOptions={
                          Object {
                            "clickOutsideDeactivates": true,
                            "escapeDeactivates": false,
                            "onDeactivate": [Function],
                            "returnFocusOnDeactivate": true,
                          }
                        }
                        paused={false}
                      >
                        <div
                          className="cell-content"
                          style={
                            Object {
                              "height": "2.5rem",
                            }
                          }
                        >
                          2.25
                        </div>
                      </FocusTrap>
                    </td>
                  </Cell>
                </InjectIntl(Cell)>
                <InjectIntl(Cell)
                  columnId="Column-2"
                  columnIndex={2}
                  height="2.5rem"
                  isHighlighted={false}
                  isMasked={true}
                  isRowHeader={false}
                  key="3_Column-2"
                  onCellSelect={[Function]}
                  rowId="3"
                  rowIndex={3}
                >
                  <Cell
                    columnId="Column-2"
                    columnIndex={2}
                    height="2.5rem"
                    intl={
                      Object {
                        "defaultFormats": Object {},
                        "defaultLocale": "en",
                        "formatDate": [Function],
                        "formatHTMLMessage": [Function],
                        "formatMessage": [Function],
                        "formatNumber": [Function],
                        "formatPlural": [Function],
                        "formatRelative": [Function],
                        "formatTime": [Function],
                        "formats": Object {},
                        "formatters": Object {
                          "getDateTimeFormat": [Function],
                          "getMessageFormat": [Function],
                          "getNumberFormat": [Function],
                          "getPluralFormat": [Function],
                          "getRelativeFormat": [Function],
                        },
                        "locale": "en",
                        "messages": null,
                        "now": [Function],
                        "onError": [Function],
                        "textComponent": "span",
                        "timeZone": null,
                      }
                    }
                    isHighlighted={false}
                    isMasked={true}
                    isRowHeader={false}
                    isSelectable={true}
                    isSelected={false}
                    onCellSelect={[Function]}
                    rowId="3"
                    rowIndex={3}
                  >
                    <td
                      aria-selected={false}
                      className="cell masked"
                      onKeyDown={[Function]}
                      onMouseDown={[Function]}
                      style={
                        Object {
                          "left": null,
                        }
                      }
                      tabIndex={-1}
                    >
                      <FocusTrap
                        _createFocusTrap={[Function]}
                        active={false}
                        focusTrapOptions={
                          Object {
                            "clickOutsideDeactivates": true,
                            "escapeDeactivates": false,
                            "onDeactivate": [Function],
                            "returnFocusOnDeactivate": true,
                          }
                        }
                        paused={false}
                      >
                        <div
                          className="cell-content"
                          style={
                            Object {
                              "height": "2.5rem",
                            }
                          }
                        >
                          <span
                            className="no-data-cell"
                          >
                            Terra.dataGrid.maskedCell
                          </span>
                        </div>
                      </FocusTrap>
                    </td>
                  </Cell>
                </InjectIntl(Cell)>
              </tr>
            </Row>
            <Row
              cells={
                Array [
                  Object {
                    "content": "Oxygen Flow Rate (L/min)",
                  },
                  Object {
                    "content": "63",
                  },
                  Object {
                    "content": "47",
                  },
                ]
              }
              displayedColumns={
                Array [
                  Object {
                    "displayName": " Vitals",
                    "id": "Column-0",
                  },
                  Object {
                    "displayName": "March 16",
                    "id": "Column-1",
                  },
                  Object {
                    "displayName": "March 17",
                    "id": "Column-2",
                    "isSelectable": false,
                  },
                ]
              }
              height="2.5rem"
              id="4"
              isSelected={true}
              key="4"
              onCellSelect={[Function]}
              rowHeaderIndex={0}
              rowIndex={4}
            >
              <tr
                className="row selected"
                onMouseEnter={null}
                onMouseLeave={null}
                style={
                  Object {
                    "height": "2.5rem",
                  }
                }
              >
                <InjectIntl(Cell)
                  columnId="Column-0"
                  columnIndex={0}
                  height="2.5rem"
                  isHighlighted={true}
                  isRowHeader={true}
                  key="4_Column-0"
                  onCellSelect={[Function]}
                  rowId="4"
                  rowIndex={4}
                >
                  <Cell
                    columnId="Column-0"
                    columnIndex={0}
                    height="2.5rem"
                    intl={
                      Object {
                        "defaultFormats": Object {},
                        "defaultLocale": "en",
                        "formatDate": [Function],
                        "formatHTMLMessage": [Function],
                        "formatMessage": [Function],
                        "formatNumber": [Function],
                        "formatPlural": [Function],
                        "formatRelative": [Function],
                        "formatTime": [Function],
                        "formats": Object {},
                        "formatters": Object {
                          "getDateTimeFormat": [Function],
                          "getMessageFormat": [Function],
                          "getNumberFormat": [Function],
                          "getPluralFormat": [Function],
                          "getRelativeFormat": [Function],
                        },
                        "locale": "en",
                        "messages": null,
                        "now": [Function],
                        "onError": [Function],
                        "textComponent": "span",
                        "timeZone": null,
                      }
                    }
                    isHighlighted={true}
                    isMasked={false}
                    isRowHeader={true}
                    isSelectable={true}
                    isSelected={false}
                    onCellSelect={[Function]}
                    rowId="4"
                    rowIndex={4}
                  >
                    <th
                      aria-selected={false}
                      className="cell pinned selectable highlighted"
                      onKeyDown={[Function]}
                      onMouseDown={[Function]}
                      role="rowheader"
                      scope="row"
                      style={
                        Object {
                          "left": 0,
                        }
                      }
                      tabIndex={-1}
                    >
                      <FocusTrap
                        _createFocusTrap={[Function]}
                        active={false}
                        focusTrapOptions={
                          Object {
                            "clickOutsideDeactivates": true,
                            "escapeDeactivates": false,
                            "onDeactivate": [Function],
                            "returnFocusOnDeactivate": true,
                          }
                        }
                        paused={false}
                      >
                        <div
                          className="cell-content"
                          style={
                            Object {
                              "height": "2.5rem",
                            }
                          }
                        >
                          Oxygen Flow Rate (L/min)
                        </div>
                      </FocusTrap>
                    </th>
                  </Cell>
                </InjectIntl(Cell)>
                <InjectIntl(Cell)
                  columnId="Column-1"
                  columnIndex={1}
                  height="2.5rem"
                  isHighlighted={true}
                  isRowHeader={false}
                  key="4_Column-1"
                  onCellSelect={[Function]}
                  rowId="4"
                  rowIndex={4}
                >
                  <Cell
                    columnId="Column-1"
                    columnIndex={1}
                    height="2.5rem"
                    intl={
                      Object {
                        "defaultFormats": Object {},
                        "defaultLocale": "en",
                        "formatDate": [Function],
                        "formatHTMLMessage": [Function],
                        "formatMessage": [Function],
                        "formatNumber": [Function],
                        "formatPlural": [Function],
                        "formatRelative": [Function],
                        "formatTime": [Function],
                        "formats": Object {},
                        "formatters": Object {
                          "getDateTimeFormat": [Function],
                          "getMessageFormat": [Function],
                          "getNumberFormat": [Function],
                          "getPluralFormat": [Function],
                          "getRelativeFormat": [Function],
                        },
                        "locale": "en",
                        "messages": null,
                        "now": [Function],
                        "onError": [Function],
                        "textComponent": "span",
                        "timeZone": null,
                      }
                    }
                    isHighlighted={true}
                    isMasked={false}
                    isRowHeader={false}
                    isSelectable={true}
                    isSelected={false}
                    onCellSelect={[Function]}
                    rowId="4"
                    rowIndex={4}
                  >
                    <td
                      aria-selected={false}
                      className="cell pinned selectable highlighted"
                      onKeyDown={[Function]}
                      onMouseDown={[Function]}
                      style={
                        Object {
                          "left": 200,
                        }
                      }
                      tabIndex={-1}
                    >
                      <FocusTrap
                        _createFocusTrap={[Function]}
                        active={false}
                        focusTrapOptions={
                          Object {
                            "clickOutsideDeactivates": true,
                            "escapeDeactivates": false,
                            "onDeactivate": [Function],
                            "returnFocusOnDeactivate": true,
                          }
                        }
                        paused={false}
                      >
                        <div
                          className="cell-content"
                          style={
                            Object {
                              "height": "2.5rem",
                            }
                          }
                        >
                          63
                        </div>
                      </FocusTrap>
                    </td>
                  </Cell>
                </InjectIntl(Cell)>
                <InjectIntl(Cell)
                  columnId="Column-2"
                  columnIndex={2}
                  height="2.5rem"
                  isHighlighted={true}
                  isRowHeader={false}
                  key="4_Column-2"
                  onCellSelect={[Function]}
                  rowId="4"
                  rowIndex={4}
                >
                  <Cell
                    columnId="Column-2"
                    columnIndex={2}
                    height="2.5rem"
                    intl={
                      Object {
                        "defaultFormats": Object {},
                        "defaultLocale": "en",
                        "formatDate": [Function],
                        "formatHTMLMessage": [Function],
                        "formatMessage": [Function],
                        "formatNumber": [Function],
                        "formatPlural": [Function],
                        "formatRelative": [Function],
                        "formatTime": [Function],
                        "formats": Object {},
                        "formatters": Object {
                          "getDateTimeFormat": [Function],
                          "getMessageFormat": [Function],
                          "getNumberFormat": [Function],
                          "getPluralFormat": [Function],
                          "getRelativeFormat": [Function],
                        },
                        "locale": "en",
                        "messages": null,
                        "now": [Function],
                        "onError": [Function],
                        "textComponent": "span",
                        "timeZone": null,
                      }
                    }
                    isHighlighted={true}
                    isMasked={false}
                    isRowHeader={false}
                    isSelectable={true}
                    isSelected={false}
                    onCellSelect={[Function]}
                    rowId="4"
                    rowIndex={4}
                  >
                    <td
                      aria-selected={false}
                      className="cell selectable highlighted"
                      onKeyDown={[Function]}
                      onMouseDown={[Function]}
                      style={
                        Object {
                          "left": null,
                        }
                      }
                      tabIndex={-1}
                    >
                      <FocusTrap
                        _createFocusTrap={[Function]}
                        active={false}
                        focusTrapOptions={
                          Object {
                            "clickOutsideDeactivates": true,
                            "escapeDeactivates": false,
                            "onDeactivate": [Function],
                            "returnFocusOnDeactivate": true,
                          }
                        }
                        paused={false}
                      >
                        <div
                          className="cell-content"
                          style={
                            Object {
                              "height": "2.5rem",
                            }
                          }
                        >
                          47
                        </div>
                      </FocusTrap>
                    </td>
                  </Cell>
                </InjectIntl(Cell)>
              </tr>
            </Row>
          </tbody>
        </table>
        <VisuallyHiddenText
          aria-atomic="true"
          aria-live="polite"
<<<<<<< HEAD
          text={null}
        >
          <span
            aria-atomic="true"
            aria-live="polite"
            className="visually-hidden-text"
          />
        </VisuallyHiddenText>
      </div>
    </Component>
  </InjectIntl(Component)>
</ForwardRef>
=======
          className="visually-hidden-text"
        />
      </VisuallyHiddenText>
      <VisuallyHiddenText
        aria-atomic="true"
        aria-live="polite"
        text={null}
      >
        <span
          aria-atomic="true"
          aria-live="polite"
          className="visually-hidden-text"
        />
      </VisuallyHiddenText>
    </div>
  </DataGrid>
</InjectIntl(DataGrid)>
>>>>>>> f0c547b77 (Copy the Jest updates)
`;

exports[`DataGrid verifies onCellSelect callback is triggered when space is pressed on a non-selectable cell 1`] = `
<ForwardRef
  id="test-terra-data-grid"
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": null,
      "now": [Function],
      "onError": [Function],
      "textComponent": "span",
      "timeZone": null,
    }
  }
  onCellSelect={
    [MockFunction] {
      "calls": Array [
        Array [
          Object {
            "columnId": "Column-0",
            "columnIndex": 0,
            "isCellSelectable": false,
            "isShiftPressed": undefined,
            "rowId": "1",
            "rowIndex": 1,
          },
        ],
      ],
      "results": Array [
        Object {
          "type": "return",
          "value": undefined,
        },
      ],
    }
  }
  overflowColumns={
    Array [
      Object {
        "displayName": "March 17",
        "id": "Column-2",
        "isSelectable": false,
      },
    ]
  }
  pinnedColumns={
    Array [
      Object {
        "displayName": " Vitals",
        "id": "Column-0",
      },
      Object {
        "displayName": "March 16",
        "id": "Column-1",
      },
    ]
  }
  rows={
    Array [
      Object {
        "cells": Array [
          Object {
            "content": "Heart Rate Monitored (bpm)",
            "isSelectable": false,
          },
          Object {
            "content": "",
          },
          Object {
            "content": "66",
            "isMasked": true,
          },
        ],
        "id": "1",
      },
      Object {
        "cells": Array [
          Object {
            "content": "Temperature Oral (degC)",
          },
          Object {
            "content": "36.7",
          },
          Object {
            "content": "36.9",
            "isMasked": true,
          },
        ],
        "id": "2",
      },
      Object {
        "cells": Array [
          Object {
            "content": "Cardiac Index (L/min/m2)",
          },
          Object {
            "content": "2.25",
          },
          Object {
            "content": "2.28",
            "isMasked": true,
          },
        ],
        "id": "3",
      },
      Object {
        "cells": Array [
          Object {
            "content": "Oxygen Flow Rate (L/min)",
          },
          Object {
            "content": "63",
          },
          Object {
            "content": "47",
          },
        ],
        "id": "4",
        "isSelected": true,
      },
    ]
  }
>
  <InjectIntl(Component)
    columnHeaderHeight="2.5rem"
    defaultColumnWidth={200}
    focusFuncRef={null}
    id="test-terra-data-grid"
    intl={
      Object {
        "defaultFormats": Object {},
        "defaultLocale": "en",
        "formatDate": [Function],
        "formatHTMLMessage": [Function],
        "formatMessage": [Function],
        "formatNumber": [Function],
        "formatPlural": [Function],
        "formatRelative": [Function],
        "formatTime": [Function],
        "formats": Object {},
        "formatters": Object {
          "getDateTimeFormat": [Function],
          "getMessageFormat": [Function],
          "getNumberFormat": [Function],
          "getPluralFormat": [Function],
          "getRelativeFormat": [Function],
        },
        "locale": "en",
        "messages": null,
        "now": [Function],
        "onError": [Function],
        "textComponent": "span",
        "timeZone": null,
      }
    }
    onCellSelect={
      [MockFunction] {
        "calls": Array [
          Array [
            Object {
              "columnId": "Column-0",
              "columnIndex": 0,
              "isCellSelectable": false,
              "isShiftPressed": undefined,
              "rowId": "1",
              "rowIndex": 1,
            },
          ],
        ],
        "results": Array [
          Object {
            "type": "return",
            "value": undefined,
          },
        ],
      }
    }
    overflowColumns={
      Array [
        Object {
          "displayName": "March 17",
          "id": "Column-2",
          "isSelectable": false,
        },
      ]
    }
    pinnedColumns={
      Array [
        Object {
          "displayName": " Vitals",
          "id": "Column-0",
        },
        Object {
          "displayName": "March 16",
          "id": "Column-1",
        },
      ]
    }
    rowHeaderIndex={0}
    rowHeight="2.5rem"
    rows={
      Array [
        Object {
          "cells": Array [
            Object {
              "content": "Heart Rate Monitored (bpm)",
              "isSelectable": false,
            },
            Object {
              "content": "",
            },
            Object {
              "content": "66",
              "isMasked": true,
            },
          ],
          "id": "1",
        },
        Object {
          "cells": Array [
            Object {
              "content": "Temperature Oral (degC)",
            },
            Object {
              "content": "36.7",
            },
            Object {
              "content": "36.9",
              "isMasked": true,
            },
          ],
          "id": "2",
        },
        Object {
          "cells": Array [
            Object {
              "content": "Cardiac Index (L/min/m2)",
            },
            Object {
              "content": "2.25",
            },
            Object {
              "content": "2.28",
              "isMasked": true,
            },
          ],
          "id": "3",
        },
        Object {
          "cells": Array [
            Object {
              "content": "Oxygen Flow Rate (L/min)",
            },
            Object {
              "content": "63",
            },
            Object {
              "content": "47",
            },
          ],
          "id": "4",
          "isSelected": true,
        },
      ]
    }
  >
<<<<<<< HEAD
    <Component
      columnHeaderHeight="2.5rem"
      defaultColumnWidth={200}
      focusFuncRef={null}
      id="test-terra-data-grid"
      intl={
        Object {
          "defaultFormats": Object {},
          "defaultLocale": "en",
          "formatDate": [Function],
          "formatHTMLMessage": [Function],
          "formatMessage": [Function],
          "formatNumber": [Function],
          "formatPlural": [Function],
          "formatRelative": [Function],
          "formatTime": [Function],
          "formats": Object {},
          "formatters": Object {
            "getDateTimeFormat": [Function],
            "getMessageFormat": [Function],
            "getNumberFormat": [Function],
            "getPluralFormat": [Function],
            "getRelativeFormat": [Function],
          },
          "locale": "en",
          "messages": null,
          "now": [Function],
          "onError": [Function],
          "textComponent": "span",
          "timeZone": null,
        }
      }
      onCellSelect={
        [MockFunction] {
          "calls": Array [
            Array [
              Object {
                "columnId": "Column-0",
                "columnIndex": 0,
                "isCellSelectable": false,
                "isShiftPressed": undefined,
                "rowId": "1",
                "rowIndex": 1,
=======
    <div
      className="data-grid-container"
    >
      <table
        className="data-grid"
        id="test-terra-data-grid"
        onFocus={[Function]}
        onKeyDown={[Function]}
        onMouseDown={[Function]}
        role="grid"
        tabIndex={0}
      >
        <Memo(ColumnHeader)
          activeColumnResizing={false}
          columns={
            Array [
              Object {
                "displayName": " Vitals",
                "id": "Column-0",
                "maximumWidth": 300,
                "minimumWidth": 60,
                "width": 200,
>>>>>>> f0c547b77 (Copy the Jest updates)
              },
            ],
          ],
          "results": Array [
            Object {
              "type": "return",
              "value": undefined,
            },
          ],
        }
      }
      overflowColumns={
        Array [
          Object {
            "displayName": "March 17",
            "id": "Column-2",
            "isSelectable": false,
          },
        ]
      }
      pinnedColumns={
        Array [
          Object {
            "displayName": " Vitals",
            "id": "Column-0",
          },
          Object {
            "displayName": "March 16",
            "id": "Column-1",
          },
        ]
      }
      rowHeaderIndex={0}
      rowHeight="2.5rem"
      rows={
        Array [
          Object {
            "cells": Array [
              Object {
<<<<<<< HEAD
                "content": "Heart Rate Monitored (bpm)",
                "isSelectable": false,
              },
              Object {
                "content": "",
              },
              Object {
                "content": "66",
                "isMasked": true,
              },
            ],
            "id": "1",
          },
          Object {
            "cells": Array [
              Object {
                "content": "Temperature Oral (degC)",
              },
              Object {
                "content": "36.7",
              },
              Object {
                "content": "36.9",
                "isMasked": true,
              },
            ],
            "id": "2",
          },
          Object {
            "cells": Array [
              Object {
                "content": "Cardiac Index (L/min/m2)",
              },
              Object {
                "content": "2.25",
              },
              Object {
                "content": "2.28",
                "isMasked": true,
              },
            ],
            "id": "3",
          },
          Object {
            "cells": Array [
              Object {
                "content": "Oxygen Flow Rate (L/min)",
              },
              Object {
                "content": "63",
              },
              Object {
                "content": "47",
              },
            ],
            "id": "4",
            "isSelected": true,
          },
        ]
      }
    >
      <div
        className="data-grid-container"
      >
        <table
          className="data-grid"
          id="test-terra-data-grid"
          onFocus={[Function]}
          onKeyDown={[Function]}
          onMouseDown={[Function]}
          role="grid"
          tabIndex={0}
        >
          <Memo(ColumnHeader)
            columns={
              Array [
                Object {
                  "displayName": " Vitals",
                  "id": "Column-0",
                  "maximumWidth": 300,
                  "minimumWidth": 60,
                  "width": 200,
                },
                Object {
                  "displayName": "March 16",
                  "id": "Column-1",
                  "maximumWidth": 300,
                  "minimumWidth": 60,
                  "width": 200,
                },
                Object {
                  "displayName": "March 17",
                  "id": "Column-2",
                  "isSelectable": false,
                  "maximumWidth": 300,
                  "minimumWidth": 60,
                  "width": 200,
                },
              ]
            }
            headerHeight="2.5rem"
            onColumnSelect={[Function]}
            onResizeMouseDown={[Function]}
            tableHeight={0}
          >
            <thead>
              <tr
                className="column-header-row"
                height="2.5rem"
=======
                "displayName": "March 16",
                "id": "Column-1",
                "maximumWidth": 300,
                "minimumWidth": 60,
                "width": 200,
              },
              Object {
                "displayName": "March 17",
                "id": "Column-2",
                "isSelectable": false,
                "maximumWidth": 300,
                "minimumWidth": 60,
                "width": 200,
              },
            ]
          }
          headerHeight="2.5rem"
          onColumnSelect={[Function]}
          onResizeHandleChange={[Function]}
          onResizeMouseDown={[Function]}
          tableHeight={0}
        >
          <thead>
            <tr
              className="column-header-row"
              height="2.5rem"
            >
              <InjectIntl(ColumnHeaderCell)
                columnIndex={0}
                displayName=" Vitals"
                headerHeight="2.5rem"
                id="Column-0"
                isActive={false}
                isResizeActive={false}
                key="Column-0"
                maximumWidth={300}
                minimumWidth={60}
                onColumnSelect={[Function]}
                onResizeHandleChange={[Function]}
                onResizeMouseDown={[Function]}
                rowIndex={0}
                tableHeight={0}
                width={200}
>>>>>>> f0c547b77 (Copy the Jest updates)
              >
                <InjectIntl(ColumnHeaderCell)
                  columnIndex={0}
                  displayName=" Vitals"
                  headerHeight="2.5rem"
                  id="Column-0"
<<<<<<< HEAD
                  key="Column-0"
                  maximumWidth={300}
                  minimumWidth={60}
=======
                  intl={
                    Object {
                      "defaultFormats": Object {},
                      "defaultLocale": "en",
                      "formatDate": [Function],
                      "formatHTMLMessage": [Function],
                      "formatMessage": [Function],
                      "formatNumber": [Function],
                      "formatPlural": [Function],
                      "formatRelative": [Function],
                      "formatTime": [Function],
                      "formats": Object {},
                      "formatters": Object {
                        "getDateTimeFormat": [Function],
                        "getMessageFormat": [Function],
                        "getNumberFormat": [Function],
                        "getPluralFormat": [Function],
                        "getRelativeFormat": [Function],
                      },
                      "locale": "en",
                      "messages": null,
                      "now": [Function],
                      "onError": [Function],
                      "textComponent": "span",
                      "timeZone": null,
                    }
                  }
                  isActive={false}
                  isResizable={true}
                  isResizeActive={false}
                  isSelectable={true}
<<<<<<< HEAD
                  maximumWidth={500}
                  minimumWidth={100}
>>>>>>> f0c547b77 (Copy the Jest updates)
=======
                  maximumWidth={300}
                  minimumWidth={60}
>>>>>>> d5c6ea0e7 (updated snapshots)
                  onColumnSelect={[Function]}
                  onResizeHandleChange={[Function]}
                  onResizeMouseDown={[Function]}
                  rowIndex={0}
                  tableHeight={0}
                  width={200}
                >
                  <ColumnHeaderCell
                    columnIndex={0}
                    displayName=" Vitals"
                    hasError={false}
                    headerHeight="2.5rem"
                    id="Column-0"
                    intl={
                      Object {
                        "defaultFormats": Object {},
                        "defaultLocale": "en",
                        "formatDate": [Function],
                        "formatHTMLMessage": [Function],
                        "formatMessage": [Function],
                        "formatNumber": [Function],
                        "formatPlural": [Function],
                        "formatRelative": [Function],
                        "formatTime": [Function],
                        "formats": Object {},
                        "formatters": Object {
                          "getDateTimeFormat": [Function],
                          "getMessageFormat": [Function],
                          "getNumberFormat": [Function],
                          "getPluralFormat": [Function],
                          "getRelativeFormat": [Function],
                        },
                        "locale": "en",
                        "messages": null,
                        "now": [Function],
                        "onError": [Function],
                        "textComponent": "span",
                        "timeZone": null,
                      }
                    }
                    isResizable={true}
                    isSelectable={true}
                    maximumWidth={300}
                    minimumWidth={60}
                    onColumnSelect={[Function]}
                    onResizeMouseDown={[Function]}
                    rowIndex={0}
                    tableHeight={0}
                    width={200}
                  >
                    <th
                      className="column-header selectable pinned"
                      key="Column-0"
                      onKeyDown={[Function]}
                      onMouseDown={[Function]}
                      role="columnheader"
                      scope="col"
                      style={
                        Object {
                          "height": "2.5rem",
                          "left": 0,
                          "width": "200px",
                        }
                      }
                      tabIndex={-1}
                    >
<<<<<<< HEAD
                      <div
                        className="header-container"
                        role="button"
                      >
                        <span>
                           Vitals
                        </span>
                      </div>
                      <InjectIntl(ColumnResizeHandle)
=======
                      <span>
                         Vitals
                      </span>
                    </div>
                    <InjectIntl(ColumnResizeHandle)
                      columnIndex={0}
                      columnText=" Vitals"
                      columnWidth={200}
                      height={0}
                      isActive={false}
                      maximumWidth={300}
                      minimumWidth={60}
                      onResizeHandleChange={[Function]}
                      onResizeMouseDown={[Function]}
                      onResizeMouseUp={[Function]}
                    >
                      <ColumnResizeHandle
>>>>>>> f0c547b77 (Copy the Jest updates)
                        columnIndex={0}
                        columnResizeIncrement={10}
                        columnText=" Vitals"
                        columnWidth={200}
<<<<<<< HEAD
<<<<<<< HEAD
                        height={0}
                        maximumWidth={300}
                        minimumWidth={60}
=======
=======
                        height={0}
>>>>>>> d5c6ea0e7 (updated snapshots)
                        intl={
                          Object {
                            "defaultFormats": Object {},
                            "defaultLocale": "en",
                            "formatDate": [Function],
                            "formatHTMLMessage": [Function],
                            "formatMessage": [Function],
                            "formatNumber": [Function],
                            "formatPlural": [Function],
                            "formatRelative": [Function],
                            "formatTime": [Function],
                            "formats": Object {},
                            "formatters": Object {
                              "getDateTimeFormat": [Function],
                              "getMessageFormat": [Function],
                              "getNumberFormat": [Function],
                              "getPluralFormat": [Function],
                              "getRelativeFormat": [Function],
                            },
                            "locale": "en",
                            "messages": null,
                            "now": [Function],
                            "onError": [Function],
                            "textComponent": "span",
                            "timeZone": null,
                          }
                        }
                        isActive={false}
                        maximumWidth={300}
                        minimumWidth={60}
                        onResizeHandleChange={[Function]}
>>>>>>> f0c547b77 (Copy the Jest updates)
                        onResizeMouseDown={[Function]}
                        onResizeMouseUp={[Function]}
                        setIsActive={[Function]}
                      >
<<<<<<< HEAD
                        <ColumnResizeHandle
                          columnIndex={0}
                          columnText=" Vitals"
                          columnWidth={200}
                          height={0}
                          intl={
                            Object {
                              "defaultFormats": Object {},
                              "defaultLocale": "en",
                              "formatDate": [Function],
                              "formatHTMLMessage": [Function],
                              "formatMessage": [Function],
                              "formatNumber": [Function],
                              "formatPlural": [Function],
                              "formatRelative": [Function],
                              "formatTime": [Function],
                              "formats": Object {},
                              "formatters": Object {
                                "getDateTimeFormat": [Function],
                                "getMessageFormat": [Function],
                                "getNumberFormat": [Function],
                                "getPluralFormat": [Function],
                                "getRelativeFormat": [Function],
                              },
                              "locale": "en",
                              "messages": null,
                              "now": [Function],
                              "onError": [Function],
                              "textComponent": "span",
                              "timeZone": null,
                            }
                          }
                          maximumWidth={300}
                          minimumWidth={60}
                          onResizeMouseDown={[Function]}
<<<<<<< HEAD
=======
                          onResizeMouseUp={[Function]}
                          setIsActive={[Function]}
>>>>>>> b81bf7514 (updated snapshots)
                        >
                          <div
                            aria-hidden={true}
                            aria-label=" Vitals"
                            aria-valuemax={300}
                            aria-valuemin={60}
                            aria-valuenow={200}
                            aria-valuetext="Terra.dataGrid.resizeHandleValueText"
                            className="resize-handle"
                            draggable={true}
                            onBlur={[Function]}
                            onFocus={[Function]}
                            onMouseDown={[Function]}
<<<<<<< HEAD
                            role="slider"
=======
                            onMouseEnter={[Function]}
                            onMouseLeave={[Function]}
                            onMouseUp={[Function]}
                            role={null}
>>>>>>> c4b58f1ad (fixed jest tests)
                            style={
                              Object {
                                "height": "0px",
                              }
                            }
                            tabIndex={-1}
                          />
                        </ColumnResizeHandle>
                      </InjectIntl(ColumnResizeHandle)>
                    </th>
                  </ColumnHeaderCell>
                </InjectIntl(ColumnHeaderCell)>
                <InjectIntl(ColumnHeaderCell)
=======
                        <div
                          aria-hidden={true}
                          aria-label={null}
                          aria-valuemax={null}
                          aria-valuemin={null}
                          aria-valuenow={null}
                          aria-valuetext={null}
                          className="resize-handle"
                          draggable={true}
                          onBlur={[Function]}
                          onClick={[Function]}
                          onFocus={[Function]}
                          onKeyDown={[Function]}
                          onMouseDown={[Function]}
                          onMouseEnter={[Function]}
                          onMouseLeave={[Function]}
                          onMouseUp={[Function]}
                          role="divider"
                          style={
                            Object {
                              "height": "0px",
                            }
                          }
                          tabIndex={-1}
                        />
                      </ColumnResizeHandle>
                    </InjectIntl(ColumnResizeHandle)>
                  </th>
                </ColumnHeaderCell>
              </InjectIntl(ColumnHeaderCell)>
              <InjectIntl(ColumnHeaderCell)
                columnIndex={1}
                displayName="March 16"
                headerHeight="2.5rem"
                id="Column-1"
                isActive={false}
                isResizeActive={false}
                key="Column-1"
                maximumWidth={300}
                minimumWidth={60}
                onColumnSelect={[Function]}
                onResizeHandleChange={[Function]}
                onResizeMouseDown={[Function]}
                rowIndex={0}
                tableHeight={0}
                width={200}
              >
                <ColumnHeaderCell
>>>>>>> f0c547b77 (Copy the Jest updates)
                  columnIndex={1}
                  displayName="March 16"
                  headerHeight="2.5rem"
                  id="Column-1"
<<<<<<< HEAD
                  key="Column-1"
                  maximumWidth={300}
                  minimumWidth={60}
=======
                  intl={
                    Object {
                      "defaultFormats": Object {},
                      "defaultLocale": "en",
                      "formatDate": [Function],
                      "formatHTMLMessage": [Function],
                      "formatMessage": [Function],
                      "formatNumber": [Function],
                      "formatPlural": [Function],
                      "formatRelative": [Function],
                      "formatTime": [Function],
                      "formats": Object {},
                      "formatters": Object {
                        "getDateTimeFormat": [Function],
                        "getMessageFormat": [Function],
                        "getNumberFormat": [Function],
                        "getPluralFormat": [Function],
                        "getRelativeFormat": [Function],
                      },
                      "locale": "en",
                      "messages": null,
                      "now": [Function],
                      "onError": [Function],
                      "textComponent": "span",
                      "timeZone": null,
                    }
                  }
                  isActive={false}
                  isResizable={true}
                  isResizeActive={false}
                  isSelectable={true}
<<<<<<< HEAD
                  maximumWidth={500}
                  minimumWidth={100}
>>>>>>> f0c547b77 (Copy the Jest updates)
=======
                  maximumWidth={300}
                  minimumWidth={60}
>>>>>>> d5c6ea0e7 (updated snapshots)
                  onColumnSelect={[Function]}
                  onResizeHandleChange={[Function]}
                  onResizeMouseDown={[Function]}
                  rowIndex={0}
                  tableHeight={0}
                  width={200}
                >
                  <ColumnHeaderCell
                    columnIndex={1}
                    displayName="March 16"
                    hasError={false}
                    headerHeight="2.5rem"
                    id="Column-1"
                    intl={
                      Object {
                        "defaultFormats": Object {},
                        "defaultLocale": "en",
                        "formatDate": [Function],
                        "formatHTMLMessage": [Function],
                        "formatMessage": [Function],
                        "formatNumber": [Function],
                        "formatPlural": [Function],
                        "formatRelative": [Function],
                        "formatTime": [Function],
                        "formats": Object {},
                        "formatters": Object {
                          "getDateTimeFormat": [Function],
                          "getMessageFormat": [Function],
                          "getNumberFormat": [Function],
                          "getPluralFormat": [Function],
                          "getRelativeFormat": [Function],
                        },
                        "locale": "en",
                        "messages": null,
                        "now": [Function],
                        "onError": [Function],
                        "textComponent": "span",
                        "timeZone": null,
                      }
                    }
                    isResizable={true}
                    isSelectable={true}
                    maximumWidth={300}
                    minimumWidth={60}
                    onColumnSelect={[Function]}
                    onResizeMouseDown={[Function]}
                    rowIndex={0}
                    tableHeight={0}
                    width={200}
                  >
                    <th
                      className="column-header selectable pinned"
                      key="Column-1"
                      onKeyDown={[Function]}
                      onMouseDown={[Function]}
                      role="columnheader"
                      scope="col"
                      style={
                        Object {
                          "height": "2.5rem",
                          "left": 200,
                          "width": "200px",
                        }
                      }
                      tabIndex={-1}
                    >
<<<<<<< HEAD
                      <div
                        className="header-container"
                        role="button"
                      >
                        <span>
                          March 16
                        </span>
                      </div>
                      <InjectIntl(ColumnResizeHandle)
=======
                      <span>
                        March 16
                      </span>
                    </div>
                    <InjectIntl(ColumnResizeHandle)
                      columnIndex={1}
                      columnText="March 16"
                      columnWidth={200}
                      height={0}
                      isActive={false}
                      maximumWidth={300}
                      minimumWidth={60}
                      onResizeHandleChange={[Function]}
                      onResizeMouseDown={[Function]}
                      onResizeMouseUp={[Function]}
                    >
                      <ColumnResizeHandle
>>>>>>> f0c547b77 (Copy the Jest updates)
                        columnIndex={1}
                        columnResizeIncrement={10}
                        columnText="March 16"
                        columnWidth={200}
<<<<<<< HEAD
<<<<<<< HEAD
                        height={0}
                        maximumWidth={300}
                        minimumWidth={60}
=======
=======
                        height={0}
>>>>>>> d5c6ea0e7 (updated snapshots)
                        intl={
                          Object {
                            "defaultFormats": Object {},
                            "defaultLocale": "en",
                            "formatDate": [Function],
                            "formatHTMLMessage": [Function],
                            "formatMessage": [Function],
                            "formatNumber": [Function],
                            "formatPlural": [Function],
                            "formatRelative": [Function],
                            "formatTime": [Function],
                            "formats": Object {},
                            "formatters": Object {
                              "getDateTimeFormat": [Function],
                              "getMessageFormat": [Function],
                              "getNumberFormat": [Function],
                              "getPluralFormat": [Function],
                              "getRelativeFormat": [Function],
                            },
                            "locale": "en",
                            "messages": null,
                            "now": [Function],
                            "onError": [Function],
                            "textComponent": "span",
                            "timeZone": null,
                          }
                        }
                        isActive={false}
                        maximumWidth={300}
                        minimumWidth={60}
                        onResizeHandleChange={[Function]}
>>>>>>> f0c547b77 (Copy the Jest updates)
                        onResizeMouseDown={[Function]}
                        onResizeMouseUp={[Function]}
                        setIsActive={[Function]}
                      >
<<<<<<< HEAD
                        <ColumnResizeHandle
                          columnIndex={1}
                          columnText="March 16"
                          columnWidth={200}
                          height={0}
                          intl={
                            Object {
                              "defaultFormats": Object {},
                              "defaultLocale": "en",
                              "formatDate": [Function],
                              "formatHTMLMessage": [Function],
                              "formatMessage": [Function],
                              "formatNumber": [Function],
                              "formatPlural": [Function],
                              "formatRelative": [Function],
                              "formatTime": [Function],
                              "formats": Object {},
                              "formatters": Object {
                                "getDateTimeFormat": [Function],
                                "getMessageFormat": [Function],
                                "getNumberFormat": [Function],
                                "getPluralFormat": [Function],
                                "getRelativeFormat": [Function],
                              },
                              "locale": "en",
                              "messages": null,
                              "now": [Function],
                              "onError": [Function],
                              "textComponent": "span",
                              "timeZone": null,
                            }
                          }
                          maximumWidth={300}
                          minimumWidth={60}
                          onResizeMouseDown={[Function]}
<<<<<<< HEAD
=======
                          onResizeMouseUp={[Function]}
                          setIsActive={[Function]}
>>>>>>> b81bf7514 (updated snapshots)
                        >
                          <div
                            aria-hidden={true}
                            aria-label="March 16"
                            aria-valuemax={300}
                            aria-valuemin={60}
                            aria-valuenow={200}
                            aria-valuetext="Terra.dataGrid.resizeHandleValueText"
                            className="resize-handle"
                            draggable={true}
                            onBlur={[Function]}
                            onFocus={[Function]}
                            onMouseDown={[Function]}
<<<<<<< HEAD
                            role="slider"
=======
                            onMouseEnter={[Function]}
                            onMouseLeave={[Function]}
                            onMouseUp={[Function]}
                            role={null}
>>>>>>> c4b58f1ad (fixed jest tests)
                            style={
                              Object {
                                "height": "0px",
                              }
                            }
                            tabIndex={-1}
                          />
                        </ColumnResizeHandle>
                      </InjectIntl(ColumnResizeHandle)>
                      <div
                        className="pinned-columns-divider"
                        style={
                          Object {
                            "height": 0,
                            "left": 199,
                          }
                        }
                      />
                    </th>
                  </ColumnHeaderCell>
                </InjectIntl(ColumnHeaderCell)>
                <InjectIntl(ColumnHeaderCell)
=======
                        <div
                          aria-hidden={true}
                          aria-label={null}
                          aria-valuemax={null}
                          aria-valuemin={null}
                          aria-valuenow={null}
                          aria-valuetext={null}
                          className="resize-handle"
                          draggable={true}
                          onBlur={[Function]}
                          onClick={[Function]}
                          onFocus={[Function]}
                          onKeyDown={[Function]}
                          onMouseDown={[Function]}
                          onMouseEnter={[Function]}
                          onMouseLeave={[Function]}
                          onMouseUp={[Function]}
                          role="divider"
                          style={
                            Object {
                              "height": "0px",
                            }
                          }
                          tabIndex={-1}
                        />
                      </ColumnResizeHandle>
                    </InjectIntl(ColumnResizeHandle)>
                    <div
                      className="pinned-columns-divider"
                      style={
                        Object {
                          "height": 0,
                          "left": 199,
                        }
                      }
                    />
                  </th>
                </ColumnHeaderCell>
              </InjectIntl(ColumnHeaderCell)>
              <InjectIntl(ColumnHeaderCell)
                columnIndex={2}
                displayName="March 17"
                headerHeight="2.5rem"
                id="Column-2"
                isActive={false}
                isResizeActive={false}
                isSelectable={false}
                key="Column-2"
                maximumWidth={300}
                minimumWidth={60}
                onColumnSelect={[Function]}
                onResizeHandleChange={[Function]}
                onResizeMouseDown={[Function]}
                rowIndex={0}
                tableHeight={0}
                width={200}
              >
                <ColumnHeaderCell
>>>>>>> f0c547b77 (Copy the Jest updates)
                  columnIndex={2}
                  displayName="March 17"
                  headerHeight="2.5rem"
                  id="Column-2"
<<<<<<< HEAD
                  isSelectable={false}
                  key="Column-2"
                  maximumWidth={300}
                  minimumWidth={60}
=======
                  intl={
                    Object {
                      "defaultFormats": Object {},
                      "defaultLocale": "en",
                      "formatDate": [Function],
                      "formatHTMLMessage": [Function],
                      "formatMessage": [Function],
                      "formatNumber": [Function],
                      "formatPlural": [Function],
                      "formatRelative": [Function],
                      "formatTime": [Function],
                      "formats": Object {},
                      "formatters": Object {
                        "getDateTimeFormat": [Function],
                        "getMessageFormat": [Function],
                        "getNumberFormat": [Function],
                        "getPluralFormat": [Function],
                        "getRelativeFormat": [Function],
                      },
                      "locale": "en",
                      "messages": null,
                      "now": [Function],
                      "onError": [Function],
                      "textComponent": "span",
                      "timeZone": null,
                    }
                  }
                  isActive={false}
                  isResizable={true}
                  isResizeActive={false}
                  isSelectable={false}
<<<<<<< HEAD
                  maximumWidth={500}
                  minimumWidth={100}
>>>>>>> f0c547b77 (Copy the Jest updates)
=======
                  maximumWidth={300}
                  minimumWidth={60}
>>>>>>> d5c6ea0e7 (updated snapshots)
                  onColumnSelect={[Function]}
                  onResizeHandleChange={[Function]}
                  onResizeMouseDown={[Function]}
                  rowIndex={0}
                  tableHeight={0}
                  width={200}
                >
<<<<<<< HEAD
                  <ColumnHeaderCell
                    columnIndex={2}
                    displayName="March 17"
                    hasError={false}
                    headerHeight="2.5rem"
                    id="Column-2"
                    intl={
=======
                  <th
                    className="column-header"
                    key="Column-2"
                    onKeyDown={[Function]}
                    onMouseDown={[Function]}
                    role="columnheader"
                    scope="col"
                    style={
>>>>>>> f0c547b77 (Copy the Jest updates)
                      Object {
                        "defaultFormats": Object {},
                        "defaultLocale": "en",
                        "formatDate": [Function],
                        "formatHTMLMessage": [Function],
                        "formatMessage": [Function],
                        "formatNumber": [Function],
                        "formatPlural": [Function],
                        "formatRelative": [Function],
                        "formatTime": [Function],
                        "formats": Object {},
                        "formatters": Object {
                          "getDateTimeFormat": [Function],
                          "getMessageFormat": [Function],
                          "getNumberFormat": [Function],
                          "getPluralFormat": [Function],
                          "getRelativeFormat": [Function],
                        },
                        "locale": "en",
                        "messages": null,
                        "now": [Function],
                        "onError": [Function],
                        "textComponent": "span",
                        "timeZone": null,
                      }
                    }
                    isResizable={true}
                    isSelectable={false}
                    maximumWidth={300}
                    minimumWidth={60}
                    onColumnSelect={[Function]}
                    onResizeMouseDown={[Function]}
                    rowIndex={0}
                    tableHeight={0}
                    width={200}
                  >
                    <th
                      className="column-header"
                      key="Column-2"
                      role="columnheader"
                      scope="col"
                      style={
                        Object {
                          "height": "2.5rem",
                          "left": null,
                          "width": "200px",
                        }
                      }
                      tabIndex={-1}
                    >
<<<<<<< HEAD
                      <div
                        className="header-container"
                        role="button"
                      >
                        <span>
                          March 17
                        </span>
                      </div>
                      <InjectIntl(ColumnResizeHandle)
=======
                      <span>
                        March 17
                      </span>
                    </div>
                    <InjectIntl(ColumnResizeHandle)
                      columnIndex={2}
                      columnText="March 17"
                      columnWidth={200}
                      height={0}
                      isActive={false}
                      maximumWidth={300}
                      minimumWidth={60}
                      onResizeHandleChange={[Function]}
                      onResizeMouseDown={[Function]}
                      onResizeMouseUp={[Function]}
                    >
                      <ColumnResizeHandle
>>>>>>> f0c547b77 (Copy the Jest updates)
                        columnIndex={2}
                        columnResizeIncrement={10}
                        columnText="March 17"
                        columnWidth={200}
<<<<<<< HEAD
<<<<<<< HEAD
                        height={0}
                        maximumWidth={300}
                        minimumWidth={60}
=======
=======
                        height={0}
>>>>>>> d5c6ea0e7 (updated snapshots)
                        intl={
                          Object {
                            "defaultFormats": Object {},
                            "defaultLocale": "en",
                            "formatDate": [Function],
                            "formatHTMLMessage": [Function],
                            "formatMessage": [Function],
                            "formatNumber": [Function],
                            "formatPlural": [Function],
                            "formatRelative": [Function],
                            "formatTime": [Function],
                            "formats": Object {},
                            "formatters": Object {
                              "getDateTimeFormat": [Function],
                              "getMessageFormat": [Function],
                              "getNumberFormat": [Function],
                              "getPluralFormat": [Function],
                              "getRelativeFormat": [Function],
                            },
                            "locale": "en",
                            "messages": null,
                            "now": [Function],
                            "onError": [Function],
                            "textComponent": "span",
                            "timeZone": null,
                          }
                        }
                        isActive={false}
                        maximumWidth={300}
                        minimumWidth={60}
                        onResizeHandleChange={[Function]}
>>>>>>> f0c547b77 (Copy the Jest updates)
                        onResizeMouseDown={[Function]}
                        onResizeMouseUp={[Function]}
                        setIsActive={[Function]}
                      >
<<<<<<< HEAD
                        <ColumnResizeHandle
                          columnIndex={2}
                          columnText="March 17"
                          columnWidth={200}
                          height={0}
                          intl={
                            Object {
                              "defaultFormats": Object {},
                              "defaultLocale": "en",
                              "formatDate": [Function],
                              "formatHTMLMessage": [Function],
                              "formatMessage": [Function],
                              "formatNumber": [Function],
                              "formatPlural": [Function],
                              "formatRelative": [Function],
                              "formatTime": [Function],
                              "formats": Object {},
                              "formatters": Object {
                                "getDateTimeFormat": [Function],
                                "getMessageFormat": [Function],
                                "getNumberFormat": [Function],
                                "getPluralFormat": [Function],
                                "getRelativeFormat": [Function],
                              },
                              "locale": "en",
                              "messages": null,
                              "now": [Function],
                              "onError": [Function],
                              "textComponent": "span",
                              "timeZone": null,
                            }
                          }
                          maximumWidth={300}
                          minimumWidth={60}
                          onResizeMouseDown={[Function]}
<<<<<<< HEAD
=======
                          onResizeMouseUp={[Function]}
                          setIsActive={[Function]}
>>>>>>> b81bf7514 (updated snapshots)
                        >
                          <div
                            aria-hidden={true}
                            aria-label="March 17"
                            aria-valuemax={300}
                            aria-valuemin={60}
                            aria-valuenow={200}
                            aria-valuetext="Terra.dataGrid.resizeHandleValueText"
                            className="resize-handle"
                            draggable={true}
                            onBlur={[Function]}
                            onFocus={[Function]}
                            onMouseDown={[Function]}
<<<<<<< HEAD
                            role="slider"
=======
                            onMouseEnter={[Function]}
                            onMouseLeave={[Function]}
                            onMouseUp={[Function]}
                            role={null}
>>>>>>> c4b58f1ad (fixed jest tests)
                            style={
                              Object {
                                "height": "0px",
                              }
                            }
                            tabIndex={-1}
                          />
                        </ColumnResizeHandle>
                      </InjectIntl(ColumnResizeHandle)>
                    </th>
                  </ColumnHeaderCell>
                </InjectIntl(ColumnHeaderCell)>
              </tr>
            </thead>
          </Memo(ColumnHeader)>
          <tbody>
            <Row
              cells={
                Array [
                  Object {
                    "content": "Heart Rate Monitored (bpm)",
                    "isSelectable": false,
                  },
                  Object {
                    "content": "",
                  },
                  Object {
                    "content": "66",
                    "isMasked": true,
                  },
                ]
=======
                        <div
                          aria-hidden={true}
                          aria-label={null}
                          aria-valuemax={null}
                          aria-valuemin={null}
                          aria-valuenow={null}
                          aria-valuetext={null}
                          className="resize-handle"
                          draggable={true}
                          onBlur={[Function]}
                          onClick={[Function]}
                          onFocus={[Function]}
                          onKeyDown={[Function]}
                          onMouseDown={[Function]}
                          onMouseEnter={[Function]}
                          onMouseLeave={[Function]}
                          onMouseUp={[Function]}
                          role="divider"
                          style={
                            Object {
                              "height": "0px",
                            }
                          }
                          tabIndex={-1}
                        />
                      </ColumnResizeHandle>
                    </InjectIntl(ColumnResizeHandle)>
                  </th>
                </ColumnHeaderCell>
              </InjectIntl(ColumnHeaderCell)>
            </tr>
          </thead>
        </Memo(ColumnHeader)>
        <tbody>
          <Row
            cells={
              Array [
                Object {
                  "content": "Heart Rate Monitored (bpm)",
                  "isSelectable": false,
                },
                Object {
                  "content": "",
                },
                Object {
                  "content": "66",
                  "isMasked": true,
                },
              ]
            }
            displayedColumns={
              Array [
                Object {
                  "displayName": " Vitals",
                  "id": "Column-0",
                },
                Object {
                  "displayName": "March 16",
                  "id": "Column-1",
                },
                Object {
                  "displayName": "March 17",
                  "id": "Column-2",
                  "isSelectable": false,
                },
              ]
            }
            height="2.5rem"
            id="1"
            key="1"
            onCellSelect={[Function]}
            rowHeaderIndex={0}
            rowIndex={1}
          >
            <tr
              className="row"
              onMouseEnter={null}
              onMouseLeave={null}
              style={
                Object {
                  "height": "2.5rem",
                }
>>>>>>> f0c547b77 (Copy the Jest updates)
              }
              displayedColumns={
                Array [
                  Object {
                    "displayName": " Vitals",
                    "id": "Column-0",
                  },
                  Object {
                    "displayName": "March 16",
                    "id": "Column-1",
                  },
                  Object {
                    "displayName": "March 17",
                    "id": "Column-2",
                    "isSelectable": false,
                  },
                ]
              }
              height="2.5rem"
              id="1"
              key="1"
              onCellSelect={[Function]}
              rowHeaderIndex={0}
              rowIndex={1}
            >
              <tr
                className="row"
                onMouseEnter={null}
                onMouseLeave={null}
                style={
                  Object {
                    "height": "2.5rem",
                  }
                }
              >
                <InjectIntl(Cell)
                  columnId="Column-0"
                  columnIndex={0}
                  height="2.5rem"
                  isHighlighted={false}
                  isRowHeader={true}
                  isSelectable={false}
                  key="1_Column-0"
                  onCellSelect={[Function]}
                  rowId="1"
                  rowIndex={1}
                >
                  <Cell
                    columnId="Column-0"
                    columnIndex={0}
                    height="2.5rem"
                    intl={
                      Object {
                        "defaultFormats": Object {},
                        "defaultLocale": "en",
                        "formatDate": [Function],
                        "formatHTMLMessage": [Function],
                        "formatMessage": [Function],
                        "formatNumber": [Function],
                        "formatPlural": [Function],
                        "formatRelative": [Function],
                        "formatTime": [Function],
                        "formats": Object {},
                        "formatters": Object {
                          "getDateTimeFormat": [Function],
                          "getMessageFormat": [Function],
                          "getNumberFormat": [Function],
                          "getPluralFormat": [Function],
                          "getRelativeFormat": [Function],
                        },
                        "locale": "en",
                        "messages": null,
                        "now": [Function],
                        "onError": [Function],
                        "textComponent": "span",
                        "timeZone": null,
                      }
                    }
                    isHighlighted={false}
                    isMasked={false}
                    isRowHeader={true}
                    isSelectable={false}
                    isSelected={false}
                    onCellSelect={[Function]}
                    rowId="1"
                    rowIndex={1}
                  >
                    <th
                      aria-selected={false}
                      className="cell pinned"
                      onKeyDown={[Function]}
                      onMouseDown={[Function]}
                      role="rowheader"
                      scope="row"
                      style={
                        Object {
                          "left": 0,
                        }
                      }
                      tabIndex={-1}
                    >
                      <FocusTrap
                        _createFocusTrap={[Function]}
                        active={false}
                        focusTrapOptions={
                          Object {
                            "clickOutsideDeactivates": true,
                            "escapeDeactivates": false,
                            "onDeactivate": [Function],
                            "returnFocusOnDeactivate": true,
                          }
                        }
                        paused={false}
                      >
                        <div
                          className="cell-content"
                          style={
                            Object {
                              "height": "2.5rem",
                            }
                          }
                        >
                          Heart Rate Monitored (bpm)
                        </div>
                      </FocusTrap>
                    </th>
                  </Cell>
                </InjectIntl(Cell)>
                <InjectIntl(Cell)
                  columnId="Column-1"
                  columnIndex={1}
                  height="2.5rem"
                  isHighlighted={false}
                  isRowHeader={false}
                  key="1_Column-1"
                  onCellSelect={[Function]}
                  rowId="1"
                  rowIndex={1}
                >
                  <Cell
                    columnId="Column-1"
                    columnIndex={1}
                    height="2.5rem"
                    intl={
                      Object {
                        "defaultFormats": Object {},
                        "defaultLocale": "en",
                        "formatDate": [Function],
                        "formatHTMLMessage": [Function],
                        "formatMessage": [Function],
                        "formatNumber": [Function],
                        "formatPlural": [Function],
                        "formatRelative": [Function],
                        "formatTime": [Function],
                        "formats": Object {},
                        "formatters": Object {
                          "getDateTimeFormat": [Function],
                          "getMessageFormat": [Function],
                          "getNumberFormat": [Function],
                          "getPluralFormat": [Function],
                          "getRelativeFormat": [Function],
                        },
                        "locale": "en",
                        "messages": null,
                        "now": [Function],
                        "onError": [Function],
                        "textComponent": "span",
                        "timeZone": null,
                      }
                    }
                    isHighlighted={false}
                    isMasked={false}
                    isRowHeader={false}
                    isSelectable={true}
                    isSelected={false}
                    onCellSelect={[Function]}
                    rowId="1"
                    rowIndex={1}
                  >
                    <td
                      aria-selected={false}
                      className="cell pinned selectable blank"
                      onKeyDown={[Function]}
                      onMouseDown={[Function]}
                      style={
                        Object {
                          "left": 200,
                        }
                      }
                      tabIndex={-1}
                    >
                      <FocusTrap
                        _createFocusTrap={[Function]}
                        active={false}
                        focusTrapOptions={
                          Object {
                            "clickOutsideDeactivates": true,
                            "escapeDeactivates": false,
                            "onDeactivate": [Function],
                            "returnFocusOnDeactivate": true,
                          }
                        }
                        paused={false}
                      >
                        <div
                          className="cell-content"
                          style={
                            Object {
                              "height": "2.5rem",
                            }
                          }
                        >
                          <span
                            className="no-data-cell"
                          >
                            Terra.dataGrid.blank
                          </span>
                        </div>
                      </FocusTrap>
                    </td>
                  </Cell>
                </InjectIntl(Cell)>
                <InjectIntl(Cell)
                  columnId="Column-2"
                  columnIndex={2}
                  height="2.5rem"
                  isHighlighted={false}
                  isMasked={true}
                  isRowHeader={false}
                  key="1_Column-2"
                  onCellSelect={[Function]}
                  rowId="1"
                  rowIndex={1}
                >
                  <Cell
                    columnId="Column-2"
                    columnIndex={2}
                    height="2.5rem"
                    intl={
                      Object {
                        "defaultFormats": Object {},
                        "defaultLocale": "en",
                        "formatDate": [Function],
                        "formatHTMLMessage": [Function],
                        "formatMessage": [Function],
                        "formatNumber": [Function],
                        "formatPlural": [Function],
                        "formatRelative": [Function],
                        "formatTime": [Function],
                        "formats": Object {},
                        "formatters": Object {
                          "getDateTimeFormat": [Function],
                          "getMessageFormat": [Function],
                          "getNumberFormat": [Function],
                          "getPluralFormat": [Function],
                          "getRelativeFormat": [Function],
                        },
                        "locale": "en",
                        "messages": null,
                        "now": [Function],
                        "onError": [Function],
                        "textComponent": "span",
                        "timeZone": null,
                      }
                    }
                    isHighlighted={false}
                    isMasked={true}
                    isRowHeader={false}
                    isSelectable={true}
                    isSelected={false}
                    onCellSelect={[Function]}
                    rowId="1"
                    rowIndex={1}
                  >
                    <td
                      aria-selected={false}
                      className="cell masked"
                      onKeyDown={[Function]}
                      onMouseDown={[Function]}
                      style={
                        Object {
                          "left": null,
                        }
                      }
                      tabIndex={-1}
                    >
                      <FocusTrap
                        _createFocusTrap={[Function]}
                        active={false}
                        focusTrapOptions={
                          Object {
                            "clickOutsideDeactivates": true,
                            "escapeDeactivates": false,
                            "onDeactivate": [Function],
                            "returnFocusOnDeactivate": true,
                          }
                        }
                        paused={false}
                      >
                        <div
                          className="cell-content"
                          style={
                            Object {
                              "height": "2.5rem",
                            }
                          }
                        >
                          <span
                            className="no-data-cell"
                          >
                            Terra.dataGrid.maskedCell
                          </span>
                        </div>
                      </FocusTrap>
                    </td>
                  </Cell>
                </InjectIntl(Cell)>
              </tr>
            </Row>
            <Row
              cells={
                Array [
                  Object {
                    "content": "Temperature Oral (degC)",
                  },
                  Object {
                    "content": "36.7",
                  },
                  Object {
                    "content": "36.9",
                    "isMasked": true,
                  },
                ]
              }
              displayedColumns={
                Array [
                  Object {
                    "displayName": " Vitals",
                    "id": "Column-0",
                  },
                  Object {
                    "displayName": "March 16",
                    "id": "Column-1",
                  },
                  Object {
                    "displayName": "March 17",
                    "id": "Column-2",
                    "isSelectable": false,
                  },
                ]
              }
              height="2.5rem"
              id="2"
              key="2"
              onCellSelect={[Function]}
              rowHeaderIndex={0}
              rowIndex={2}
            >
              <tr
                className="row"
                onMouseEnter={null}
                onMouseLeave={null}
                style={
                  Object {
                    "height": "2.5rem",
                  }
                }
              >
                <InjectIntl(Cell)
                  columnId="Column-0"
                  columnIndex={0}
                  height="2.5rem"
                  isHighlighted={false}
                  isRowHeader={true}
                  key="2_Column-0"
                  onCellSelect={[Function]}
                  rowId="2"
                  rowIndex={2}
                >
                  <Cell
                    columnId="Column-0"
                    columnIndex={0}
                    height="2.5rem"
                    intl={
                      Object {
                        "defaultFormats": Object {},
                        "defaultLocale": "en",
                        "formatDate": [Function],
                        "formatHTMLMessage": [Function],
                        "formatMessage": [Function],
                        "formatNumber": [Function],
                        "formatPlural": [Function],
                        "formatRelative": [Function],
                        "formatTime": [Function],
                        "formats": Object {},
                        "formatters": Object {
                          "getDateTimeFormat": [Function],
                          "getMessageFormat": [Function],
                          "getNumberFormat": [Function],
                          "getPluralFormat": [Function],
                          "getRelativeFormat": [Function],
                        },
                        "locale": "en",
                        "messages": null,
                        "now": [Function],
                        "onError": [Function],
                        "textComponent": "span",
                        "timeZone": null,
                      }
                    }
                    isHighlighted={false}
                    isMasked={false}
                    isRowHeader={true}
                    isSelectable={true}
                    isSelected={false}
                    onCellSelect={[Function]}
                    rowId="2"
                    rowIndex={2}
                  >
                    <th
                      aria-selected={false}
                      className="cell pinned selectable"
                      onKeyDown={[Function]}
                      onMouseDown={[Function]}
                      role="rowheader"
                      scope="row"
                      style={
                        Object {
                          "left": 0,
                        }
                      }
                      tabIndex={-1}
                    >
                      <FocusTrap
                        _createFocusTrap={[Function]}
                        active={false}
                        focusTrapOptions={
                          Object {
                            "clickOutsideDeactivates": true,
                            "escapeDeactivates": false,
                            "onDeactivate": [Function],
                            "returnFocusOnDeactivate": true,
                          }
                        }
                        paused={false}
                      >
                        <div
                          className="cell-content"
                          style={
                            Object {
                              "height": "2.5rem",
                            }
                          }
                        >
                          Temperature Oral (degC)
                        </div>
                      </FocusTrap>
                    </th>
                  </Cell>
                </InjectIntl(Cell)>
                <InjectIntl(Cell)
                  columnId="Column-1"
                  columnIndex={1}
                  height="2.5rem"
                  isHighlighted={false}
                  isRowHeader={false}
                  key="2_Column-1"
                  onCellSelect={[Function]}
                  rowId="2"
                  rowIndex={2}
                >
                  <Cell
                    columnId="Column-1"
                    columnIndex={1}
                    height="2.5rem"
                    intl={
                      Object {
                        "defaultFormats": Object {},
                        "defaultLocale": "en",
                        "formatDate": [Function],
                        "formatHTMLMessage": [Function],
                        "formatMessage": [Function],
                        "formatNumber": [Function],
                        "formatPlural": [Function],
                        "formatRelative": [Function],
                        "formatTime": [Function],
                        "formats": Object {},
                        "formatters": Object {
                          "getDateTimeFormat": [Function],
                          "getMessageFormat": [Function],
                          "getNumberFormat": [Function],
                          "getPluralFormat": [Function],
                          "getRelativeFormat": [Function],
                        },
                        "locale": "en",
                        "messages": null,
                        "now": [Function],
                        "onError": [Function],
                        "textComponent": "span",
                        "timeZone": null,
                      }
                    }
                    isHighlighted={false}
                    isMasked={false}
                    isRowHeader={false}
                    isSelectable={true}
                    isSelected={false}
                    onCellSelect={[Function]}
                    rowId="2"
                    rowIndex={2}
                  >
                    <td
                      aria-selected={false}
                      className="cell pinned selectable"
                      onKeyDown={[Function]}
                      onMouseDown={[Function]}
                      style={
                        Object {
                          "left": 200,
                        }
                      }
                      tabIndex={-1}
                    >
                      <FocusTrap
                        _createFocusTrap={[Function]}
                        active={false}
                        focusTrapOptions={
                          Object {
                            "clickOutsideDeactivates": true,
                            "escapeDeactivates": false,
                            "onDeactivate": [Function],
                            "returnFocusOnDeactivate": true,
                          }
                        }
                        paused={false}
                      >
                        <div
                          className="cell-content"
                          style={
                            Object {
                              "height": "2.5rem",
                            }
                          }
                        >
                          36.7
                        </div>
                      </FocusTrap>
                    </td>
                  </Cell>
                </InjectIntl(Cell)>
                <InjectIntl(Cell)
                  columnId="Column-2"
                  columnIndex={2}
                  height="2.5rem"
                  isHighlighted={false}
                  isMasked={true}
                  isRowHeader={false}
                  key="2_Column-2"
                  onCellSelect={[Function]}
                  rowId="2"
                  rowIndex={2}
                >
                  <Cell
                    columnId="Column-2"
                    columnIndex={2}
                    height="2.5rem"
                    intl={
                      Object {
                        "defaultFormats": Object {},
                        "defaultLocale": "en",
                        "formatDate": [Function],
                        "formatHTMLMessage": [Function],
                        "formatMessage": [Function],
                        "formatNumber": [Function],
                        "formatPlural": [Function],
                        "formatRelative": [Function],
                        "formatTime": [Function],
                        "formats": Object {},
                        "formatters": Object {
                          "getDateTimeFormat": [Function],
                          "getMessageFormat": [Function],
                          "getNumberFormat": [Function],
                          "getPluralFormat": [Function],
                          "getRelativeFormat": [Function],
                        },
                        "locale": "en",
                        "messages": null,
                        "now": [Function],
                        "onError": [Function],
                        "textComponent": "span",
                        "timeZone": null,
                      }
                    }
                    isHighlighted={false}
                    isMasked={true}
                    isRowHeader={false}
                    isSelectable={true}
                    isSelected={false}
                    onCellSelect={[Function]}
                    rowId="2"
                    rowIndex={2}
                  >
                    <td
                      aria-selected={false}
                      className="cell masked"
                      onKeyDown={[Function]}
                      onMouseDown={[Function]}
                      style={
                        Object {
                          "left": null,
                        }
                      }
                      tabIndex={-1}
                    >
                      <FocusTrap
                        _createFocusTrap={[Function]}
                        active={false}
                        focusTrapOptions={
                          Object {
                            "clickOutsideDeactivates": true,
                            "escapeDeactivates": false,
                            "onDeactivate": [Function],
                            "returnFocusOnDeactivate": true,
                          }
                        }
                        paused={false}
                      >
                        <div
                          className="cell-content"
                          style={
                            Object {
                              "height": "2.5rem",
                            }
                          }
                        >
                          <span
                            className="no-data-cell"
                          >
                            Terra.dataGrid.maskedCell
                          </span>
                        </div>
                      </FocusTrap>
                    </td>
                  </Cell>
                </InjectIntl(Cell)>
              </tr>
            </Row>
            <Row
              cells={
                Array [
                  Object {
                    "content": "Cardiac Index (L/min/m2)",
                  },
                  Object {
                    "content": "2.25",
                  },
                  Object {
                    "content": "2.28",
                    "isMasked": true,
                  },
                ]
              }
              displayedColumns={
                Array [
                  Object {
                    "displayName": " Vitals",
                    "id": "Column-0",
                  },
                  Object {
                    "displayName": "March 16",
                    "id": "Column-1",
                  },
                  Object {
                    "displayName": "March 17",
                    "id": "Column-2",
                    "isSelectable": false,
                  },
                ]
              }
              height="2.5rem"
              id="3"
              key="3"
              onCellSelect={[Function]}
              rowHeaderIndex={0}
              rowIndex={3}
            >
              <tr
                className="row"
                onMouseEnter={null}
                onMouseLeave={null}
                style={
                  Object {
                    "height": "2.5rem",
                  }
                }
              >
                <InjectIntl(Cell)
                  columnId="Column-0"
                  columnIndex={0}
                  height="2.5rem"
                  isHighlighted={false}
                  isRowHeader={true}
                  key="3_Column-0"
                  onCellSelect={[Function]}
                  rowId="3"
                  rowIndex={3}
                >
                  <Cell
                    columnId="Column-0"
                    columnIndex={0}
                    height="2.5rem"
                    intl={
                      Object {
                        "defaultFormats": Object {},
                        "defaultLocale": "en",
                        "formatDate": [Function],
                        "formatHTMLMessage": [Function],
                        "formatMessage": [Function],
                        "formatNumber": [Function],
                        "formatPlural": [Function],
                        "formatRelative": [Function],
                        "formatTime": [Function],
                        "formats": Object {},
                        "formatters": Object {
                          "getDateTimeFormat": [Function],
                          "getMessageFormat": [Function],
                          "getNumberFormat": [Function],
                          "getPluralFormat": [Function],
                          "getRelativeFormat": [Function],
                        },
                        "locale": "en",
                        "messages": null,
                        "now": [Function],
                        "onError": [Function],
                        "textComponent": "span",
                        "timeZone": null,
                      }
                    }
                    isHighlighted={false}
                    isMasked={false}
                    isRowHeader={true}
                    isSelectable={true}
                    isSelected={false}
                    onCellSelect={[Function]}
                    rowId="3"
                    rowIndex={3}
                  >
                    <th
                      aria-selected={false}
                      className="cell pinned selectable"
                      onKeyDown={[Function]}
                      onMouseDown={[Function]}
                      role="rowheader"
                      scope="row"
                      style={
                        Object {
                          "left": 0,
                        }
                      }
                      tabIndex={-1}
                    >
                      <FocusTrap
                        _createFocusTrap={[Function]}
                        active={false}
                        focusTrapOptions={
                          Object {
                            "clickOutsideDeactivates": true,
                            "escapeDeactivates": false,
                            "onDeactivate": [Function],
                            "returnFocusOnDeactivate": true,
                          }
                        }
                        paused={false}
                      >
                        <div
                          className="cell-content"
                          style={
                            Object {
                              "height": "2.5rem",
                            }
                          }
                        >
                          Cardiac Index (L/min/m2)
                        </div>
                      </FocusTrap>
                    </th>
                  </Cell>
                </InjectIntl(Cell)>
                <InjectIntl(Cell)
                  columnId="Column-1"
                  columnIndex={1}
                  height="2.5rem"
                  isHighlighted={false}
                  isRowHeader={false}
                  key="3_Column-1"
                  onCellSelect={[Function]}
                  rowId="3"
                  rowIndex={3}
                >
                  <Cell
                    columnId="Column-1"
                    columnIndex={1}
                    height="2.5rem"
                    intl={
                      Object {
                        "defaultFormats": Object {},
                        "defaultLocale": "en",
                        "formatDate": [Function],
                        "formatHTMLMessage": [Function],
                        "formatMessage": [Function],
                        "formatNumber": [Function],
                        "formatPlural": [Function],
                        "formatRelative": [Function],
                        "formatTime": [Function],
                        "formats": Object {},
                        "formatters": Object {
                          "getDateTimeFormat": [Function],
                          "getMessageFormat": [Function],
                          "getNumberFormat": [Function],
                          "getPluralFormat": [Function],
                          "getRelativeFormat": [Function],
                        },
                        "locale": "en",
                        "messages": null,
                        "now": [Function],
                        "onError": [Function],
                        "textComponent": "span",
                        "timeZone": null,
                      }
                    }
                    isHighlighted={false}
                    isMasked={false}
                    isRowHeader={false}
                    isSelectable={true}
                    isSelected={false}
                    onCellSelect={[Function]}
                    rowId="3"
                    rowIndex={3}
                  >
                    <td
                      aria-selected={false}
                      className="cell pinned selectable"
                      onKeyDown={[Function]}
                      onMouseDown={[Function]}
                      style={
                        Object {
                          "left": 200,
                        }
                      }
                      tabIndex={-1}
                    >
                      <FocusTrap
                        _createFocusTrap={[Function]}
                        active={false}
                        focusTrapOptions={
                          Object {
                            "clickOutsideDeactivates": true,
                            "escapeDeactivates": false,
                            "onDeactivate": [Function],
                            "returnFocusOnDeactivate": true,
                          }
                        }
                        paused={false}
                      >
                        <div
                          className="cell-content"
                          style={
                            Object {
                              "height": "2.5rem",
                            }
                          }
                        >
                          2.25
                        </div>
                      </FocusTrap>
                    </td>
                  </Cell>
                </InjectIntl(Cell)>
                <InjectIntl(Cell)
                  columnId="Column-2"
                  columnIndex={2}
                  height="2.5rem"
                  isHighlighted={false}
                  isMasked={true}
                  isRowHeader={false}
                  key="3_Column-2"
                  onCellSelect={[Function]}
                  rowId="3"
                  rowIndex={3}
                >
                  <Cell
                    columnId="Column-2"
                    columnIndex={2}
                    height="2.5rem"
                    intl={
                      Object {
                        "defaultFormats": Object {},
                        "defaultLocale": "en",
                        "formatDate": [Function],
                        "formatHTMLMessage": [Function],
                        "formatMessage": [Function],
                        "formatNumber": [Function],
                        "formatPlural": [Function],
                        "formatRelative": [Function],
                        "formatTime": [Function],
                        "formats": Object {},
                        "formatters": Object {
                          "getDateTimeFormat": [Function],
                          "getMessageFormat": [Function],
                          "getNumberFormat": [Function],
                          "getPluralFormat": [Function],
                          "getRelativeFormat": [Function],
                        },
                        "locale": "en",
                        "messages": null,
                        "now": [Function],
                        "onError": [Function],
                        "textComponent": "span",
                        "timeZone": null,
                      }
                    }
                    isHighlighted={false}
                    isMasked={true}
                    isRowHeader={false}
                    isSelectable={true}
                    isSelected={false}
                    onCellSelect={[Function]}
                    rowId="3"
                    rowIndex={3}
                  >
                    <td
                      aria-selected={false}
                      className="cell masked"
                      onKeyDown={[Function]}
                      onMouseDown={[Function]}
                      style={
                        Object {
                          "left": null,
                        }
                      }
                      tabIndex={-1}
                    >
                      <FocusTrap
                        _createFocusTrap={[Function]}
                        active={false}
                        focusTrapOptions={
                          Object {
                            "clickOutsideDeactivates": true,
                            "escapeDeactivates": false,
                            "onDeactivate": [Function],
                            "returnFocusOnDeactivate": true,
                          }
                        }
                        paused={false}
                      >
                        <div
                          className="cell-content"
                          style={
                            Object {
                              "height": "2.5rem",
                            }
                          }
                        >
                          <span
                            className="no-data-cell"
                          >
                            Terra.dataGrid.maskedCell
                          </span>
                        </div>
                      </FocusTrap>
                    </td>
                  </Cell>
                </InjectIntl(Cell)>
              </tr>
            </Row>
            <Row
              cells={
                Array [
                  Object {
                    "content": "Oxygen Flow Rate (L/min)",
                  },
                  Object {
                    "content": "63",
                  },
                  Object {
                    "content": "47",
                  },
                ]
              }
              displayedColumns={
                Array [
                  Object {
                    "displayName": " Vitals",
                    "id": "Column-0",
                  },
                  Object {
                    "displayName": "March 16",
                    "id": "Column-1",
                  },
                  Object {
                    "displayName": "March 17",
                    "id": "Column-2",
                    "isSelectable": false,
                  },
                ]
              }
              height="2.5rem"
              id="4"
              isSelected={true}
              key="4"
              onCellSelect={[Function]}
              rowHeaderIndex={0}
              rowIndex={4}
            >
              <tr
                className="row selected"
                onMouseEnter={null}
                onMouseLeave={null}
                style={
                  Object {
                    "height": "2.5rem",
                  }
                }
              >
                <InjectIntl(Cell)
                  columnId="Column-0"
                  columnIndex={0}
                  height="2.5rem"
                  isHighlighted={true}
                  isRowHeader={true}
                  key="4_Column-0"
                  onCellSelect={[Function]}
                  rowId="4"
                  rowIndex={4}
                >
                  <Cell
                    columnId="Column-0"
                    columnIndex={0}
                    height="2.5rem"
                    intl={
                      Object {
                        "defaultFormats": Object {},
                        "defaultLocale": "en",
                        "formatDate": [Function],
                        "formatHTMLMessage": [Function],
                        "formatMessage": [Function],
                        "formatNumber": [Function],
                        "formatPlural": [Function],
                        "formatRelative": [Function],
                        "formatTime": [Function],
                        "formats": Object {},
                        "formatters": Object {
                          "getDateTimeFormat": [Function],
                          "getMessageFormat": [Function],
                          "getNumberFormat": [Function],
                          "getPluralFormat": [Function],
                          "getRelativeFormat": [Function],
                        },
                        "locale": "en",
                        "messages": null,
                        "now": [Function],
                        "onError": [Function],
                        "textComponent": "span",
                        "timeZone": null,
                      }
                    }
                    isHighlighted={true}
                    isMasked={false}
                    isRowHeader={true}
                    isSelectable={true}
                    isSelected={false}
                    onCellSelect={[Function]}
                    rowId="4"
                    rowIndex={4}
                  >
                    <th
                      aria-selected={false}
                      className="cell pinned selectable highlighted"
                      onKeyDown={[Function]}
                      onMouseDown={[Function]}
                      role="rowheader"
                      scope="row"
                      style={
                        Object {
                          "left": 0,
                        }
                      }
                      tabIndex={-1}
                    >
                      <FocusTrap
                        _createFocusTrap={[Function]}
                        active={false}
                        focusTrapOptions={
                          Object {
                            "clickOutsideDeactivates": true,
                            "escapeDeactivates": false,
                            "onDeactivate": [Function],
                            "returnFocusOnDeactivate": true,
                          }
                        }
                        paused={false}
                      >
                        <div
                          className="cell-content"
                          style={
                            Object {
                              "height": "2.5rem",
                            }
                          }
                        >
                          Oxygen Flow Rate (L/min)
                        </div>
                      </FocusTrap>
                    </th>
                  </Cell>
                </InjectIntl(Cell)>
                <InjectIntl(Cell)
                  columnId="Column-1"
                  columnIndex={1}
                  height="2.5rem"
                  isHighlighted={true}
                  isRowHeader={false}
                  key="4_Column-1"
                  onCellSelect={[Function]}
                  rowId="4"
                  rowIndex={4}
                >
                  <Cell
                    columnId="Column-1"
                    columnIndex={1}
                    height="2.5rem"
                    intl={
                      Object {
                        "defaultFormats": Object {},
                        "defaultLocale": "en",
                        "formatDate": [Function],
                        "formatHTMLMessage": [Function],
                        "formatMessage": [Function],
                        "formatNumber": [Function],
                        "formatPlural": [Function],
                        "formatRelative": [Function],
                        "formatTime": [Function],
                        "formats": Object {},
                        "formatters": Object {
                          "getDateTimeFormat": [Function],
                          "getMessageFormat": [Function],
                          "getNumberFormat": [Function],
                          "getPluralFormat": [Function],
                          "getRelativeFormat": [Function],
                        },
                        "locale": "en",
                        "messages": null,
                        "now": [Function],
                        "onError": [Function],
                        "textComponent": "span",
                        "timeZone": null,
                      }
                    }
                    isHighlighted={true}
                    isMasked={false}
                    isRowHeader={false}
                    isSelectable={true}
                    isSelected={false}
                    onCellSelect={[Function]}
                    rowId="4"
                    rowIndex={4}
                  >
                    <td
                      aria-selected={false}
                      className="cell pinned selectable highlighted"
                      onKeyDown={[Function]}
                      onMouseDown={[Function]}
                      style={
                        Object {
                          "left": 200,
                        }
                      }
                      tabIndex={-1}
                    >
                      <FocusTrap
                        _createFocusTrap={[Function]}
                        active={false}
                        focusTrapOptions={
                          Object {
                            "clickOutsideDeactivates": true,
                            "escapeDeactivates": false,
                            "onDeactivate": [Function],
                            "returnFocusOnDeactivate": true,
                          }
                        }
                        paused={false}
                      >
                        <div
                          className="cell-content"
                          style={
                            Object {
                              "height": "2.5rem",
                            }
                          }
                        >
                          63
                        </div>
                      </FocusTrap>
                    </td>
                  </Cell>
                </InjectIntl(Cell)>
                <InjectIntl(Cell)
                  columnId="Column-2"
                  columnIndex={2}
                  height="2.5rem"
                  isHighlighted={true}
                  isRowHeader={false}
                  key="4_Column-2"
                  onCellSelect={[Function]}
                  rowId="4"
                  rowIndex={4}
                >
                  <Cell
                    columnId="Column-2"
                    columnIndex={2}
                    height="2.5rem"
                    intl={
                      Object {
                        "defaultFormats": Object {},
                        "defaultLocale": "en",
                        "formatDate": [Function],
                        "formatHTMLMessage": [Function],
                        "formatMessage": [Function],
                        "formatNumber": [Function],
                        "formatPlural": [Function],
                        "formatRelative": [Function],
                        "formatTime": [Function],
                        "formats": Object {},
                        "formatters": Object {
                          "getDateTimeFormat": [Function],
                          "getMessageFormat": [Function],
                          "getNumberFormat": [Function],
                          "getPluralFormat": [Function],
                          "getRelativeFormat": [Function],
                        },
                        "locale": "en",
                        "messages": null,
                        "now": [Function],
                        "onError": [Function],
                        "textComponent": "span",
                        "timeZone": null,
                      }
                    }
                    isHighlighted={true}
                    isMasked={false}
                    isRowHeader={false}
                    isSelectable={true}
                    isSelected={false}
                    onCellSelect={[Function]}
                    rowId="4"
                    rowIndex={4}
                  >
                    <td
                      aria-selected={false}
                      className="cell selectable highlighted"
                      onKeyDown={[Function]}
                      onMouseDown={[Function]}
                      style={
                        Object {
                          "left": null,
                        }
                      }
                      tabIndex={-1}
                    >
                      <FocusTrap
                        _createFocusTrap={[Function]}
                        active={false}
                        focusTrapOptions={
                          Object {
                            "clickOutsideDeactivates": true,
                            "escapeDeactivates": false,
                            "onDeactivate": [Function],
                            "returnFocusOnDeactivate": true,
                          }
                        }
                        paused={false}
                      >
                        <div
                          className="cell-content"
                          style={
                            Object {
                              "height": "2.5rem",
                            }
                          }
                        >
                          47
                        </div>
                      </FocusTrap>
                    </td>
                  </Cell>
                </InjectIntl(Cell)>
              </tr>
            </Row>
          </tbody>
        </table>
        <VisuallyHiddenText
          aria-atomic="true"
          aria-live="polite"
<<<<<<< HEAD
          text={null}
        >
          <span
            aria-atomic="true"
            aria-live="polite"
            className="visually-hidden-text"
          />
        </VisuallyHiddenText>
      </div>
    </Component>
  </InjectIntl(Component)>
</ForwardRef>
=======
          className="visually-hidden-text"
        />
      </VisuallyHiddenText>
      <VisuallyHiddenText
        aria-atomic="true"
        aria-live="polite"
        text={null}
      >
        <span
          aria-atomic="true"
          aria-live="polite"
          className="visually-hidden-text"
        />
      </VisuallyHiddenText>
    </div>
  </DataGrid>
</InjectIntl(DataGrid)>
>>>>>>> f0c547b77 (Copy the Jest updates)
`;

exports[`DataGrid verifies row selection column header selection 1`] = `
<ForwardRef
  hasSelectableRows={true}
  id="test-terra-data-grid"
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": null,
      "now": [Function],
      "onError": [Function],
      "textComponent": "span",
      "timeZone": null,
    }
  }
  onColumnSelect={
    [MockFunction] {
      "calls": Array [
        Array [
          "WorklistDataGrid-rowSelectionColumn",
        ],
      ],
      "results": Array [
        Object {
          "type": "return",
          "value": undefined,
        },
      ],
    }
  }
  overflowColumns={
    Array [
      Object {
        "displayName": "March 17",
        "id": "Column-2",
        "isSelectable": false,
      },
    ]
  }
  pinnedColumns={
    Array [
      Object {
        "displayName": " Vitals",
        "id": "Column-0",
      },
      Object {
        "displayName": "March 16",
        "id": "Column-1",
      },
    ]
  }
  rows={
    Array [
      Object {
        "cells": Array [
          Object {
            "content": "Heart Rate Monitored (bpm)",
            "isSelectable": false,
          },
          Object {
            "content": "",
          },
          Object {
            "content": "66",
            "isMasked": true,
          },
        ],
        "id": "1",
      },
      Object {
        "cells": Array [
          Object {
            "content": "Temperature Oral (degC)",
          },
          Object {
            "content": "36.7",
          },
          Object {
            "content": "36.9",
            "isMasked": true,
          },
        ],
        "id": "2",
      },
      Object {
        "cells": Array [
          Object {
            "content": "Cardiac Index (L/min/m2)",
          },
          Object {
            "content": "2.25",
          },
          Object {
            "content": "2.28",
            "isMasked": true,
          },
        ],
        "id": "3",
      },
      Object {
        "cells": Array [
          Object {
            "content": "Oxygen Flow Rate (L/min)",
          },
          Object {
            "content": "63",
          },
          Object {
            "content": "47",
          },
        ],
        "id": "4",
        "isSelected": true,
      },
    ]
  }
>
  <InjectIntl(Component)
    columnHeaderHeight="2.5rem"
    defaultColumnWidth={200}
    focusFuncRef={null}
    hasSelectableRows={true}
    id="test-terra-data-grid"
    intl={
      Object {
        "defaultFormats": Object {},
        "defaultLocale": "en",
        "formatDate": [Function],
        "formatHTMLMessage": [Function],
        "formatMessage": [Function],
        "formatNumber": [Function],
        "formatPlural": [Function],
        "formatRelative": [Function],
        "formatTime": [Function],
        "formats": Object {},
        "formatters": Object {
          "getDateTimeFormat": [Function],
          "getMessageFormat": [Function],
          "getNumberFormat": [Function],
          "getPluralFormat": [Function],
          "getRelativeFormat": [Function],
        },
        "locale": "en",
        "messages": null,
        "now": [Function],
        "onError": [Function],
        "textComponent": "span",
        "timeZone": null,
      }
    }
    onColumnSelect={
      [MockFunction] {
        "calls": Array [
          Array [
            "WorklistDataGrid-rowSelectionColumn",
          ],
        ],
        "results": Array [
          Object {
            "type": "return",
            "value": undefined,
          },
        ],
      }
    }
    overflowColumns={
      Array [
        Object {
          "displayName": "March 17",
          "id": "Column-2",
          "isSelectable": false,
        },
      ]
    }
    pinnedColumns={
      Array [
        Object {
          "displayName": " Vitals",
          "id": "Column-0",
        },
        Object {
          "displayName": "March 16",
          "id": "Column-1",
        },
      ]
    }
    rowHeaderIndex={0}
    rowHeight="2.5rem"
    rows={
      Array [
        Object {
          "cells": Array [
            Object {
              "content": "Heart Rate Monitored (bpm)",
              "isSelectable": false,
            },
            Object {
              "content": "",
            },
            Object {
              "content": "66",
              "isMasked": true,
            },
          ],
          "id": "1",
        },
        Object {
          "cells": Array [
            Object {
              "content": "Temperature Oral (degC)",
            },
            Object {
              "content": "36.7",
            },
            Object {
              "content": "36.9",
              "isMasked": true,
            },
          ],
          "id": "2",
        },
        Object {
          "cells": Array [
            Object {
              "content": "Cardiac Index (L/min/m2)",
            },
            Object {
              "content": "2.25",
            },
            Object {
              "content": "2.28",
              "isMasked": true,
            },
          ],
          "id": "3",
        },
        Object {
          "cells": Array [
            Object {
              "content": "Oxygen Flow Rate (L/min)",
            },
            Object {
              "content": "63",
            },
            Object {
              "content": "47",
            },
          ],
          "id": "4",
          "isSelected": true,
        },
      ]
    }
  >
<<<<<<< HEAD
    <Component
      columnHeaderHeight="2.5rem"
      defaultColumnWidth={200}
      focusFuncRef={null}
      hasSelectableRows={true}
      id="test-terra-data-grid"
      intl={
        Object {
          "defaultFormats": Object {},
          "defaultLocale": "en",
          "formatDate": [Function],
          "formatHTMLMessage": [Function],
          "formatMessage": [Function],
          "formatNumber": [Function],
          "formatPlural": [Function],
          "formatRelative": [Function],
          "formatTime": [Function],
          "formats": Object {},
          "formatters": Object {
            "getDateTimeFormat": [Function],
            "getMessageFormat": [Function],
            "getNumberFormat": [Function],
            "getPluralFormat": [Function],
            "getRelativeFormat": [Function],
          },
          "locale": "en",
          "messages": null,
          "now": [Function],
          "onError": [Function],
          "textComponent": "span",
          "timeZone": null,
        }
      }
      onColumnSelect={
        [MockFunction] {
          "calls": Array [
=======
    <div
      className="data-grid-container"
    >
      <table
        className="data-grid"
        id="test-terra-data-grid"
        onFocus={[Function]}
        onKeyDown={[Function]}
        onMouseDown={[Function]}
        role="grid"
        tabIndex={0}
      >
        <Memo(ColumnHeader)
          activeColumnIndex={0}
          activeColumnResizing={false}
          columns={
>>>>>>> f0c547b77 (Copy the Jest updates)
            Array [
              "WorklistDataGrid-rowSelectionColumn",
            ],
          ],
          "results": Array [
            Object {
              "type": "return",
              "value": undefined,
            },
          ],
        }
      }
      overflowColumns={
        Array [
          Object {
            "displayName": "March 17",
            "id": "Column-2",
            "isSelectable": false,
          },
        ]
      }
      pinnedColumns={
        Array [
          Object {
            "displayName": " Vitals",
            "id": "Column-0",
          },
          Object {
            "displayName": "March 16",
            "id": "Column-1",
          },
        ]
      }
      rowHeaderIndex={0}
      rowHeight="2.5rem"
      rows={
        Array [
          Object {
            "cells": Array [
              Object {
<<<<<<< HEAD
                "content": "Heart Rate Monitored (bpm)",
                "isSelectable": false,
              },
              Object {
                "content": "",
              },
              Object {
                "content": "66",
                "isMasked": true,
              },
            ],
            "id": "1",
          },
          Object {
            "cells": Array [
              Object {
                "content": "Temperature Oral (degC)",
              },
              Object {
                "content": "36.7",
              },
              Object {
                "content": "36.9",
                "isMasked": true,
              },
            ],
            "id": "2",
          },
          Object {
            "cells": Array [
              Object {
                "content": "Cardiac Index (L/min/m2)",
              },
              Object {
                "content": "2.25",
              },
              Object {
                "content": "2.28",
                "isMasked": true,
              },
            ],
            "id": "3",
          },
          Object {
            "cells": Array [
              Object {
                "content": "Oxygen Flow Rate (L/min)",
              },
              Object {
                "content": "63",
              },
              Object {
                "content": "47",
              },
            ],
            "id": "4",
            "isSelected": true,
          },
        ]
      }
    >
      <div
        className="data-grid-container"
      >
        <table
          className="data-grid"
          id="test-terra-data-grid"
          onFocus={[Function]}
          onKeyDown={[Function]}
          onMouseDown={[Function]}
          role="grid"
          tabIndex={0}
        >
          <Memo(ColumnHeader)
            columns={
              Array [
                Object {
                  "id": "WorklistDataGrid-rowSelectionColumn",
                  "isResizable": false,
                  "isSelectable": true,
                  "maximumWidth": 300,
                  "minimumWidth": 60,
                  "width": 40,
                },
                Object {
                  "displayName": " Vitals",
                  "id": "Column-0",
                  "maximumWidth": 300,
                  "minimumWidth": 60,
                  "width": 200,
                },
                Object {
                  "displayName": "March 16",
                  "id": "Column-1",
                  "maximumWidth": 300,
                  "minimumWidth": 60,
                  "width": 200,
                },
                Object {
                  "displayName": "March 17",
                  "id": "Column-2",
                  "isSelectable": false,
                  "maximumWidth": 300,
                  "minimumWidth": 60,
                  "width": 200,
                },
              ]
            }
            headerHeight="2.5rem"
            onColumnSelect={[Function]}
            onResizeMouseDown={[Function]}
            tableHeight={0}
          >
            <thead>
              <tr
                className="column-header-row"
                height="2.5rem"
=======
                "id": "WorklistDataGrid-rowSelectionColumn",
                "isResizable": false,
                "isSelectable": true,
                "maximumWidth": 300,
                "minimumWidth": 60,
                "width": 40,
              },
              Object {
                "displayName": " Vitals",
                "id": "Column-0",
                "maximumWidth": 300,
                "minimumWidth": 60,
                "width": 200,
              },
              Object {
                "displayName": "March 16",
                "id": "Column-1",
                "maximumWidth": 300,
                "minimumWidth": 60,
                "width": 200,
              },
              Object {
                "displayName": "March 17",
                "id": "Column-2",
                "isSelectable": false,
                "maximumWidth": 300,
                "minimumWidth": 60,
                "width": 200,
              },
            ]
          }
          headerHeight="2.5rem"
          onColumnSelect={[Function]}
          onResizeHandleChange={[Function]}
          onResizeMouseDown={[Function]}
          tableHeight={0}
        >
          <thead>
            <tr
              className="column-header-row"
              height="2.5rem"
            >
              <InjectIntl(ColumnHeaderCell)
                columnIndex={0}
                headerHeight="2.5rem"
                id="WorklistDataGrid-rowSelectionColumn"
                isActive={true}
                isResizable={false}
                isResizeActive={false}
                isSelectable={true}
                key="WorklistDataGrid-rowSelectionColumn"
                maximumWidth={300}
                minimumWidth={60}
                onColumnSelect={[Function]}
                onResizeHandleChange={[Function]}
                onResizeMouseDown={[Function]}
                rowIndex={0}
                tableHeight={0}
                width={40}
>>>>>>> f0c547b77 (Copy the Jest updates)
              >
                <InjectIntl(ColumnHeaderCell)
                  columnIndex={0}
                  headerHeight="2.5rem"
                  id="WorklistDataGrid-rowSelectionColumn"
<<<<<<< HEAD
=======
                  intl={
                    Object {
                      "defaultFormats": Object {},
                      "defaultLocale": "en",
                      "formatDate": [Function],
                      "formatHTMLMessage": [Function],
                      "formatMessage": [Function],
                      "formatNumber": [Function],
                      "formatPlural": [Function],
                      "formatRelative": [Function],
                      "formatTime": [Function],
                      "formats": Object {},
                      "formatters": Object {
                        "getDateTimeFormat": [Function],
                        "getMessageFormat": [Function],
                        "getNumberFormat": [Function],
                        "getPluralFormat": [Function],
                        "getRelativeFormat": [Function],
                      },
                      "locale": "en",
                      "messages": null,
                      "now": [Function],
                      "onError": [Function],
                      "textComponent": "span",
                      "timeZone": null,
                    }
                  }
                  isActive={true}
>>>>>>> f0c547b77 (Copy the Jest updates)
                  isResizable={false}
                  isResizeActive={false}
                  isSelectable={true}
<<<<<<< HEAD
<<<<<<< HEAD
                  key="WorklistDataGrid-rowSelectionColumn"
                  maximumWidth={300}
                  minimumWidth={60}
=======
                  maximumWidth={500}
                  minimumWidth={100}
>>>>>>> f0c547b77 (Copy the Jest updates)
=======
                  maximumWidth={300}
                  minimumWidth={60}
>>>>>>> d5c6ea0e7 (updated snapshots)
                  onColumnSelect={[Function]}
                  onResizeHandleChange={[Function]}
                  onResizeMouseDown={[Function]}
                  rowIndex={0}
                  tableHeight={0}
                  width={40}
                >
                  <ColumnHeaderCell
                    columnIndex={0}
                    hasError={false}
                    headerHeight="2.5rem"
                    id="WorklistDataGrid-rowSelectionColumn"
                    intl={
                      Object {
                        "defaultFormats": Object {},
                        "defaultLocale": "en",
                        "formatDate": [Function],
                        "formatHTMLMessage": [Function],
                        "formatMessage": [Function],
                        "formatNumber": [Function],
                        "formatPlural": [Function],
                        "formatRelative": [Function],
                        "formatTime": [Function],
                        "formats": Object {},
                        "formatters": Object {
                          "getDateTimeFormat": [Function],
                          "getMessageFormat": [Function],
                          "getNumberFormat": [Function],
                          "getPluralFormat": [Function],
                          "getRelativeFormat": [Function],
                        },
                        "locale": "en",
                        "messages": null,
                        "now": [Function],
                        "onError": [Function],
                        "textComponent": "span",
                        "timeZone": null,
                      }
                    }
                    isResizable={false}
                    isSelectable={true}
                    maximumWidth={300}
                    minimumWidth={60}
                    onColumnSelect={[Function]}
                    onResizeMouseDown={[Function]}
                    rowIndex={0}
                    tableHeight={0}
                    width={40}
                  >
                    <th
                      className="column-header selectable pinned"
                      key="WorklistDataGrid-rowSelectionColumn"
                      onKeyDown={[Function]}
                      onMouseDown={[Function]}
                      role="columnheader"
                      scope="col"
                      style={
                        Object {
                          "height": "2.5rem",
                          "left": 0,
                          "width": "40px",
                        }
                      }
                      tabIndex={-1}
                    >
<<<<<<< HEAD
                      <div
                        className="header-container"
                      >
                        <span />
                      </div>
                    </th>
                  </ColumnHeaderCell>
                </InjectIntl(ColumnHeaderCell)>
                <InjectIntl(ColumnHeaderCell)
=======
                      <span />
                    </div>
                  </th>
                </ColumnHeaderCell>
              </InjectIntl(ColumnHeaderCell)>
              <InjectIntl(ColumnHeaderCell)
                columnIndex={1}
                displayName=" Vitals"
                headerHeight="2.5rem"
                id="Column-0"
                isActive={false}
                isResizeActive={false}
                key="Column-0"
                maximumWidth={300}
                minimumWidth={60}
                onColumnSelect={[Function]}
                onResizeHandleChange={[Function]}
                onResizeMouseDown={[Function]}
                rowIndex={0}
                tableHeight={0}
                width={200}
              >
                <ColumnHeaderCell
>>>>>>> f0c547b77 (Copy the Jest updates)
                  columnIndex={1}
                  displayName=" Vitals"
                  headerHeight="2.5rem"
                  id="Column-0"
<<<<<<< HEAD
                  key="Column-0"
                  maximumWidth={300}
                  minimumWidth={60}
=======
                  intl={
                    Object {
                      "defaultFormats": Object {},
                      "defaultLocale": "en",
                      "formatDate": [Function],
                      "formatHTMLMessage": [Function],
                      "formatMessage": [Function],
                      "formatNumber": [Function],
                      "formatPlural": [Function],
                      "formatRelative": [Function],
                      "formatTime": [Function],
                      "formats": Object {},
                      "formatters": Object {
                        "getDateTimeFormat": [Function],
                        "getMessageFormat": [Function],
                        "getNumberFormat": [Function],
                        "getPluralFormat": [Function],
                        "getRelativeFormat": [Function],
                      },
                      "locale": "en",
                      "messages": null,
                      "now": [Function],
                      "onError": [Function],
                      "textComponent": "span",
                      "timeZone": null,
                    }
                  }
                  isActive={false}
                  isResizable={true}
                  isResizeActive={false}
                  isSelectable={true}
<<<<<<< HEAD
                  maximumWidth={500}
                  minimumWidth={100}
>>>>>>> f0c547b77 (Copy the Jest updates)
=======
                  maximumWidth={300}
                  minimumWidth={60}
>>>>>>> d5c6ea0e7 (updated snapshots)
                  onColumnSelect={[Function]}
                  onResizeHandleChange={[Function]}
                  onResizeMouseDown={[Function]}
                  rowIndex={0}
                  tableHeight={0}
                  width={200}
                >
                  <ColumnHeaderCell
                    columnIndex={1}
                    displayName=" Vitals"
                    hasError={false}
                    headerHeight="2.5rem"
                    id="Column-0"
                    intl={
                      Object {
                        "defaultFormats": Object {},
                        "defaultLocale": "en",
                        "formatDate": [Function],
                        "formatHTMLMessage": [Function],
                        "formatMessage": [Function],
                        "formatNumber": [Function],
                        "formatPlural": [Function],
                        "formatRelative": [Function],
                        "formatTime": [Function],
                        "formats": Object {},
                        "formatters": Object {
                          "getDateTimeFormat": [Function],
                          "getMessageFormat": [Function],
                          "getNumberFormat": [Function],
                          "getPluralFormat": [Function],
                          "getRelativeFormat": [Function],
                        },
                        "locale": "en",
                        "messages": null,
                        "now": [Function],
                        "onError": [Function],
                        "textComponent": "span",
                        "timeZone": null,
                      }
                    }
                    isResizable={true}
                    isSelectable={true}
                    maximumWidth={300}
                    minimumWidth={60}
                    onColumnSelect={[Function]}
                    onResizeMouseDown={[Function]}
                    rowIndex={0}
                    tableHeight={0}
                    width={200}
                  >
                    <th
                      className="column-header selectable pinned"
                      key="Column-0"
                      onKeyDown={[Function]}
                      onMouseDown={[Function]}
                      role="columnheader"
                      scope="col"
                      style={
                        Object {
                          "height": "2.5rem",
                          "left": 40,
                          "width": "200px",
                        }
                      }
                      tabIndex={-1}
                    >
<<<<<<< HEAD
                      <div
                        className="header-container"
                        role="button"
                      >
                        <span>
                           Vitals
                        </span>
                      </div>
                      <InjectIntl(ColumnResizeHandle)
=======
                      <span>
                         Vitals
                      </span>
                    </div>
                    <InjectIntl(ColumnResizeHandle)
                      columnIndex={1}
                      columnText=" Vitals"
                      columnWidth={200}
                      height={0}
                      isActive={false}
                      maximumWidth={300}
                      minimumWidth={60}
                      onResizeHandleChange={[Function]}
                      onResizeMouseDown={[Function]}
                      onResizeMouseUp={[Function]}
                    >
                      <ColumnResizeHandle
>>>>>>> f0c547b77 (Copy the Jest updates)
                        columnIndex={1}
                        columnResizeIncrement={10}
                        columnText=" Vitals"
                        columnWidth={200}
<<<<<<< HEAD
<<<<<<< HEAD
                        height={0}
                        maximumWidth={300}
                        minimumWidth={60}
=======
=======
                        height={0}
>>>>>>> d5c6ea0e7 (updated snapshots)
                        intl={
                          Object {
                            "defaultFormats": Object {},
                            "defaultLocale": "en",
                            "formatDate": [Function],
                            "formatHTMLMessage": [Function],
                            "formatMessage": [Function],
                            "formatNumber": [Function],
                            "formatPlural": [Function],
                            "formatRelative": [Function],
                            "formatTime": [Function],
                            "formats": Object {},
                            "formatters": Object {
                              "getDateTimeFormat": [Function],
                              "getMessageFormat": [Function],
                              "getNumberFormat": [Function],
                              "getPluralFormat": [Function],
                              "getRelativeFormat": [Function],
                            },
                            "locale": "en",
                            "messages": null,
                            "now": [Function],
                            "onError": [Function],
                            "textComponent": "span",
                            "timeZone": null,
                          }
                        }
                        isActive={false}
                        maximumWidth={300}
                        minimumWidth={60}
                        onResizeHandleChange={[Function]}
>>>>>>> f0c547b77 (Copy the Jest updates)
                        onResizeMouseDown={[Function]}
                        onResizeMouseUp={[Function]}
                        setIsActive={[Function]}
                      >
<<<<<<< HEAD
                        <ColumnResizeHandle
                          columnIndex={1}
                          columnText=" Vitals"
                          columnWidth={200}
                          height={0}
                          intl={
                            Object {
                              "defaultFormats": Object {},
                              "defaultLocale": "en",
                              "formatDate": [Function],
                              "formatHTMLMessage": [Function],
                              "formatMessage": [Function],
                              "formatNumber": [Function],
                              "formatPlural": [Function],
                              "formatRelative": [Function],
                              "formatTime": [Function],
                              "formats": Object {},
                              "formatters": Object {
                                "getDateTimeFormat": [Function],
                                "getMessageFormat": [Function],
                                "getNumberFormat": [Function],
                                "getPluralFormat": [Function],
                                "getRelativeFormat": [Function],
                              },
                              "locale": "en",
                              "messages": null,
                              "now": [Function],
                              "onError": [Function],
                              "textComponent": "span",
                              "timeZone": null,
                            }
                          }
                          maximumWidth={300}
                          minimumWidth={60}
                          onResizeMouseDown={[Function]}
<<<<<<< HEAD
=======
                          onResizeMouseUp={[Function]}
                          setIsActive={[Function]}
>>>>>>> b81bf7514 (updated snapshots)
                        >
                          <div
                            aria-hidden={true}
                            aria-label=" Vitals"
                            aria-valuemax={300}
                            aria-valuemin={60}
                            aria-valuenow={200}
                            aria-valuetext="Terra.dataGrid.resizeHandleValueText"
                            className="resize-handle"
                            draggable={true}
                            onBlur={[Function]}
                            onFocus={[Function]}
                            onMouseDown={[Function]}
<<<<<<< HEAD
                            role="slider"
=======
                            onMouseEnter={[Function]}
                            onMouseLeave={[Function]}
                            onMouseUp={[Function]}
                            role={null}
>>>>>>> c4b58f1ad (fixed jest tests)
                            style={
                              Object {
                                "height": "0px",
                              }
                            }
                            tabIndex={-1}
                          />
                        </ColumnResizeHandle>
                      </InjectIntl(ColumnResizeHandle)>
                    </th>
                  </ColumnHeaderCell>
                </InjectIntl(ColumnHeaderCell)>
                <InjectIntl(ColumnHeaderCell)
=======
                        <div
                          aria-hidden={true}
                          aria-label={null}
                          aria-valuemax={null}
                          aria-valuemin={null}
                          aria-valuenow={null}
                          aria-valuetext={null}
                          className="resize-handle"
                          draggable={true}
                          onBlur={[Function]}
                          onClick={[Function]}
                          onFocus={[Function]}
                          onKeyDown={[Function]}
                          onMouseDown={[Function]}
                          onMouseEnter={[Function]}
                          onMouseLeave={[Function]}
                          onMouseUp={[Function]}
                          role="divider"
                          style={
                            Object {
                              "height": "0px",
                            }
                          }
                          tabIndex={-1}
                        />
                      </ColumnResizeHandle>
                    </InjectIntl(ColumnResizeHandle)>
                  </th>
                </ColumnHeaderCell>
              </InjectIntl(ColumnHeaderCell)>
              <InjectIntl(ColumnHeaderCell)
                columnIndex={2}
                displayName="March 16"
                headerHeight="2.5rem"
                id="Column-1"
                isActive={false}
                isResizeActive={false}
                key="Column-1"
                maximumWidth={300}
                minimumWidth={60}
                onColumnSelect={[Function]}
                onResizeHandleChange={[Function]}
                onResizeMouseDown={[Function]}
                rowIndex={0}
                tableHeight={0}
                width={200}
              >
                <ColumnHeaderCell
>>>>>>> f0c547b77 (Copy the Jest updates)
                  columnIndex={2}
                  displayName="March 16"
                  headerHeight="2.5rem"
                  id="Column-1"
<<<<<<< HEAD
                  key="Column-1"
                  maximumWidth={300}
                  minimumWidth={60}
=======
                  intl={
                    Object {
                      "defaultFormats": Object {},
                      "defaultLocale": "en",
                      "formatDate": [Function],
                      "formatHTMLMessage": [Function],
                      "formatMessage": [Function],
                      "formatNumber": [Function],
                      "formatPlural": [Function],
                      "formatRelative": [Function],
                      "formatTime": [Function],
                      "formats": Object {},
                      "formatters": Object {
                        "getDateTimeFormat": [Function],
                        "getMessageFormat": [Function],
                        "getNumberFormat": [Function],
                        "getPluralFormat": [Function],
                        "getRelativeFormat": [Function],
                      },
                      "locale": "en",
                      "messages": null,
                      "now": [Function],
                      "onError": [Function],
                      "textComponent": "span",
                      "timeZone": null,
                    }
                  }
                  isActive={false}
                  isResizable={true}
                  isResizeActive={false}
                  isSelectable={true}
<<<<<<< HEAD
                  maximumWidth={500}
                  minimumWidth={100}
>>>>>>> f0c547b77 (Copy the Jest updates)
=======
                  maximumWidth={300}
                  minimumWidth={60}
>>>>>>> d5c6ea0e7 (updated snapshots)
                  onColumnSelect={[Function]}
                  onResizeHandleChange={[Function]}
                  onResizeMouseDown={[Function]}
                  rowIndex={0}
                  tableHeight={0}
                  width={200}
                >
                  <ColumnHeaderCell
                    columnIndex={2}
                    displayName="March 16"
                    hasError={false}
                    headerHeight="2.5rem"
                    id="Column-1"
                    intl={
                      Object {
                        "defaultFormats": Object {},
                        "defaultLocale": "en",
                        "formatDate": [Function],
                        "formatHTMLMessage": [Function],
                        "formatMessage": [Function],
                        "formatNumber": [Function],
                        "formatPlural": [Function],
                        "formatRelative": [Function],
                        "formatTime": [Function],
                        "formats": Object {},
                        "formatters": Object {
                          "getDateTimeFormat": [Function],
                          "getMessageFormat": [Function],
                          "getNumberFormat": [Function],
                          "getPluralFormat": [Function],
                          "getRelativeFormat": [Function],
                        },
                        "locale": "en",
                        "messages": null,
                        "now": [Function],
                        "onError": [Function],
                        "textComponent": "span",
                        "timeZone": null,
                      }
                    }
                    isResizable={true}
                    isSelectable={true}
                    maximumWidth={300}
                    minimumWidth={60}
                    onColumnSelect={[Function]}
                    onResizeMouseDown={[Function]}
                    rowIndex={0}
                    tableHeight={0}
                    width={200}
                  >
                    <th
                      className="column-header selectable pinned"
                      key="Column-1"
                      onKeyDown={[Function]}
                      onMouseDown={[Function]}
                      role="columnheader"
                      scope="col"
                      style={
                        Object {
                          "height": "2.5rem",
                          "left": 240,
                          "width": "200px",
                        }
                      }
                      tabIndex={-1}
                    >
<<<<<<< HEAD
                      <div
                        className="header-container"
                        role="button"
                      >
                        <span>
                          March 16
                        </span>
                      </div>
                      <InjectIntl(ColumnResizeHandle)
=======
                      <span>
                        March 16
                      </span>
                    </div>
                    <InjectIntl(ColumnResizeHandle)
                      columnIndex={2}
                      columnText="March 16"
                      columnWidth={200}
                      height={0}
                      isActive={false}
                      maximumWidth={300}
                      minimumWidth={60}
                      onResizeHandleChange={[Function]}
                      onResizeMouseDown={[Function]}
                      onResizeMouseUp={[Function]}
                    >
                      <ColumnResizeHandle
>>>>>>> f0c547b77 (Copy the Jest updates)
                        columnIndex={2}
                        columnResizeIncrement={10}
                        columnText="March 16"
                        columnWidth={200}
<<<<<<< HEAD
<<<<<<< HEAD
                        height={0}
                        maximumWidth={300}
                        minimumWidth={60}
=======
=======
                        height={0}
>>>>>>> d5c6ea0e7 (updated snapshots)
                        intl={
                          Object {
                            "defaultFormats": Object {},
                            "defaultLocale": "en",
                            "formatDate": [Function],
                            "formatHTMLMessage": [Function],
                            "formatMessage": [Function],
                            "formatNumber": [Function],
                            "formatPlural": [Function],
                            "formatRelative": [Function],
                            "formatTime": [Function],
                            "formats": Object {},
                            "formatters": Object {
                              "getDateTimeFormat": [Function],
                              "getMessageFormat": [Function],
                              "getNumberFormat": [Function],
                              "getPluralFormat": [Function],
                              "getRelativeFormat": [Function],
                            },
                            "locale": "en",
                            "messages": null,
                            "now": [Function],
                            "onError": [Function],
                            "textComponent": "span",
                            "timeZone": null,
                          }
                        }
                        isActive={false}
                        maximumWidth={300}
                        minimumWidth={60}
                        onResizeHandleChange={[Function]}
>>>>>>> f0c547b77 (Copy the Jest updates)
                        onResizeMouseDown={[Function]}
                        onResizeMouseUp={[Function]}
                        setIsActive={[Function]}
                      >
<<<<<<< HEAD
                        <ColumnResizeHandle
                          columnIndex={2}
                          columnText="March 16"
                          columnWidth={200}
                          height={0}
                          intl={
                            Object {
                              "defaultFormats": Object {},
                              "defaultLocale": "en",
                              "formatDate": [Function],
                              "formatHTMLMessage": [Function],
                              "formatMessage": [Function],
                              "formatNumber": [Function],
                              "formatPlural": [Function],
                              "formatRelative": [Function],
                              "formatTime": [Function],
                              "formats": Object {},
                              "formatters": Object {
                                "getDateTimeFormat": [Function],
                                "getMessageFormat": [Function],
                                "getNumberFormat": [Function],
                                "getPluralFormat": [Function],
                                "getRelativeFormat": [Function],
                              },
                              "locale": "en",
                              "messages": null,
                              "now": [Function],
                              "onError": [Function],
                              "textComponent": "span",
                              "timeZone": null,
                            }
                          }
                          maximumWidth={300}
                          minimumWidth={60}
                          onResizeMouseDown={[Function]}
<<<<<<< HEAD
=======
                          onResizeMouseUp={[Function]}
                          setIsActive={[Function]}
>>>>>>> b81bf7514 (updated snapshots)
                        >
                          <div
                            aria-hidden={true}
                            aria-label="March 16"
                            aria-valuemax={300}
                            aria-valuemin={60}
                            aria-valuenow={200}
                            aria-valuetext="Terra.dataGrid.resizeHandleValueText"
                            className="resize-handle"
                            draggable={true}
                            onBlur={[Function]}
                            onFocus={[Function]}
                            onMouseDown={[Function]}
<<<<<<< HEAD
                            role="slider"
=======
                            onMouseEnter={[Function]}
                            onMouseLeave={[Function]}
                            onMouseUp={[Function]}
                            role={null}
>>>>>>> c4b58f1ad (fixed jest tests)
                            style={
                              Object {
                                "height": "0px",
                              }
                            }
                            tabIndex={-1}
                          />
                        </ColumnResizeHandle>
                      </InjectIntl(ColumnResizeHandle)>
                      <div
                        className="pinned-columns-divider"
                        style={
                          Object {
                            "height": 0,
                            "left": 199,
                          }
                        }
                      />
                    </th>
                  </ColumnHeaderCell>
                </InjectIntl(ColumnHeaderCell)>
                <InjectIntl(ColumnHeaderCell)
=======
                        <div
                          aria-hidden={true}
                          aria-label={null}
                          aria-valuemax={null}
                          aria-valuemin={null}
                          aria-valuenow={null}
                          aria-valuetext={null}
                          className="resize-handle"
                          draggable={true}
                          onBlur={[Function]}
                          onClick={[Function]}
                          onFocus={[Function]}
                          onKeyDown={[Function]}
                          onMouseDown={[Function]}
                          onMouseEnter={[Function]}
                          onMouseLeave={[Function]}
                          onMouseUp={[Function]}
                          role="divider"
                          style={
                            Object {
                              "height": "0px",
                            }
                          }
                          tabIndex={-1}
                        />
                      </ColumnResizeHandle>
                    </InjectIntl(ColumnResizeHandle)>
                    <div
                      className="pinned-columns-divider"
                      style={
                        Object {
                          "height": 0,
                          "left": 199,
                        }
                      }
                    />
                  </th>
                </ColumnHeaderCell>
              </InjectIntl(ColumnHeaderCell)>
              <InjectIntl(ColumnHeaderCell)
                columnIndex={3}
                displayName="March 17"
                headerHeight="2.5rem"
                id="Column-2"
                isActive={false}
                isResizeActive={false}
                isSelectable={false}
                key="Column-2"
                maximumWidth={300}
                minimumWidth={60}
                onColumnSelect={[Function]}
                onResizeHandleChange={[Function]}
                onResizeMouseDown={[Function]}
                rowIndex={0}
                tableHeight={0}
                width={200}
              >
                <ColumnHeaderCell
>>>>>>> f0c547b77 (Copy the Jest updates)
                  columnIndex={3}
                  displayName="March 17"
                  headerHeight="2.5rem"
                  id="Column-2"
<<<<<<< HEAD
                  isSelectable={false}
                  key="Column-2"
                  maximumWidth={300}
                  minimumWidth={60}
=======
                  intl={
                    Object {
                      "defaultFormats": Object {},
                      "defaultLocale": "en",
                      "formatDate": [Function],
                      "formatHTMLMessage": [Function],
                      "formatMessage": [Function],
                      "formatNumber": [Function],
                      "formatPlural": [Function],
                      "formatRelative": [Function],
                      "formatTime": [Function],
                      "formats": Object {},
                      "formatters": Object {
                        "getDateTimeFormat": [Function],
                        "getMessageFormat": [Function],
                        "getNumberFormat": [Function],
                        "getPluralFormat": [Function],
                        "getRelativeFormat": [Function],
                      },
                      "locale": "en",
                      "messages": null,
                      "now": [Function],
                      "onError": [Function],
                      "textComponent": "span",
                      "timeZone": null,
                    }
                  }
                  isActive={false}
                  isResizable={true}
                  isResizeActive={false}
                  isSelectable={false}
<<<<<<< HEAD
                  maximumWidth={500}
                  minimumWidth={100}
>>>>>>> f0c547b77 (Copy the Jest updates)
=======
                  maximumWidth={300}
                  minimumWidth={60}
>>>>>>> d5c6ea0e7 (updated snapshots)
                  onColumnSelect={[Function]}
                  onResizeHandleChange={[Function]}
                  onResizeMouseDown={[Function]}
                  rowIndex={0}
                  tableHeight={0}
                  width={200}
                >
<<<<<<< HEAD
                  <ColumnHeaderCell
                    columnIndex={3}
                    displayName="March 17"
                    hasError={false}
                    headerHeight="2.5rem"
                    id="Column-2"
                    intl={
=======
                  <th
                    className="column-header"
                    key="Column-2"
                    onKeyDown={[Function]}
                    onMouseDown={[Function]}
                    role="columnheader"
                    scope="col"
                    style={
>>>>>>> f0c547b77 (Copy the Jest updates)
                      Object {
                        "defaultFormats": Object {},
                        "defaultLocale": "en",
                        "formatDate": [Function],
                        "formatHTMLMessage": [Function],
                        "formatMessage": [Function],
                        "formatNumber": [Function],
                        "formatPlural": [Function],
                        "formatRelative": [Function],
                        "formatTime": [Function],
                        "formats": Object {},
                        "formatters": Object {
                          "getDateTimeFormat": [Function],
                          "getMessageFormat": [Function],
                          "getNumberFormat": [Function],
                          "getPluralFormat": [Function],
                          "getRelativeFormat": [Function],
                        },
                        "locale": "en",
                        "messages": null,
                        "now": [Function],
                        "onError": [Function],
                        "textComponent": "span",
                        "timeZone": null,
                      }
                    }
                    isResizable={true}
                    isSelectable={false}
                    maximumWidth={300}
                    minimumWidth={60}
                    onColumnSelect={[Function]}
                    onResizeMouseDown={[Function]}
                    rowIndex={0}
                    tableHeight={0}
                    width={200}
                  >
                    <th
                      className="column-header"
                      key="Column-2"
                      role="columnheader"
                      scope="col"
                      style={
                        Object {
                          "height": "2.5rem",
                          "left": null,
                          "width": "200px",
                        }
                      }
                      tabIndex={-1}
                    >
<<<<<<< HEAD
                      <div
                        className="header-container"
                        role="button"
                      >
                        <span>
                          March 17
                        </span>
                      </div>
                      <InjectIntl(ColumnResizeHandle)
=======
                      <span>
                        March 17
                      </span>
                    </div>
                    <InjectIntl(ColumnResizeHandle)
                      columnIndex={3}
                      columnText="March 17"
                      columnWidth={200}
                      height={0}
                      isActive={false}
                      maximumWidth={300}
                      minimumWidth={60}
                      onResizeHandleChange={[Function]}
                      onResizeMouseDown={[Function]}
                      onResizeMouseUp={[Function]}
                    >
                      <ColumnResizeHandle
>>>>>>> f0c547b77 (Copy the Jest updates)
                        columnIndex={3}
                        columnResizeIncrement={10}
                        columnText="March 17"
                        columnWidth={200}
<<<<<<< HEAD
<<<<<<< HEAD
                        height={0}
                        maximumWidth={300}
                        minimumWidth={60}
                        onResizeMouseDown={[Function]}
<<<<<<< HEAD
=======
                        onResizeMouseUp={[Function]}
                        setIsActive={[Function]}
>>>>>>> b81bf7514 (updated snapshots)
                      >
                        <ColumnResizeHandle
                          columnIndex={3}
                          columnText="March 17"
                          columnWidth={200}
                          height={0}
                          intl={
                            Object {
                              "defaultFormats": Object {},
                              "defaultLocale": "en",
                              "formatDate": [Function],
                              "formatHTMLMessage": [Function],
                              "formatMessage": [Function],
                              "formatNumber": [Function],
                              "formatPlural": [Function],
                              "formatRelative": [Function],
                              "formatTime": [Function],
                              "formats": Object {},
                              "formatters": Object {
                                "getDateTimeFormat": [Function],
                                "getMessageFormat": [Function],
                                "getNumberFormat": [Function],
                                "getPluralFormat": [Function],
                                "getRelativeFormat": [Function],
                              },
                              "locale": "en",
                              "messages": null,
                              "now": [Function],
                              "onError": [Function],
                              "textComponent": "span",
                              "timeZone": null,
                            }
                          }
                          maximumWidth={300}
                          minimumWidth={60}
                          onResizeMouseDown={[Function]}
<<<<<<< HEAD
=======
                          onResizeMouseUp={[Function]}
                          setIsActive={[Function]}
>>>>>>> b81bf7514 (updated snapshots)
                        >
                          <div
                            aria-hidden={true}
                            aria-label="March 17"
                            aria-valuemax={300}
                            aria-valuemin={60}
                            aria-valuenow={200}
                            aria-valuetext="Terra.dataGrid.resizeHandleValueText"
                            className="resize-handle"
                            draggable={true}
                            onBlur={[Function]}
                            onFocus={[Function]}
                            onMouseDown={[Function]}
<<<<<<< HEAD
                            role="slider"
=======
                            onMouseEnter={[Function]}
                            onMouseLeave={[Function]}
                            onMouseUp={[Function]}
                            role={null}
>>>>>>> c4b58f1ad (fixed jest tests)
                            style={
                              Object {
                                "height": "0px",
                              }
                            }
                            tabIndex={-1}
                          />
                        </ColumnResizeHandle>
                      </InjectIntl(ColumnResizeHandle)>
                    </th>
                  </ColumnHeaderCell>
                </InjectIntl(ColumnHeaderCell)>
              </tr>
            </thead>
          </Memo(ColumnHeader)>
          <tbody>
            <Row
              cells={
                Array [
                  Object {
                    "content": "Heart Rate Monitored (bpm)",
                    "isSelectable": false,
                  },
                  Object {
                    "content": "",
                  },
                  Object {
                    "content": "66",
                    "isMasked": true,
                  },
                ]
              }
              displayedColumns={
                Array [
                  Object {
                    "id": "WorklistDataGrid-rowSelectionColumn",
                    "isResizable": false,
                    "isSelectable": true,
                    "width": 40,
                  },
                  Object {
                    "displayName": " Vitals",
                    "id": "Column-0",
                  },
                  Object {
                    "displayName": "March 16",
                    "id": "Column-1",
                  },
                  Object {
                    "displayName": "March 17",
                    "id": "Column-2",
                    "isSelectable": false,
                  },
                ]
              }
              hasRowSelection={true}
              height="2.5rem"
              id="1"
              key="1"
              onCellSelect={[Function]}
              rowHeaderIndex={0}
              rowIndex={1}
            >
              <tr
                className="row selectable"
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                style={
                  Object {
                    "height": "2.5rem",
                  }
                }
              >
                <InjectIntl(RowSelectionCell)
                  columnId="WorklistDataGrid-rowSelectionColumn"
                  columnIndex={0}
                  isSelected={false}
                  onCellSelect={[Function]}
                  rowId="1"
                  rowIndex={1}
                >
                  <RowSelectionCell
                    columnId="WorklistDataGrid-rowSelectionColumn"
                    columnIndex={0}
                    intl={
                      Object {
                        "defaultFormats": Object {},
                        "defaultLocale": "en",
                        "formatDate": [Function],
                        "formatHTMLMessage": [Function],
                        "formatMessage": [Function],
                        "formatNumber": [Function],
                        "formatPlural": [Function],
                        "formatRelative": [Function],
                        "formatTime": [Function],
                        "formats": Object {},
                        "formatters": Object {
                          "getDateTimeFormat": [Function],
                          "getMessageFormat": [Function],
                          "getNumberFormat": [Function],
                          "getPluralFormat": [Function],
                          "getRelativeFormat": [Function],
                        },
                        "locale": "en",
                        "messages": null,
                        "now": [Function],
                        "onError": [Function],
                        "textComponent": "span",
                        "timeZone": null,
                      }
                    }
                    isSelected={false}
                    onCellSelect={[Function]}
                    rowId="1"
                    rowIndex={1}
                  >
                    <InjectIntl(Cell)
                      columnId="WorklistDataGrid-rowSelectionColumn"
                      columnIndex={0}
                      isSelected={false}
                      key="1_WorklistDataGrid-rowSelectionColumn"
                      onCellSelect={[Function]}
                      rowId="1"
                      rowIndex={1}
                    >
                      <Cell
                        columnId="WorklistDataGrid-rowSelectionColumn"
                        columnIndex={0}
=======
>>>>>>> f0c547b77 (Copy the Jest updates)
=======
                        height={0}
>>>>>>> d5c6ea0e7 (updated snapshots)
                        intl={
                          Object {
                            "defaultFormats": Object {},
                            "defaultLocale": "en",
                            "formatDate": [Function],
                            "formatHTMLMessage": [Function],
                            "formatMessage": [Function],
                            "formatNumber": [Function],
                            "formatPlural": [Function],
                            "formatRelative": [Function],
                            "formatTime": [Function],
                            "formats": Object {},
                            "formatters": Object {
                              "getDateTimeFormat": [Function],
                              "getMessageFormat": [Function],
                              "getNumberFormat": [Function],
                              "getPluralFormat": [Function],
                              "getRelativeFormat": [Function],
                            },
                            "locale": "en",
                            "messages": null,
                            "now": [Function],
                            "onError": [Function],
                            "textComponent": "span",
                            "timeZone": null,
                          }
                        }
<<<<<<< HEAD
                        isMasked={false}
                        isRowHeader={false}
                        isSelectable={true}
                        isSelected={false}
                        onCellSelect={[Function]}
                        rowId="1"
                        rowIndex={1}
                      >
                        <td
                          aria-selected={false}
                          className="cell pinned selectable"
                          onKeyDown={[Function]}
                          onMouseDown={[Function]}
                          style={
                            Object {
                              "left": 0,
                            }
                          }
=======
                        isActive={false}
                        maximumWidth={300}
                        minimumWidth={60}
                        onResizeHandleChange={[Function]}
                        onResizeMouseDown={[Function]}
                        onResizeMouseUp={[Function]}
                      >
                        <div
                          aria-hidden={true}
                          aria-label={null}
                          aria-valuemax={null}
                          aria-valuemin={null}
                          aria-valuenow={null}
                          aria-valuetext={null}
                          className="resize-handle"
                          draggable={true}
                          onBlur={[Function]}
                          onClick={[Function]}
                          onFocus={[Function]}
                          onKeyDown={[Function]}
                          onMouseDown={[Function]}
                          onMouseEnter={[Function]}
                          onMouseLeave={[Function]}
                          onMouseUp={[Function]}
<<<<<<< HEAD
                          role="slider"
>>>>>>> f0c547b77 (Copy the Jest updates)
=======
                          role="divider"
                          style={
                            Object {
                              "height": "0px",
                            }
                          }
>>>>>>> d5c6ea0e7 (updated snapshots)
                          tabIndex={-1}
                        >
                          <FocusTrap
                            _createFocusTrap={[Function]}
                            active={false}
                            focusTrapOptions={
                              Object {
                                "clickOutsideDeactivates": true,
                                "escapeDeactivates": false,
                                "onDeactivate": [Function],
                                "returnFocusOnDeactivate": true,
                              }
                            }
                            paused={false}
                          >
                            <div
                              className="cell-content"
                              style={
                                Object {
                                  "height": undefined,
                                }
                              }
                            >
                              <input
                                aria-label="Terra.dataGrid.row-index"
                                checked={false}
                                className="input"
                                readOnly={true}
                                tabIndex={-1}
                                type="checkbox"
                              />
                            </div>
                          </FocusTrap>
                        </td>
                      </Cell>
                    </InjectIntl(Cell)>
                  </RowSelectionCell>
                </InjectIntl(RowSelectionCell)>
                <InjectIntl(Cell)
                  columnId="Column-0"
                  columnIndex={1}
                  height="2.5rem"
                  isHighlighted={false}
                  isRowHeader={true}
                  isSelectable={false}
                  isSelected={false}
                  key="1_Column-0"
                  onCellSelect={[Function]}
                  rowId="1"
                  rowIndex={1}
                >
                  <Cell
                    columnId="Column-0"
                    columnIndex={1}
                    height="2.5rem"
                    intl={
                      Object {
                        "defaultFormats": Object {},
                        "defaultLocale": "en",
                        "formatDate": [Function],
                        "formatHTMLMessage": [Function],
                        "formatMessage": [Function],
                        "formatNumber": [Function],
                        "formatPlural": [Function],
                        "formatRelative": [Function],
                        "formatTime": [Function],
                        "formats": Object {},
                        "formatters": Object {
                          "getDateTimeFormat": [Function],
                          "getMessageFormat": [Function],
                          "getNumberFormat": [Function],
                          "getPluralFormat": [Function],
                          "getRelativeFormat": [Function],
                        },
                        "locale": "en",
                        "messages": null,
                        "now": [Function],
                        "onError": [Function],
                        "textComponent": "span",
                        "timeZone": null,
                      }
                    }
                    isHighlighted={false}
                    isMasked={false}
                    isRowHeader={true}
                    isSelectable={false}
                    isSelected={false}
                    onCellSelect={[Function]}
                    rowId="1"
                    rowIndex={1}
                  >
                    <th
                      aria-selected={false}
                      className="cell pinned"
                      onKeyDown={[Function]}
                      onMouseDown={[Function]}
                      role="rowheader"
                      scope="row"
                      style={
                        Object {
                          "left": 40,
                        }
                      }
                      tabIndex={-1}
                    >
                      <FocusTrap
                        _createFocusTrap={[Function]}
                        active={false}
                        focusTrapOptions={
                          Object {
                            "clickOutsideDeactivates": true,
                            "escapeDeactivates": false,
                            "onDeactivate": [Function],
                            "returnFocusOnDeactivate": true,
                          }
                        }
                        paused={false}
                      >
                        <div
                          className="cell-content"
                          style={
                            Object {
                              "height": "2.5rem",
                            }
                          }
                        >
                          Heart Rate Monitored (bpm)
                        </div>
                      </FocusTrap>
                    </th>
                  </Cell>
                </InjectIntl(Cell)>
                <InjectIntl(Cell)
                  columnId="Column-1"
                  columnIndex={2}
                  height="2.5rem"
                  isHighlighted={false}
                  isRowHeader={false}
                  isSelected={false}
                  key="1_Column-1"
                  onCellSelect={[Function]}
                  rowId="1"
                  rowIndex={1}
                >
                  <Cell
                    columnId="Column-1"
                    columnIndex={2}
                    height="2.5rem"
                    intl={
                      Object {
                        "defaultFormats": Object {},
                        "defaultLocale": "en",
                        "formatDate": [Function],
                        "formatHTMLMessage": [Function],
                        "formatMessage": [Function],
                        "formatNumber": [Function],
                        "formatPlural": [Function],
                        "formatRelative": [Function],
                        "formatTime": [Function],
                        "formats": Object {},
                        "formatters": Object {
                          "getDateTimeFormat": [Function],
                          "getMessageFormat": [Function],
                          "getNumberFormat": [Function],
                          "getPluralFormat": [Function],
                          "getRelativeFormat": [Function],
                        },
                        "locale": "en",
                        "messages": null,
                        "now": [Function],
                        "onError": [Function],
                        "textComponent": "span",
                        "timeZone": null,
                      }
                    }
                    isHighlighted={false}
                    isMasked={false}
                    isRowHeader={false}
                    isSelectable={true}
                    isSelected={false}
                    onCellSelect={[Function]}
                    rowId="1"
                    rowIndex={1}
                  >
                    <td
                      aria-selected={false}
                      className="cell pinned selectable blank"
                      onKeyDown={[Function]}
                      onMouseDown={[Function]}
                      style={
                        Object {
                          "left": 240,
                        }
                      }
                      tabIndex={-1}
                    >
                      <FocusTrap
                        _createFocusTrap={[Function]}
                        active={false}
                        focusTrapOptions={
                          Object {
                            "clickOutsideDeactivates": true,
                            "escapeDeactivates": false,
                            "onDeactivate": [Function],
                            "returnFocusOnDeactivate": true,
                          }
                        }
                        paused={false}
                      >
                        <div
                          className="cell-content"
                          style={
                            Object {
                              "height": "2.5rem",
                            }
                          }
                        >
                          <span
                            className="no-data-cell"
                          >
                            Terra.dataGrid.blank
                          </span>
                        </div>
                      </FocusTrap>
                    </td>
                  </Cell>
                </InjectIntl(Cell)>
                <InjectIntl(Cell)
                  columnId="Column-2"
                  columnIndex={3}
                  height="2.5rem"
                  isHighlighted={false}
                  isMasked={true}
                  isRowHeader={false}
                  isSelected={false}
                  key="1_Column-2"
                  onCellSelect={[Function]}
                  rowId="1"
                  rowIndex={1}
                >
                  <Cell
                    columnId="Column-2"
                    columnIndex={3}
                    height="2.5rem"
                    intl={
                      Object {
                        "defaultFormats": Object {},
                        "defaultLocale": "en",
                        "formatDate": [Function],
                        "formatHTMLMessage": [Function],
                        "formatMessage": [Function],
                        "formatNumber": [Function],
                        "formatPlural": [Function],
                        "formatRelative": [Function],
                        "formatTime": [Function],
                        "formats": Object {},
                        "formatters": Object {
                          "getDateTimeFormat": [Function],
                          "getMessageFormat": [Function],
                          "getNumberFormat": [Function],
                          "getPluralFormat": [Function],
                          "getRelativeFormat": [Function],
                        },
                        "locale": "en",
                        "messages": null,
                        "now": [Function],
                        "onError": [Function],
                        "textComponent": "span",
                        "timeZone": null,
                      }
                    }
                    isHighlighted={false}
                    isMasked={true}
                    isRowHeader={false}
                    isSelectable={true}
                    isSelected={false}
                    onCellSelect={[Function]}
                    rowId="1"
                    rowIndex={1}
                  >
                    <td
                      aria-selected={false}
                      className="cell masked"
                      onKeyDown={[Function]}
                      onMouseDown={[Function]}
                      style={
                        Object {
                          "left": null,
                        }
                      }
                      tabIndex={-1}
                    >
                      <FocusTrap
                        _createFocusTrap={[Function]}
                        active={false}
                        focusTrapOptions={
                          Object {
                            "clickOutsideDeactivates": true,
                            "escapeDeactivates": false,
                            "onDeactivate": [Function],
                            "returnFocusOnDeactivate": true,
                          }
                        }
                        paused={false}
                      >
                        <div
                          className="cell-content"
                          style={
                            Object {
                              "height": "2.5rem",
                            }
                          }
                        >
                          <span
                            className="no-data-cell"
                          >
                            Terra.dataGrid.maskedCell
                          </span>
                        </div>
                      </FocusTrap>
                    </td>
                  </Cell>
                </InjectIntl(Cell)>
              </tr>
            </Row>
            <Row
              cells={
                Array [
                  Object {
                    "content": "Temperature Oral (degC)",
                  },
                  Object {
                    "content": "36.7",
                  },
                  Object {
                    "content": "36.9",
                    "isMasked": true,
                  },
                ]
              }
              displayedColumns={
                Array [
                  Object {
                    "id": "WorklistDataGrid-rowSelectionColumn",
                    "isResizable": false,
                    "isSelectable": true,
                    "width": 40,
                  },
                  Object {
                    "displayName": " Vitals",
                    "id": "Column-0",
                  },
                  Object {
                    "displayName": "March 16",
                    "id": "Column-1",
                  },
                  Object {
                    "displayName": "March 17",
                    "id": "Column-2",
                    "isSelectable": false,
                  },
                ]
              }
              hasRowSelection={true}
              height="2.5rem"
              id="2"
              key="2"
              onCellSelect={[Function]}
              rowHeaderIndex={0}
              rowIndex={2}
            >
              <tr
                className="row selectable"
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                style={
                  Object {
                    "height": "2.5rem",
                  }
                }
              >
                <InjectIntl(RowSelectionCell)
                  columnId="WorklistDataGrid-rowSelectionColumn"
                  columnIndex={0}
                  isSelected={false}
                  onCellSelect={[Function]}
                  rowId="2"
                  rowIndex={2}
                >
                  <RowSelectionCell
                    columnId="WorklistDataGrid-rowSelectionColumn"
                    columnIndex={0}
                    intl={
                      Object {
                        "defaultFormats": Object {},
                        "defaultLocale": "en",
                        "formatDate": [Function],
                        "formatHTMLMessage": [Function],
                        "formatMessage": [Function],
                        "formatNumber": [Function],
                        "formatPlural": [Function],
                        "formatRelative": [Function],
                        "formatTime": [Function],
                        "formats": Object {},
                        "formatters": Object {
                          "getDateTimeFormat": [Function],
                          "getMessageFormat": [Function],
                          "getNumberFormat": [Function],
                          "getPluralFormat": [Function],
                          "getRelativeFormat": [Function],
                        },
                        "locale": "en",
                        "messages": null,
                        "now": [Function],
                        "onError": [Function],
                        "textComponent": "span",
                        "timeZone": null,
                      }
                    }
                    isSelected={false}
                    onCellSelect={[Function]}
                    rowId="2"
                    rowIndex={2}
                  >
                    <InjectIntl(Cell)
                      columnId="WorklistDataGrid-rowSelectionColumn"
                      columnIndex={0}
                      isSelected={false}
                      key="2_WorklistDataGrid-rowSelectionColumn"
                      onCellSelect={[Function]}
                      rowId="2"
                      rowIndex={2}
                    >
                      <Cell
                        columnId="WorklistDataGrid-rowSelectionColumn"
                        columnIndex={0}
                        intl={
                          Object {
                            "defaultFormats": Object {},
                            "defaultLocale": "en",
                            "formatDate": [Function],
                            "formatHTMLMessage": [Function],
                            "formatMessage": [Function],
                            "formatNumber": [Function],
                            "formatPlural": [Function],
                            "formatRelative": [Function],
                            "formatTime": [Function],
                            "formats": Object {},
                            "formatters": Object {
                              "getDateTimeFormat": [Function],
                              "getMessageFormat": [Function],
                              "getNumberFormat": [Function],
                              "getPluralFormat": [Function],
                              "getRelativeFormat": [Function],
                            },
                            "locale": "en",
                            "messages": null,
                            "now": [Function],
                            "onError": [Function],
                            "textComponent": "span",
                            "timeZone": null,
                          }
                        }
                        isMasked={false}
                        isRowHeader={false}
                        isSelectable={true}
                        isSelected={false}
                        onCellSelect={[Function]}
                        rowId="2"
                        rowIndex={2}
                      >
                        <td
                          aria-selected={false}
                          className="cell pinned selectable"
                          onKeyDown={[Function]}
                          onMouseDown={[Function]}
                          style={
                            Object {
                              "left": 0,
                            }
                          }
                          tabIndex={-1}
                        >
                          <FocusTrap
                            _createFocusTrap={[Function]}
                            active={false}
                            focusTrapOptions={
                              Object {
                                "clickOutsideDeactivates": true,
                                "escapeDeactivates": false,
                                "onDeactivate": [Function],
                                "returnFocusOnDeactivate": true,
                              }
                            }
                            paused={false}
                          >
                            <div
                              className="cell-content"
                              style={
                                Object {
                                  "height": undefined,
                                }
                              }
                            >
                              <input
                                aria-label="Terra.dataGrid.row-index"
                                checked={false}
                                className="input"
                                readOnly={true}
                                tabIndex={-1}
                                type="checkbox"
                              />
                            </div>
                          </FocusTrap>
                        </td>
                      </Cell>
                    </InjectIntl(Cell)>
                  </RowSelectionCell>
                </InjectIntl(RowSelectionCell)>
                <InjectIntl(Cell)
                  columnId="Column-0"
                  columnIndex={1}
                  height="2.5rem"
                  isHighlighted={false}
                  isRowHeader={true}
                  isSelected={false}
                  key="2_Column-0"
                  onCellSelect={[Function]}
                  rowId="2"
                  rowIndex={2}
                >
                  <Cell
                    columnId="Column-0"
                    columnIndex={1}
                    height="2.5rem"
                    intl={
                      Object {
                        "defaultFormats": Object {},
                        "defaultLocale": "en",
                        "formatDate": [Function],
                        "formatHTMLMessage": [Function],
                        "formatMessage": [Function],
                        "formatNumber": [Function],
                        "formatPlural": [Function],
                        "formatRelative": [Function],
                        "formatTime": [Function],
                        "formats": Object {},
                        "formatters": Object {
                          "getDateTimeFormat": [Function],
                          "getMessageFormat": [Function],
                          "getNumberFormat": [Function],
                          "getPluralFormat": [Function],
                          "getRelativeFormat": [Function],
                        },
                        "locale": "en",
                        "messages": null,
                        "now": [Function],
                        "onError": [Function],
                        "textComponent": "span",
                        "timeZone": null,
                      }
                    }
                    isHighlighted={false}
                    isMasked={false}
                    isRowHeader={true}
                    isSelectable={true}
                    isSelected={false}
                    onCellSelect={[Function]}
                    rowId="2"
                    rowIndex={2}
                  >
                    <th
                      aria-selected={false}
                      className="cell pinned selectable"
                      onKeyDown={[Function]}
                      onMouseDown={[Function]}
                      role="rowheader"
                      scope="row"
                      style={
                        Object {
                          "left": 40,
                        }
                      }
                      tabIndex={-1}
                    >
                      <FocusTrap
                        _createFocusTrap={[Function]}
                        active={false}
                        focusTrapOptions={
                          Object {
                            "clickOutsideDeactivates": true,
                            "escapeDeactivates": false,
                            "onDeactivate": [Function],
                            "returnFocusOnDeactivate": true,
                          }
                        }
                        paused={false}
                      >
                        <div
                          className="cell-content"
                          style={
                            Object {
                              "height": "2.5rem",
                            }
                          }
                        >
                          Temperature Oral (degC)
                        </div>
                      </FocusTrap>
                    </th>
                  </Cell>
                </InjectIntl(Cell)>
                <InjectIntl(Cell)
                  columnId="Column-1"
                  columnIndex={2}
                  height="2.5rem"
                  isHighlighted={false}
                  isRowHeader={false}
                  isSelected={false}
                  key="2_Column-1"
                  onCellSelect={[Function]}
                  rowId="2"
                  rowIndex={2}
                >
                  <Cell
                    columnId="Column-1"
                    columnIndex={2}
                    height="2.5rem"
                    intl={
                      Object {
                        "defaultFormats": Object {},
                        "defaultLocale": "en",
                        "formatDate": [Function],
                        "formatHTMLMessage": [Function],
                        "formatMessage": [Function],
                        "formatNumber": [Function],
                        "formatPlural": [Function],
                        "formatRelative": [Function],
                        "formatTime": [Function],
                        "formats": Object {},
                        "formatters": Object {
                          "getDateTimeFormat": [Function],
                          "getMessageFormat": [Function],
                          "getNumberFormat": [Function],
                          "getPluralFormat": [Function],
                          "getRelativeFormat": [Function],
                        },
                        "locale": "en",
                        "messages": null,
                        "now": [Function],
                        "onError": [Function],
                        "textComponent": "span",
                        "timeZone": null,
                      }
                    }
                    isHighlighted={false}
                    isMasked={false}
                    isRowHeader={false}
                    isSelectable={true}
                    isSelected={false}
                    onCellSelect={[Function]}
                    rowId="2"
                    rowIndex={2}
                  >
                    <td
                      aria-selected={false}
                      className="cell pinned selectable"
                      onKeyDown={[Function]}
                      onMouseDown={[Function]}
                      style={
                        Object {
                          "left": 240,
                        }
                      }
                      tabIndex={-1}
                    >
                      <FocusTrap
                        _createFocusTrap={[Function]}
                        active={false}
                        focusTrapOptions={
                          Object {
                            "clickOutsideDeactivates": true,
                            "escapeDeactivates": false,
                            "onDeactivate": [Function],
                            "returnFocusOnDeactivate": true,
                          }
                        }
                        paused={false}
                      >
                        <div
                          className="cell-content"
                          style={
                            Object {
                              "height": "2.5rem",
                            }
                          }
                        >
                          36.7
                        </div>
                      </FocusTrap>
                    </td>
                  </Cell>
                </InjectIntl(Cell)>
                <InjectIntl(Cell)
                  columnId="Column-2"
                  columnIndex={3}
                  height="2.5rem"
                  isHighlighted={false}
                  isMasked={true}
                  isRowHeader={false}
                  isSelected={false}
                  key="2_Column-2"
                  onCellSelect={[Function]}
                  rowId="2"
                  rowIndex={2}
                >
                  <Cell
                    columnId="Column-2"
                    columnIndex={3}
                    height="2.5rem"
                    intl={
                      Object {
                        "defaultFormats": Object {},
                        "defaultLocale": "en",
                        "formatDate": [Function],
                        "formatHTMLMessage": [Function],
                        "formatMessage": [Function],
                        "formatNumber": [Function],
                        "formatPlural": [Function],
                        "formatRelative": [Function],
                        "formatTime": [Function],
                        "formats": Object {},
                        "formatters": Object {
                          "getDateTimeFormat": [Function],
                          "getMessageFormat": [Function],
                          "getNumberFormat": [Function],
                          "getPluralFormat": [Function],
                          "getRelativeFormat": [Function],
                        },
                        "locale": "en",
                        "messages": null,
                        "now": [Function],
                        "onError": [Function],
                        "textComponent": "span",
                        "timeZone": null,
                      }
                    }
                    isHighlighted={false}
                    isMasked={true}
                    isRowHeader={false}
                    isSelectable={true}
                    isSelected={false}
                    onCellSelect={[Function]}
                    rowId="2"
                    rowIndex={2}
                  >
                    <td
                      aria-selected={false}
                      className="cell masked"
                      onKeyDown={[Function]}
                      onMouseDown={[Function]}
                      style={
                        Object {
                          "left": null,
                        }
                      }
                      tabIndex={-1}
                    >
                      <FocusTrap
                        _createFocusTrap={[Function]}
                        active={false}
                        focusTrapOptions={
                          Object {
                            "clickOutsideDeactivates": true,
                            "escapeDeactivates": false,
                            "onDeactivate": [Function],
                            "returnFocusOnDeactivate": true,
                          }
                        }
                        paused={false}
                      >
                        <div
                          className="cell-content"
                          style={
                            Object {
                              "height": "2.5rem",
                            }
                          }
                        >
                          <span
                            className="no-data-cell"
                          >
                            Terra.dataGrid.maskedCell
                          </span>
                        </div>
                      </FocusTrap>
                    </td>
                  </Cell>
                </InjectIntl(Cell)>
              </tr>
            </Row>
            <Row
              cells={
                Array [
                  Object {
                    "content": "Cardiac Index (L/min/m2)",
                  },
                  Object {
                    "content": "2.25",
                  },
                  Object {
                    "content": "2.28",
                    "isMasked": true,
                  },
                ]
              }
              displayedColumns={
                Array [
                  Object {
                    "id": "WorklistDataGrid-rowSelectionColumn",
                    "isResizable": false,
                    "isSelectable": true,
                    "width": 40,
                  },
                  Object {
                    "displayName": " Vitals",
                    "id": "Column-0",
                  },
                  Object {
                    "displayName": "March 16",
                    "id": "Column-1",
                  },
                  Object {
                    "displayName": "March 17",
                    "id": "Column-2",
                    "isSelectable": false,
                  },
                ]
              }
              hasRowSelection={true}
              height="2.5rem"
              id="3"
              key="3"
              onCellSelect={[Function]}
              rowHeaderIndex={0}
              rowIndex={3}
            >
              <tr
                className="row selectable"
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                style={
                  Object {
                    "height": "2.5rem",
                  }
                }
              >
                <InjectIntl(RowSelectionCell)
                  columnId="WorklistDataGrid-rowSelectionColumn"
                  columnIndex={0}
                  isSelected={false}
                  onCellSelect={[Function]}
                  rowId="3"
                  rowIndex={3}
                >
                  <RowSelectionCell
                    columnId="WorklistDataGrid-rowSelectionColumn"
                    columnIndex={0}
                    intl={
                      Object {
                        "defaultFormats": Object {},
                        "defaultLocale": "en",
                        "formatDate": [Function],
                        "formatHTMLMessage": [Function],
                        "formatMessage": [Function],
                        "formatNumber": [Function],
                        "formatPlural": [Function],
                        "formatRelative": [Function],
                        "formatTime": [Function],
                        "formats": Object {},
                        "formatters": Object {
                          "getDateTimeFormat": [Function],
                          "getMessageFormat": [Function],
                          "getNumberFormat": [Function],
                          "getPluralFormat": [Function],
                          "getRelativeFormat": [Function],
                        },
                        "locale": "en",
                        "messages": null,
                        "now": [Function],
                        "onError": [Function],
                        "textComponent": "span",
                        "timeZone": null,
                      }
                    }
                    isSelected={false}
                    onCellSelect={[Function]}
                    rowId="3"
                    rowIndex={3}
                  >
                    <InjectIntl(Cell)
                      columnId="WorklistDataGrid-rowSelectionColumn"
                      columnIndex={0}
                      isSelected={false}
                      key="3_WorklistDataGrid-rowSelectionColumn"
                      onCellSelect={[Function]}
                      rowId="3"
                      rowIndex={3}
                    >
                      <Cell
                        columnId="WorklistDataGrid-rowSelectionColumn"
                        columnIndex={0}
                        intl={
                          Object {
                            "defaultFormats": Object {},
                            "defaultLocale": "en",
                            "formatDate": [Function],
                            "formatHTMLMessage": [Function],
                            "formatMessage": [Function],
                            "formatNumber": [Function],
                            "formatPlural": [Function],
                            "formatRelative": [Function],
                            "formatTime": [Function],
                            "formats": Object {},
                            "formatters": Object {
                              "getDateTimeFormat": [Function],
                              "getMessageFormat": [Function],
                              "getNumberFormat": [Function],
                              "getPluralFormat": [Function],
                              "getRelativeFormat": [Function],
                            },
                            "locale": "en",
                            "messages": null,
                            "now": [Function],
                            "onError": [Function],
                            "textComponent": "span",
                            "timeZone": null,
                          }
                        }
                        isMasked={false}
                        isRowHeader={false}
                        isSelectable={true}
                        isSelected={false}
                        onCellSelect={[Function]}
                        rowId="3"
                        rowIndex={3}
                      >
                        <td
                          aria-selected={false}
                          className="cell pinned selectable"
                          onKeyDown={[Function]}
                          onMouseDown={[Function]}
                          style={
                            Object {
                              "left": 0,
                            }
                          }
                          tabIndex={-1}
                        >
                          <FocusTrap
                            _createFocusTrap={[Function]}
                            active={false}
                            focusTrapOptions={
                              Object {
                                "clickOutsideDeactivates": true,
                                "escapeDeactivates": false,
                                "onDeactivate": [Function],
                                "returnFocusOnDeactivate": true,
                              }
                            }
                            paused={false}
                          >
                            <div
                              className="cell-content"
                              style={
                                Object {
                                  "height": undefined,
                                }
                              }
                            >
                              <input
                                aria-label="Terra.dataGrid.row-index"
                                checked={false}
                                className="input"
                                readOnly={true}
                                tabIndex={-1}
                                type="checkbox"
                              />
                            </div>
                          </FocusTrap>
                        </td>
                      </Cell>
                    </InjectIntl(Cell)>
                  </RowSelectionCell>
                </InjectIntl(RowSelectionCell)>
                <InjectIntl(Cell)
                  columnId="Column-0"
                  columnIndex={1}
                  height="2.5rem"
                  isHighlighted={false}
                  isRowHeader={true}
                  isSelected={false}
                  key="3_Column-0"
                  onCellSelect={[Function]}
                  rowId="3"
                  rowIndex={3}
                >
                  <Cell
                    columnId="Column-0"
                    columnIndex={1}
                    height="2.5rem"
                    intl={
                      Object {
                        "defaultFormats": Object {},
                        "defaultLocale": "en",
                        "formatDate": [Function],
                        "formatHTMLMessage": [Function],
                        "formatMessage": [Function],
                        "formatNumber": [Function],
                        "formatPlural": [Function],
                        "formatRelative": [Function],
                        "formatTime": [Function],
                        "formats": Object {},
                        "formatters": Object {
                          "getDateTimeFormat": [Function],
                          "getMessageFormat": [Function],
                          "getNumberFormat": [Function],
                          "getPluralFormat": [Function],
                          "getRelativeFormat": [Function],
                        },
                        "locale": "en",
                        "messages": null,
                        "now": [Function],
                        "onError": [Function],
                        "textComponent": "span",
                        "timeZone": null,
                      }
                    }
                    isHighlighted={false}
                    isMasked={false}
                    isRowHeader={true}
                    isSelectable={true}
                    isSelected={false}
                    onCellSelect={[Function]}
                    rowId="3"
                    rowIndex={3}
                  >
                    <th
                      aria-selected={false}
                      className="cell pinned selectable"
                      onKeyDown={[Function]}
                      onMouseDown={[Function]}
                      role="rowheader"
                      scope="row"
                      style={
                        Object {
                          "left": 40,
                        }
                      }
                      tabIndex={-1}
                    >
                      <FocusTrap
                        _createFocusTrap={[Function]}
                        active={false}
                        focusTrapOptions={
                          Object {
                            "clickOutsideDeactivates": true,
                            "escapeDeactivates": false,
                            "onDeactivate": [Function],
                            "returnFocusOnDeactivate": true,
                          }
                        }
                        paused={false}
                      >
                        <div
                          className="cell-content"
                          style={
                            Object {
                              "height": "2.5rem",
                            }
                          }
                        >
                          Cardiac Index (L/min/m2)
                        </div>
                      </FocusTrap>
                    </th>
                  </Cell>
                </InjectIntl(Cell)>
                <InjectIntl(Cell)
                  columnId="Column-1"
                  columnIndex={2}
                  height="2.5rem"
                  isHighlighted={false}
                  isRowHeader={false}
                  isSelected={false}
                  key="3_Column-1"
                  onCellSelect={[Function]}
                  rowId="3"
                  rowIndex={3}
                >
                  <Cell
                    columnId="Column-1"
                    columnIndex={2}
                    height="2.5rem"
                    intl={
                      Object {
                        "defaultFormats": Object {},
                        "defaultLocale": "en",
                        "formatDate": [Function],
                        "formatHTMLMessage": [Function],
                        "formatMessage": [Function],
                        "formatNumber": [Function],
                        "formatPlural": [Function],
                        "formatRelative": [Function],
                        "formatTime": [Function],
                        "formats": Object {},
                        "formatters": Object {
                          "getDateTimeFormat": [Function],
                          "getMessageFormat": [Function],
                          "getNumberFormat": [Function],
                          "getPluralFormat": [Function],
                          "getRelativeFormat": [Function],
                        },
                        "locale": "en",
                        "messages": null,
                        "now": [Function],
                        "onError": [Function],
                        "textComponent": "span",
                        "timeZone": null,
                      }
                    }
                    isHighlighted={false}
                    isMasked={false}
                    isRowHeader={false}
                    isSelectable={true}
                    isSelected={false}
                    onCellSelect={[Function]}
                    rowId="3"
                    rowIndex={3}
                  >
                    <td
                      aria-selected={false}
                      className="cell pinned selectable"
                      onKeyDown={[Function]}
                      onMouseDown={[Function]}
                      style={
                        Object {
                          "left": 240,
                        }
                      }
                      tabIndex={-1}
                    >
                      <FocusTrap
                        _createFocusTrap={[Function]}
                        active={false}
                        focusTrapOptions={
                          Object {
                            "clickOutsideDeactivates": true,
                            "escapeDeactivates": false,
                            "onDeactivate": [Function],
                            "returnFocusOnDeactivate": true,
                          }
                        }
                        paused={false}
                      >
                        <div
                          className="cell-content"
                          style={
                            Object {
                              "height": "2.5rem",
                            }
                          }
                        >
                          2.25
                        </div>
                      </FocusTrap>
                    </td>
                  </Cell>
                </InjectIntl(Cell)>
                <InjectIntl(Cell)
                  columnId="Column-2"
                  columnIndex={3}
                  height="2.5rem"
                  isHighlighted={false}
                  isMasked={true}
                  isRowHeader={false}
                  isSelected={false}
                  key="3_Column-2"
                  onCellSelect={[Function]}
                  rowId="3"
                  rowIndex={3}
                >
                  <Cell
                    columnId="Column-2"
                    columnIndex={3}
                    height="2.5rem"
                    intl={
                      Object {
                        "defaultFormats": Object {},
                        "defaultLocale": "en",
                        "formatDate": [Function],
                        "formatHTMLMessage": [Function],
                        "formatMessage": [Function],
                        "formatNumber": [Function],
                        "formatPlural": [Function],
                        "formatRelative": [Function],
                        "formatTime": [Function],
                        "formats": Object {},
                        "formatters": Object {
                          "getDateTimeFormat": [Function],
                          "getMessageFormat": [Function],
                          "getNumberFormat": [Function],
                          "getPluralFormat": [Function],
                          "getRelativeFormat": [Function],
                        },
                        "locale": "en",
                        "messages": null,
                        "now": [Function],
                        "onError": [Function],
                        "textComponent": "span",
                        "timeZone": null,
                      }
                    }
                    isHighlighted={false}
                    isMasked={true}
                    isRowHeader={false}
                    isSelectable={true}
                    isSelected={false}
                    onCellSelect={[Function]}
                    rowId="3"
                    rowIndex={3}
                  >
                    <td
                      aria-selected={false}
                      className="cell masked"
                      onKeyDown={[Function]}
                      onMouseDown={[Function]}
                      style={
                        Object {
                          "left": null,
                        }
                      }
                      tabIndex={-1}
                    >
                      <FocusTrap
                        _createFocusTrap={[Function]}
                        active={false}
                        focusTrapOptions={
                          Object {
                            "clickOutsideDeactivates": true,
                            "escapeDeactivates": false,
                            "onDeactivate": [Function],
                            "returnFocusOnDeactivate": true,
                          }
                        }
                        paused={false}
                      >
                        <div
                          className="cell-content"
                          style={
                            Object {
                              "height": "2.5rem",
                            }
                          }
                        >
                          <span
                            className="no-data-cell"
                          >
                            Terra.dataGrid.maskedCell
                          </span>
                        </div>
                      </FocusTrap>
                    </td>
                  </Cell>
                </InjectIntl(Cell)>
              </tr>
            </Row>
            <Row
              cells={
                Array [
                  Object {
                    "content": "Oxygen Flow Rate (L/min)",
                  },
                  Object {
                    "content": "63",
                  },
                  Object {
                    "content": "47",
                  },
                ]
              }
              displayedColumns={
                Array [
                  Object {
                    "id": "WorklistDataGrid-rowSelectionColumn",
                    "isResizable": false,
                    "isSelectable": true,
                    "width": 40,
                  },
                  Object {
                    "displayName": " Vitals",
                    "id": "Column-0",
                  },
                  Object {
                    "displayName": "March 16",
                    "id": "Column-1",
                  },
                  Object {
                    "displayName": "March 17",
                    "id": "Column-2",
                    "isSelectable": false,
                  },
                ]
              }
              hasRowSelection={true}
              height="2.5rem"
              id="4"
              isSelected={true}
              key="4"
              onCellSelect={[Function]}
              rowHeaderIndex={0}
              rowIndex={4}
            >
              <tr
                className="row selected selectable"
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                style={
                  Object {
                    "height": "2.5rem",
                  }
                }
              >
                <InjectIntl(RowSelectionCell)
                  columnId="WorklistDataGrid-rowSelectionColumn"
                  columnIndex={0}
                  isSelected={true}
                  onCellSelect={[Function]}
                  rowId="4"
                  rowIndex={4}
                >
                  <RowSelectionCell
                    columnId="WorklistDataGrid-rowSelectionColumn"
                    columnIndex={0}
                    intl={
                      Object {
                        "defaultFormats": Object {},
                        "defaultLocale": "en",
                        "formatDate": [Function],
                        "formatHTMLMessage": [Function],
                        "formatMessage": [Function],
                        "formatNumber": [Function],
                        "formatPlural": [Function],
                        "formatRelative": [Function],
                        "formatTime": [Function],
                        "formats": Object {},
                        "formatters": Object {
                          "getDateTimeFormat": [Function],
                          "getMessageFormat": [Function],
                          "getNumberFormat": [Function],
                          "getPluralFormat": [Function],
                          "getRelativeFormat": [Function],
                        },
                        "locale": "en",
                        "messages": null,
                        "now": [Function],
                        "onError": [Function],
                        "textComponent": "span",
                        "timeZone": null,
                      }
                    }
                    isSelected={true}
                    onCellSelect={[Function]}
                    rowId="4"
                    rowIndex={4}
                  >
                    <InjectIntl(Cell)
                      columnId="WorklistDataGrid-rowSelectionColumn"
                      columnIndex={0}
                      isSelected={false}
                      key="4_WorklistDataGrid-rowSelectionColumn"
                      onCellSelect={[Function]}
                      rowId="4"
                      rowIndex={4}
                    >
                      <Cell
                        columnId="WorklistDataGrid-rowSelectionColumn"
                        columnIndex={0}
                        intl={
                          Object {
                            "defaultFormats": Object {},
                            "defaultLocale": "en",
                            "formatDate": [Function],
                            "formatHTMLMessage": [Function],
                            "formatMessage": [Function],
                            "formatNumber": [Function],
                            "formatPlural": [Function],
                            "formatRelative": [Function],
                            "formatTime": [Function],
                            "formats": Object {},
                            "formatters": Object {
                              "getDateTimeFormat": [Function],
                              "getMessageFormat": [Function],
                              "getNumberFormat": [Function],
                              "getPluralFormat": [Function],
                              "getRelativeFormat": [Function],
                            },
                            "locale": "en",
                            "messages": null,
                            "now": [Function],
                            "onError": [Function],
                            "textComponent": "span",
                            "timeZone": null,
                          }
                        }
                        isMasked={false}
                        isRowHeader={false}
                        isSelectable={true}
                        isSelected={false}
                        onCellSelect={[Function]}
                        rowId="4"
                        rowIndex={4}
                      >
                        <td
                          aria-selected={false}
                          className="cell pinned selectable"
                          onKeyDown={[Function]}
                          onMouseDown={[Function]}
                          style={
                            Object {
                              "left": 0,
                            }
                          }
                          tabIndex={-1}
                        >
                          <FocusTrap
                            _createFocusTrap={[Function]}
                            active={false}
                            focusTrapOptions={
                              Object {
                                "clickOutsideDeactivates": true,
                                "escapeDeactivates": false,
                                "onDeactivate": [Function],
                                "returnFocusOnDeactivate": true,
                              }
                            }
                            paused={false}
                          >
                            <div
                              className="cell-content"
                              style={
                                Object {
                                  "height": undefined,
                                }
                              }
                            >
                              <input
                                aria-label="Terra.dataGrid.row-index"
                                checked={true}
                                className="input"
                                readOnly={true}
                                tabIndex={-1}
                                type="checkbox"
                              />
                            </div>
                          </FocusTrap>
                        </td>
                      </Cell>
                    </InjectIntl(Cell)>
                  </RowSelectionCell>
                </InjectIntl(RowSelectionCell)>
                <InjectIntl(Cell)
                  columnId="Column-0"
                  columnIndex={1}
                  height="2.5rem"
                  isHighlighted={true}
                  isRowHeader={true}
                  isSelected={false}
                  key="4_Column-0"
                  onCellSelect={[Function]}
                  rowId="4"
                  rowIndex={4}
                >
                  <Cell
                    columnId="Column-0"
                    columnIndex={1}
                    height="2.5rem"
                    intl={
                      Object {
                        "defaultFormats": Object {},
                        "defaultLocale": "en",
                        "formatDate": [Function],
                        "formatHTMLMessage": [Function],
                        "formatMessage": [Function],
                        "formatNumber": [Function],
                        "formatPlural": [Function],
                        "formatRelative": [Function],
                        "formatTime": [Function],
                        "formats": Object {},
                        "formatters": Object {
                          "getDateTimeFormat": [Function],
                          "getMessageFormat": [Function],
                          "getNumberFormat": [Function],
                          "getPluralFormat": [Function],
                          "getRelativeFormat": [Function],
                        },
                        "locale": "en",
                        "messages": null,
                        "now": [Function],
                        "onError": [Function],
                        "textComponent": "span",
                        "timeZone": null,
                      }
                    }
                    isHighlighted={true}
                    isMasked={false}
                    isRowHeader={true}
                    isSelectable={true}
                    isSelected={false}
                    onCellSelect={[Function]}
                    rowId="4"
                    rowIndex={4}
                  >
                    <th
                      aria-selected={false}
                      className="cell pinned selectable highlighted"
                      onKeyDown={[Function]}
                      onMouseDown={[Function]}
                      role="rowheader"
                      scope="row"
                      style={
                        Object {
                          "left": 40,
                        }
                      }
                      tabIndex={-1}
                    >
                      <FocusTrap
                        _createFocusTrap={[Function]}
                        active={false}
                        focusTrapOptions={
                          Object {
                            "clickOutsideDeactivates": true,
                            "escapeDeactivates": false,
                            "onDeactivate": [Function],
                            "returnFocusOnDeactivate": true,
                          }
                        }
                        paused={false}
                      >
                        <div
                          className="cell-content"
                          style={
                            Object {
                              "height": "2.5rem",
                            }
                          }
                        >
                          Oxygen Flow Rate (L/min)
                        </div>
                      </FocusTrap>
                    </th>
                  </Cell>
                </InjectIntl(Cell)>
                <InjectIntl(Cell)
                  columnId="Column-1"
                  columnIndex={2}
                  height="2.5rem"
                  isHighlighted={true}
                  isRowHeader={false}
                  isSelected={false}
                  key="4_Column-1"
                  onCellSelect={[Function]}
                  rowId="4"
                  rowIndex={4}
                >
                  <Cell
                    columnId="Column-1"
                    columnIndex={2}
                    height="2.5rem"
                    intl={
                      Object {
                        "defaultFormats": Object {},
                        "defaultLocale": "en",
                        "formatDate": [Function],
                        "formatHTMLMessage": [Function],
                        "formatMessage": [Function],
                        "formatNumber": [Function],
                        "formatPlural": [Function],
                        "formatRelative": [Function],
                        "formatTime": [Function],
                        "formats": Object {},
                        "formatters": Object {
                          "getDateTimeFormat": [Function],
                          "getMessageFormat": [Function],
                          "getNumberFormat": [Function],
                          "getPluralFormat": [Function],
                          "getRelativeFormat": [Function],
                        },
                        "locale": "en",
                        "messages": null,
                        "now": [Function],
                        "onError": [Function],
                        "textComponent": "span",
                        "timeZone": null,
                      }
                    }
                    isHighlighted={true}
                    isMasked={false}
                    isRowHeader={false}
                    isSelectable={true}
                    isSelected={false}
                    onCellSelect={[Function]}
                    rowId="4"
                    rowIndex={4}
                  >
                    <td
                      aria-selected={false}
                      className="cell pinned selectable highlighted"
                      onKeyDown={[Function]}
                      onMouseDown={[Function]}
                      style={
                        Object {
                          "left": 240,
                        }
                      }
                      tabIndex={-1}
                    >
                      <FocusTrap
                        _createFocusTrap={[Function]}
                        active={false}
                        focusTrapOptions={
                          Object {
                            "clickOutsideDeactivates": true,
                            "escapeDeactivates": false,
                            "onDeactivate": [Function],
                            "returnFocusOnDeactivate": true,
                          }
                        }
                        paused={false}
                      >
                        <div
                          className="cell-content"
                          style={
                            Object {
                              "height": "2.5rem",
                            }
                          }
                        >
                          63
                        </div>
                      </FocusTrap>
                    </td>
                  </Cell>
                </InjectIntl(Cell)>
                <InjectIntl(Cell)
                  columnId="Column-2"
                  columnIndex={3}
                  height="2.5rem"
                  isHighlighted={true}
                  isRowHeader={false}
                  isSelected={false}
                  key="4_Column-2"
                  onCellSelect={[Function]}
                  rowId="4"
                  rowIndex={4}
                >
                  <Cell
                    columnId="Column-2"
                    columnIndex={3}
                    height="2.5rem"
                    intl={
                      Object {
                        "defaultFormats": Object {},
                        "defaultLocale": "en",
                        "formatDate": [Function],
                        "formatHTMLMessage": [Function],
                        "formatMessage": [Function],
                        "formatNumber": [Function],
                        "formatPlural": [Function],
                        "formatRelative": [Function],
                        "formatTime": [Function],
                        "formats": Object {},
                        "formatters": Object {
                          "getDateTimeFormat": [Function],
                          "getMessageFormat": [Function],
                          "getNumberFormat": [Function],
                          "getPluralFormat": [Function],
                          "getRelativeFormat": [Function],
                        },
                        "locale": "en",
                        "messages": null,
                        "now": [Function],
                        "onError": [Function],
                        "textComponent": "span",
                        "timeZone": null,
                      }
                    }
                    isHighlighted={true}
                    isMasked={false}
                    isRowHeader={false}
                    isSelectable={true}
                    isSelected={false}
                    onCellSelect={[Function]}
                    rowId="4"
                    rowIndex={4}
                  >
                    <td
                      aria-selected={false}
                      className="cell selectable highlighted"
                      onKeyDown={[Function]}
                      onMouseDown={[Function]}
                      style={
                        Object {
                          "left": null,
                        }
                      }
                      tabIndex={-1}
                    >
                      <FocusTrap
                        _createFocusTrap={[Function]}
                        active={false}
                        focusTrapOptions={
                          Object {
                            "clickOutsideDeactivates": true,
                            "escapeDeactivates": false,
                            "onDeactivate": [Function],
                            "returnFocusOnDeactivate": true,
                          }
                        }
                        paused={false}
                      >
                        <div
                          className="cell-content"
                          style={
                            Object {
                              "height": "2.5rem",
                            }
                          }
                        >
                          47
                        </div>
                      </FocusTrap>
                    </td>
                  </Cell>
                </InjectIntl(Cell)>
              </tr>
            </Row>
          </tbody>
        </table>
        <VisuallyHiddenText
          aria-atomic="true"
          aria-live="polite"
<<<<<<< HEAD
          text={null}
        >
          <span
            aria-atomic="true"
            aria-live="polite"
            className="visually-hidden-text"
          />
        </VisuallyHiddenText>
      </div>
    </Component>
  </InjectIntl(Component)>
</ForwardRef>
=======
          className="visually-hidden-text"
        />
      </VisuallyHiddenText>
      <VisuallyHiddenText
        aria-atomic="true"
        aria-live="polite"
        text={null}
      >
        <span
          aria-atomic="true"
          aria-live="polite"
          className="visually-hidden-text"
        />
      </VisuallyHiddenText>
    </div>
  </DataGrid>
</InjectIntl(DataGrid)>
>>>>>>> f0c547b77 (Copy the Jest updates)
`;

exports[`DataGrid verifies that the grid created is consistent with the rows and overflowColumns props 1`] = `
<div
  className="data-grid-container"
>
  <table
    className="data-grid"
    id="test-terra-data-grid"
    onFocus={[Function]}
    onKeyDown={[Function]}
    onMouseDown={[Function]}
    role="grid"
    tabIndex={0}
  >
    <ContextProvider
      value={
        Object {
          "pinnedColumnOffsets": Array [
            0,
          ],
          "setCellAriaLiveMessage": [Function],
          "setColumnHeaderAriaLiveMessage": [Function],
        }
      }
    >
      <Memo(ColumnHeader)
        activeColumnIndex={0}
        activeColumnResizing={false}
        columns={
          Array [
            Object {
              "displayName": " Vitals",
              "id": "Column-0",
              "maximumWidth": 300,
              "minimumWidth": 60,
              "width": 200,
            },
            Object {
              "displayName": "March 16",
              "id": "Column-1",
              "maximumWidth": 300,
              "minimumWidth": 60,
              "width": 200,
            },
            Object {
              "displayName": "March 17",
              "id": "Column-2",
              "isSelectable": false,
              "maximumWidth": 300,
              "minimumWidth": 60,
              "width": 200,
            },
          ]
        }
        headerHeight="2.5rem"
        onColumnSelect={[Function]}
        onResizeHandleChange={[Function]}
        onResizeMouseDown={[Function]}
        tableHeight={0}
      />
      <tbody>
        <Memo(Row)
          cells={
            Array [
              Object {
                "content": "Heart Rate Monitored (bpm)",
                "isSelectable": false,
              },
              Object {
                "content": "",
              },
              Object {
                "content": "66",
                "isMasked": true,
              },
            ]
          }
          displayedColumns={
            Array [
              Object {
                "displayName": " Vitals",
                "id": "Column-0",
              },
              Object {
                "displayName": "March 16",
                "id": "Column-1",
              },
              Object {
                "displayName": "March 17",
                "id": "Column-2",
                "isSelectable": false,
              },
            ]
          }
          height="2.5rem"
          id="1"
          key="1"
          onCellSelect={[Function]}
          rowHeaderIndex={0}
          rowIndex={1}
        />
        <Memo(Row)
          cells={
            Array [
              Object {
                "content": "Temperature Oral (degC)",
              },
              Object {
                "content": "36.7",
              },
              Object {
                "content": "36.9",
                "isMasked": true,
              },
            ]
          }
          displayedColumns={
            Array [
              Object {
                "displayName": " Vitals",
                "id": "Column-0",
              },
              Object {
                "displayName": "March 16",
                "id": "Column-1",
              },
              Object {
                "displayName": "March 17",
                "id": "Column-2",
                "isSelectable": false,
              },
            ]
          }
          height="2.5rem"
          id="2"
          key="2"
          onCellSelect={[Function]}
          rowHeaderIndex={0}
          rowIndex={2}
        />
        <Memo(Row)
          cells={
            Array [
              Object {
                "content": "Cardiac Index (L/min/m2)",
              },
              Object {
                "content": "2.25",
              },
              Object {
                "content": "2.28",
                "isMasked": true,
              },
            ]
          }
          displayedColumns={
            Array [
              Object {
                "displayName": " Vitals",
                "id": "Column-0",
              },
              Object {
                "displayName": "March 16",
                "id": "Column-1",
              },
              Object {
                "displayName": "March 17",
                "id": "Column-2",
                "isSelectable": false,
              },
            ]
          }
          height="2.5rem"
          id="3"
          key="3"
          onCellSelect={[Function]}
          rowHeaderIndex={0}
          rowIndex={3}
        />
        <Memo(Row)
          cells={
            Array [
              Object {
                "content": "Oxygen Flow Rate (L/min)",
              },
              Object {
                "content": "63",
              },
              Object {
                "content": "47",
              },
            ]
          }
          displayedColumns={
            Array [
              Object {
                "displayName": " Vitals",
                "id": "Column-0",
              },
              Object {
                "displayName": "March 16",
                "id": "Column-1",
              },
              Object {
                "displayName": "March 17",
                "id": "Column-2",
                "isSelectable": false,
              },
            ]
          }
          height="2.5rem"
          id="4"
          isSelected={true}
          key="4"
          onCellSelect={[Function]}
          rowHeaderIndex={0}
          rowIndex={4}
        />
      </tbody>
    </ContextProvider>
  </table>
  <VisuallyHiddenText
    aria-atomic="true"
    aria-live="polite"
    text={null}
  />
  <VisuallyHiddenText
    aria-atomic="true"
    aria-live="polite"
    text={null}
  />
</div>
`;

exports[`DataGrid verifies the rows are created with the right props 1`] = `
<div
  className="data-grid-container"
>
  <table
    className="data-grid"
    id="test-terra-data-grid"
    onFocus={[Function]}
    onKeyDown={[Function]}
    onMouseDown={[Function]}
    role="grid"
    tabIndex={0}
  >
    <ContextProvider
      value={
        Object {
          "pinnedColumnOffsets": Array [
            0,
          ],
          "setCellAriaLiveMessage": [Function],
          "setColumnHeaderAriaLiveMessage": [Function],
        }
      }
    >
      <Memo(ColumnHeader)
        activeColumnIndex={0}
        activeColumnResizing={false}
        columns={
          Array [
            Object {
              "displayName": " Vitals",
              "id": "Column-0",
              "maximumWidth": 300,
              "minimumWidth": 60,
              "width": 200,
            },
            Object {
              "displayName": "March 16",
              "id": "Column-1",
              "maximumWidth": 300,
              "minimumWidth": 60,
              "width": 200,
            },
            Object {
              "displayName": "March 17",
              "id": "Column-2",
              "isSelectable": false,
              "maximumWidth": 300,
              "minimumWidth": 60,
              "width": 200,
            },
          ]
        }
        headerHeight="2.5rem"
        onColumnSelect={[Function]}
        onResizeHandleChange={[Function]}
        onResizeMouseDown={[Function]}
        tableHeight={0}
      />
      <tbody>
        <Memo(Row)
          cells={
            Array [
              Object {
                "content": "Heart Rate Monitored (bpm)",
                "isSelectable": false,
              },
              Object {
                "content": "",
              },
              Object {
                "content": "66",
                "isMasked": true,
              },
            ]
          }
          displayedColumns={
            Array [
              Object {
                "displayName": " Vitals",
                "id": "Column-0",
              },
              Object {
                "displayName": "March 16",
                "id": "Column-1",
              },
              Object {
                "displayName": "March 17",
                "id": "Column-2",
                "isSelectable": false,
              },
            ]
          }
          height="2.5rem"
          id="1"
          key="1"
          onCellSelect={[Function]}
          rowHeaderIndex={0}
          rowIndex={1}
        />
        <Memo(Row)
          cells={
            Array [
              Object {
                "content": "Temperature Oral (degC)",
              },
              Object {
                "content": "36.7",
              },
              Object {
                "content": "36.9",
                "isMasked": true,
              },
            ]
          }
          displayedColumns={
            Array [
              Object {
                "displayName": " Vitals",
                "id": "Column-0",
              },
              Object {
                "displayName": "March 16",
                "id": "Column-1",
              },
              Object {
                "displayName": "March 17",
                "id": "Column-2",
                "isSelectable": false,
              },
            ]
          }
          height="2.5rem"
          id="2"
          key="2"
          onCellSelect={[Function]}
          rowHeaderIndex={0}
          rowIndex={2}
        />
        <Memo(Row)
          cells={
            Array [
              Object {
                "content": "Cardiac Index (L/min/m2)",
              },
              Object {
                "content": "2.25",
              },
              Object {
                "content": "2.28",
                "isMasked": true,
              },
            ]
          }
          displayedColumns={
            Array [
              Object {
                "displayName": " Vitals",
                "id": "Column-0",
              },
              Object {
                "displayName": "March 16",
                "id": "Column-1",
              },
              Object {
                "displayName": "March 17",
                "id": "Column-2",
                "isSelectable": false,
              },
            ]
          }
          height="2.5rem"
          id="3"
          key="3"
          onCellSelect={[Function]}
          rowHeaderIndex={0}
          rowIndex={3}
        />
        <Memo(Row)
          cells={
            Array [
              Object {
                "content": "Oxygen Flow Rate (L/min)",
              },
              Object {
                "content": "63",
              },
              Object {
                "content": "47",
              },
            ]
          }
          displayedColumns={
            Array [
              Object {
                "displayName": " Vitals",
                "id": "Column-0",
              },
              Object {
                "displayName": "March 16",
                "id": "Column-1",
              },
              Object {
                "displayName": "March 17",
                "id": "Column-2",
                "isSelectable": false,
              },
            ]
          }
          height="2.5rem"
          id="4"
          isSelected={true}
          key="4"
          onCellSelect={[Function]}
          rowHeaderIndex={0}
          rowIndex={4}
        />
      </tbody>
    </ContextProvider>
  </table>
  <VisuallyHiddenText
    aria-atomic="true"
    aria-live="polite"
    text={null}
  />
  <VisuallyHiddenText
    aria-atomic="true"
    aria-live="polite"
    text={null}
  />
</div>
`;
