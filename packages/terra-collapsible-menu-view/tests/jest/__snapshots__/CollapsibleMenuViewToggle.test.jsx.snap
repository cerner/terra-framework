// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`CollapsibleMenuViewToggle Collapsible Menu Context should render a selectable menu item 1`] = `
<MenuItem
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": null,
      "now": [Function],
      "onError": [Function],
      "textComponent": "span",
      "timeZone": null,
    }
  }
  isActive={false}
  isDisabled={false}
  isSelectable={true}
  isSelected={false}
  subMenuItems={Array []}
  text="Testing"
/>
`;

exports[`CollapsibleMenuViewToggle Collapsible Menu Context should set isDisabled prop on menu item 1`] = `
<MenuItem
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": null,
      "now": [Function],
      "onError": [Function],
      "textComponent": "span",
      "timeZone": null,
    }
  }
  isActive={false}
  isDisabled={true}
  isSelectable={true}
  isSelected={false}
  subMenuItems={Array []}
  text="Testing"
/>
`;

exports[`CollapsibleMenuViewToggle Collapsible Menu Context should set isSelectable prop on menu item to false 1`] = `
<MenuItem
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": null,
      "now": [Function],
      "onError": [Function],
      "textComponent": "span",
      "timeZone": null,
    }
  }
  isActive={false}
  isDisabled={false}
  isSelectable={false}
  isSelected={false}
  subMenuItems={Array []}
  text="Testing"
/>
`;

exports[`CollapsibleMenuViewToggle Collapsible Menu Context should set selected prop on menu item 1`] = `
<MenuItem
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": null,
      "now": [Function],
      "onError": [Function],
      "textComponent": "span",
      "timeZone": null,
    }
  }
  isActive={false}
  isDisabled={false}
  isSelectable={true}
  isSelected={true}
  subMenuItems={Array []}
  text="Testing"
/>
`;

exports[`CollapsibleMenuViewToggle should disable checkbox when isSelectable is false 1`] = `
<div
  className="face-up-item"
>
  <Control
    className="control is-disabled"
    defaultChecked={false}
    inputAttrs={
      Object {
        "disabled": true,
      }
    }
    intl={
      Object {
        "defaultFormats": Object {},
        "defaultLocale": "en",
        "formatDate": [Function],
        "formatHTMLMessage": [Function],
        "formatMessage": [Function],
        "formatNumber": [Function],
        "formatPlural": [Function],
        "formatRelative": [Function],
        "formatTime": [Function],
        "formats": Object {},
        "formatters": Object {
          "getDateTimeFormat": [Function],
          "getMessageFormat": [Function],
          "getNumberFormat": [Function],
          "getPluralFormat": [Function],
          "getRelativeFormat": [Function],
        },
        "locale": "en",
        "messages": null,
        "now": [Function],
        "onError": [Function],
        "textComponent": "span",
        "timeZone": null,
      }
    }
    isInline={false}
    labelText="Testing"
    labelTextAttrs={Object {}}
    name={null}
    onChange={[Function]}
    type="checkbox"
  />
</div>
`;

exports[`CollapsibleMenuViewToggle should merge custom props 1`] = `
<div
  className="face-up-item"
>
  <Control
    className="control Testing"
    defaultChecked={false}
    inputAttrs={
      Object {
        "disabled": false,
      }
    }
    intl={
      Object {
        "defaultFormats": Object {},
        "defaultLocale": "en",
        "formatDate": [Function],
        "formatHTMLMessage": [Function],
        "formatMessage": [Function],
        "formatNumber": [Function],
        "formatPlural": [Function],
        "formatRelative": [Function],
        "formatTime": [Function],
        "formats": Object {},
        "formatters": Object {
          "getDateTimeFormat": [Function],
          "getMessageFormat": [Function],
          "getNumberFormat": [Function],
          "getPluralFormat": [Function],
          "getRelativeFormat": [Function],
        },
        "locale": "en",
        "messages": null,
        "now": [Function],
        "onError": [Function],
        "textComponent": "span",
        "timeZone": null,
      }
    }
    isInline={false}
    labelText="Testing"
    labelTextAttrs={Object {}}
    name={null}
    onChange={[Function]}
    type="checkbox"
  />
</div>
`;

exports[`CollapsibleMenuViewToggle should render a default component 1`] = `
<div
  className="face-up-item"
>
  <Control
    className="control"
    defaultChecked={false}
    inputAttrs={
      Object {
        "disabled": false,
      }
    }
    intl={
      Object {
        "defaultFormats": Object {},
        "defaultLocale": "en",
        "formatDate": [Function],
        "formatHTMLMessage": [Function],
        "formatMessage": [Function],
        "formatNumber": [Function],
        "formatPlural": [Function],
        "formatRelative": [Function],
        "formatTime": [Function],
        "formats": Object {},
        "formatters": Object {
          "getDateTimeFormat": [Function],
          "getMessageFormat": [Function],
          "getNumberFormat": [Function],
          "getPluralFormat": [Function],
          "getRelativeFormat": [Function],
        },
        "locale": "en",
        "messages": null,
        "now": [Function],
        "onError": [Function],
        "textComponent": "span",
        "timeZone": null,
      }
    }
    isInline={false}
    labelText="Testing"
    labelTextAttrs={Object {}}
    name={null}
    onChange={[Function]}
    type="checkbox"
  />
</div>
`;

exports[`CollapsibleMenuViewToggle should set defaultChecked prop 1`] = `
<div
  className="face-up-item"
>
  <Control
    className="control"
    defaultChecked={true}
    inputAttrs={
      Object {
        "disabled": false,
      }
    }
    intl={
      Object {
        "defaultFormats": Object {},
        "defaultLocale": "en",
        "formatDate": [Function],
        "formatHTMLMessage": [Function],
        "formatMessage": [Function],
        "formatNumber": [Function],
        "formatPlural": [Function],
        "formatRelative": [Function],
        "formatTime": [Function],
        "formats": Object {},
        "formatters": Object {
          "getDateTimeFormat": [Function],
          "getMessageFormat": [Function],
          "getNumberFormat": [Function],
          "getPluralFormat": [Function],
          "getRelativeFormat": [Function],
        },
        "locale": "en",
        "messages": null,
        "now": [Function],
        "onError": [Function],
        "textComponent": "span",
        "timeZone": null,
      }
    }
    isInline={false}
    labelText="Testing"
    labelTextAttrs={Object {}}
    name={null}
    onChange={[Function]}
    type="checkbox"
  />
</div>
`;

exports[`CollapsibleMenuViewToggle should set isDisabled prop 1`] = `
<div
  className="face-up-item"
>
  <Control
    className="control is-disabled"
    defaultChecked={false}
    inputAttrs={
      Object {
        "disabled": true,
      }
    }
    intl={
      Object {
        "defaultFormats": Object {},
        "defaultLocale": "en",
        "formatDate": [Function],
        "formatHTMLMessage": [Function],
        "formatMessage": [Function],
        "formatNumber": [Function],
        "formatPlural": [Function],
        "formatRelative": [Function],
        "formatTime": [Function],
        "formats": Object {},
        "formatters": Object {
          "getDateTimeFormat": [Function],
          "getMessageFormat": [Function],
          "getNumberFormat": [Function],
          "getPluralFormat": [Function],
          "getRelativeFormat": [Function],
        },
        "locale": "en",
        "messages": null,
        "now": [Function],
        "onError": [Function],
        "textComponent": "span",
        "timeZone": null,
      }
    }
    isInline={false}
    labelText="Testing"
    labelTextAttrs={Object {}}
    name={null}
    onChange={[Function]}
    type="checkbox"
  />
</div>
`;
