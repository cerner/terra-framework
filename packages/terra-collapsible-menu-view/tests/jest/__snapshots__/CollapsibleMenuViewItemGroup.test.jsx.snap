// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`CollapsibleMenuViewItemGroup Collapsible Menu Context should merge custom props 1`] = `
<li
  role="none"
>
  <div
    className="Testing"
    intl={
      {
        "defaultFormats": {},
        "defaultLocale": "en",
        "formatDate": [Function],
        "formatHTMLMessage": [Function],
        "formatMessage": [Function],
        "formatNumber": [Function],
        "formatPlural": [Function],
        "formatRelative": [Function],
        "formatTime": [Function],
        "formats": {},
        "formatters": {
          "getDateTimeFormat": [Function],
          "getMessageFormat": [Function],
          "getNumberFormat": [Function],
          "getPluralFormat": [Function],
          "getRelativeFormat": [Function],
        },
        "locale": "en",
        "messages": null,
        "now": [Function],
        "onError": [Function],
        "textComponent": "span",
        "timeZone": null,
      }
    }
    role="group"
  >
    <CollapsibleMenuViewItem
      isIconOnly={false}
      isReversed={false}
      isSelected={false}
      isTextOnly={false}
      shouldCloseOnClick={true}
      text="Testing"
    />
    <CollapsibleMenuViewItem
      isIconOnly={false}
      isReversed={false}
      isSelected={false}
      isTextOnly={false}
      shouldCloseOnClick={true}
      text="Testing"
    />
  </div>
</li>
`;

exports[`CollapsibleMenuViewItemGroup Collapsible Menu Context should merge custom props when selectable 1`] = `
<li
  role="none"
>
  <div
    className="Testing"
    intl={
      {
        "defaultFormats": {},
        "defaultLocale": "en",
        "formatDate": [Function],
        "formatHTMLMessage": [Function],
        "formatMessage": [Function],
        "formatNumber": [Function],
        "formatPlural": [Function],
        "formatRelative": [Function],
        "formatTime": [Function],
        "formats": {},
        "formatters": {
          "getDateTimeFormat": [Function],
          "getMessageFormat": [Function],
          "getNumberFormat": [Function],
          "getPluralFormat": [Function],
          "getRelativeFormat": [Function],
        },
        "locale": "en",
        "messages": null,
        "now": [Function],
        "onError": [Function],
        "textComponent": "span",
        "timeZone": null,
      }
    }
    role="group"
  >
    <CollapsibleMenuViewItem
      isIconOnly={false}
      isReversed={false}
      isSelected={false}
      isTextOnly={false}
      key="key1"
      shouldCloseOnClick={true}
      text="Testing"
    />
    <CollapsibleMenuViewItem
      isIconOnly={false}
      isReversed={false}
      isSelected={false}
      isTextOnly={false}
      key="key2"
      shouldCloseOnClick={true}
      text="Testing"
    />
  </div>
</li>
`;

exports[`CollapsibleMenuViewItemGroup Collapsible Menu Context should render a menu item group when selectable 1`] = `
<li
  role="none"
>
  <div
    intl={
      {
        "defaultFormats": {},
        "defaultLocale": "en",
        "formatDate": [Function],
        "formatHTMLMessage": [Function],
        "formatMessage": [Function],
        "formatNumber": [Function],
        "formatPlural": [Function],
        "formatRelative": [Function],
        "formatTime": [Function],
        "formats": {},
        "formatters": {
          "getDateTimeFormat": [Function],
          "getMessageFormat": [Function],
          "getNumberFormat": [Function],
          "getPluralFormat": [Function],
          "getRelativeFormat": [Function],
        },
        "locale": "en",
        "messages": null,
        "now": [Function],
        "onError": [Function],
        "textComponent": "span",
        "timeZone": null,
      }
    }
    role="group"
  >
    <CollapsibleMenuViewItem
      isIconOnly={false}
      isReversed={false}
      isSelected={false}
      isTextOnly={false}
      key="key1"
      shouldCloseOnClick={true}
      text="Testing"
    />
    <CollapsibleMenuViewItem
      isIconOnly={false}
      isReversed={false}
      isSelected={false}
      isTextOnly={false}
      key="key2"
      shouldCloseOnClick={true}
      text="Testing"
    />
  </div>
</li>
`;

exports[`CollapsibleMenuViewItemGroup Collapsible Menu Context should render menu items when selectedKeys is not set 1`] = `
<li
  role="none"
>
  <div
    intl={
      {
        "defaultFormats": {},
        "defaultLocale": "en",
        "formatDate": [Function],
        "formatHTMLMessage": [Function],
        "formatMessage": [Function],
        "formatNumber": [Function],
        "formatPlural": [Function],
        "formatRelative": [Function],
        "formatTime": [Function],
        "formats": {},
        "formatters": {
          "getDateTimeFormat": [Function],
          "getMessageFormat": [Function],
          "getNumberFormat": [Function],
          "getPluralFormat": [Function],
          "getRelativeFormat": [Function],
        },
        "locale": "en",
        "messages": null,
        "now": [Function],
        "onError": [Function],
        "textComponent": "span",
        "timeZone": null,
      }
    }
    role="group"
  >
    <CollapsibleMenuViewItem
      isIconOnly={false}
      isReversed={false}
      isSelected={false}
      isTextOnly={false}
      shouldCloseOnClick={true}
      text="Testing"
    />
    <CollapsibleMenuViewItem
      isIconOnly={false}
      isReversed={false}
      isSelected={false}
      isTextOnly={false}
      shouldCloseOnClick={true}
      text="Testing"
    />
  </div>
</li>
`;

exports[`CollapsibleMenuViewItemGroup should merge custom props 1`] = `
<ButtonGroup
  className="face-up-item Testing"
  intl={
    {
      "defaultFormats": {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": {},
      "formatters": {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": null,
      "now": [Function],
      "onError": [Function],
      "textComponent": "span",
      "timeZone": null,
    }
  }
  isBlock={false}
  isMultiSelect={false}
  selectedKeys={[]}
>
  <CollapsibleMenuViewItem
    isIconOnly={false}
    isReversed={false}
    isSelected={false}
    isTextOnly={false}
    shouldCloseOnClick={true}
    text="Testing"
  />
  <CollapsibleMenuViewItem
    isIconOnly={false}
    isReversed={false}
    isSelected={false}
    isTextOnly={false}
    shouldCloseOnClick={true}
    text="Testing"
  />
</ButtonGroup>
`;

exports[`CollapsibleMenuViewItemGroup should render a default component 1`] = `
<ButtonGroup
  className="face-up-item"
  intl={
    {
      "defaultFormats": {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": {},
      "formatters": {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": null,
      "now": [Function],
      "onError": [Function],
      "textComponent": "span",
      "timeZone": null,
    }
  }
  isBlock={false}
  isMultiSelect={false}
  selectedKeys={[]}
>
  <CollapsibleMenuViewItem
    isIconOnly={false}
    isReversed={false}
    isSelected={false}
    isTextOnly={false}
    shouldCloseOnClick={true}
    text="Testing"
  />
  <CollapsibleMenuViewItem
    isIconOnly={false}
    isReversed={false}
    isSelected={false}
    isTextOnly={false}
    shouldCloseOnClick={true}
    text="Testing"
  />
</ButtonGroup>
`;

exports[`CollapsibleMenuViewItemGroup should render a selectable button group 1`] = `
<ButtonGroup
  className="face-up-item"
  intl={
    {
      "defaultFormats": {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": {},
      "formatters": {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": null,
      "now": [Function],
      "onError": [Function],
      "textComponent": "span",
      "timeZone": null,
    }
  }
  isBlock={false}
  isMultiSelect={false}
  selectedKeys={
    [
      "key1",
    ]
  }
>
  <CollapsibleMenuViewItem
    isIconOnly={false}
    isReversed={false}
    isSelected={false}
    isTextOnly={false}
    key="key1"
    shouldCloseOnClick={true}
    text="Testing"
  />
  <CollapsibleMenuViewItem
    isIconOnly={false}
    isReversed={false}
    isSelected={false}
    isTextOnly={false}
    key="key2"
    shouldCloseOnClick={true}
    text="Testing"
  />
</ButtonGroup>
`;
