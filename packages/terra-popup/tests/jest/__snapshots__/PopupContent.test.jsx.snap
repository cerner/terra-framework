// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`PopupContent Prop Tests with default props matches the snapshot 1`] = `
<FocusTrap
  _createFocusTrap={[Function]}
  active={true}
  focusTrapOptions={
    Object {
      "clickOutsideDeactivates": true,
      "returnFocusOnDeactivate": true,
    }
  }
  paused={false}
  tag="div"
>
  <OnClickOutside(HookshotContent)
    className="content"
    data-terra-popup-content={true}
    eventTypes={
      Array [
        "mousedown",
        "touchstart",
      ]
    }
    excludeScrollbar={false}
    onEsc={[MockFunction]}
    onResize={[Function]}
    outsideClickIgnoreClass="ignore-react-onclickoutside"
    preventDefault={false}
    role="dialog"
    stopPropagation={false}
    tabIndex="0"
  >
    <div
      className="inner"
      style={
        Object {
          "height": "640px",
          "width": "640px",
        }
      }
    >
      <div
        key=".0"
      >
        children node(s)
      </div>
    </div>
  </OnClickOutside(HookshotContent)>
</FocusTrap>
`;

exports[`PopupContent Prop Tests with header matches the mount snapshot 1`] = `
<PopupContent
  classNameInner={null}
  contentHeight={640}
  contentHeightMax={640}
  contentWidth={640}
  contentWidthMax={640}
  isFocusedDisabled={false}
  isHeaderDisabled={false}
  isHeightAutomatic={false}
  isWidthAutomatic={false}
  onRequestClose={[MockFunction]}
  onResize={[MockFunction]}
  refCallback={
    [MockFunction] {
      "calls": Array [
        Array [
          <div
            class="content content"
            data-terra-popup-content="true"
            role="dialog"
            tabindex="0"
          >
            <div
              class="inner is-full-screen"
              style="height: 640px; width: 640px;"
            >
              <div
                class="content-container-fill"
              >
                <div
                  class="header"
                >
                  <div
                    class="header"
                  >
                    <button
                      aria-disabled="false"
                      aria-label="Terra.popup.header.close"
                      class="button utility"
                      type="button"
                    >
                      <span
                        class="button-label icon-only"
                      >
                        <span
                          class="icon"
                        >
                          <span
                            class="close-icon icon-svg"
                          />
                        </span>
                      </span>
                    </button>
                  </div>
                </div>
                <div
                  class="main"
                >
                  <div
                    class="scroll normalizer"
                  >
                    <div>
                      children node(s)
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>,
        ],
      ],
      "results": Array [
        Object {
          "isThrow": false,
          "value": undefined,
        },
      ],
    }
  }
>
  <FocusTrap
    _createFocusTrap={[Function]}
    active={true}
    focusTrapOptions={
      Object {
        "clickOutsideDeactivates": true,
        "returnFocusOnDeactivate": true,
      }
    }
    paused={false}
    tag="div"
  >
    <div>
      <OnClickOutside(HookshotContent)
        className="content"
        data-terra-popup-content={true}
        eventTypes={
          Array [
            "mousedown",
            "touchstart",
          ]
        }
        excludeScrollbar={false}
        onEsc={[MockFunction]}
        onResize={[Function]}
        outsideClickIgnoreClass="ignore-react-onclickoutside"
        preventDefault={false}
        refCallback={
          [MockFunction] {
            "calls": Array [
              Array [
                <div
                  class="content content"
                  data-terra-popup-content="true"
                  role="dialog"
                  tabindex="0"
                >
                  <div
                    class="inner is-full-screen"
                    style="height: 640px; width: 640px;"
                  >
                    <div
                      class="content-container-fill"
                    >
                      <div
                        class="header"
                      >
                        <div
                          class="header"
                        >
                          <button
                            aria-disabled="false"
                            aria-label="Terra.popup.header.close"
                            class="button utility"
                            type="button"
                          >
                            <span
                              class="button-label icon-only"
                            >
                              <span
                                class="icon"
                              >
                                <span
                                  class="close-icon icon-svg"
                                />
                              </span>
                            </span>
                          </button>
                        </div>
                      </div>
                      <div
                        class="main"
                      >
                        <div
                          class="scroll normalizer"
                        >
                          <div>
                            children node(s)
                          </div>
                        </div>
                      </div>
                    </div>
                  </div>
                </div>,
              ],
            ],
            "results": Array [
              Object {
                "isThrow": false,
                "value": undefined,
              },
            ],
          }
        }
        role="dialog"
        stopPropagation={false}
        tabIndex="0"
      >
        <HookshotContent
          className="content"
          data-terra-popup-content={true}
          disableOnClickOutside={[Function]}
          enableOnClickOutside={[Function]}
          eventTypes={
            Array [
              "mousedown",
              "touchstart",
            ]
          }
          onEsc={[MockFunction]}
          onResize={[Function]}
          outsideClickIgnoreClass="ignore-react-onclickoutside"
          preventDefault={false}
          refCallback={
            [MockFunction] {
              "calls": Array [
                Array [
                  <div
                    class="content content"
                    data-terra-popup-content="true"
                    role="dialog"
                    tabindex="0"
                  >
                    <div
                      class="inner is-full-screen"
                      style="height: 640px; width: 640px;"
                    >
                      <div
                        class="content-container-fill"
                      >
                        <div
                          class="header"
                        >
                          <div
                            class="header"
                          >
                            <button
                              aria-disabled="false"
                              aria-label="Terra.popup.header.close"
                              class="button utility"
                              type="button"
                            >
                              <span
                                class="button-label icon-only"
                              >
                                <span
                                  class="icon"
                                >
                                  <span
                                    class="close-icon icon-svg"
                                  />
                                </span>
                              </span>
                            </button>
                          </div>
                        </div>
                        <div
                          class="main"
                        >
                          <div
                            class="scroll normalizer"
                          >
                            <div>
                              children node(s)
                            </div>
                          </div>
                        </div>
                      </div>
                    </div>
                  </div>,
                ],
              ],
              "results": Array [
                Object {
                  "isThrow": false,
                  "value": undefined,
                },
              ],
            }
          }
          role="dialog"
          stopPropagation={false}
          tabIndex="0"
        >
          <div
            className="content content"
            data-terra-popup-content={true}
            role="dialog"
            tabIndex="0"
          >
            <div
              className="inner is-full-screen"
              style={
                Object {
                  "height": "640px",
                  "width": "640px",
                }
              }
            >
              <ContentContainer
                fill={true}
                header={
                  <div
                    className="header"
                  >
                    <FormattedMessage
                      id="Terra.popup.header.close"
                      values={Object {}}
                    >
                      [Function]
                    </FormattedMessage>
                  </div>
                }
              >
                <div
                  className="content-container-fill"
                >
                  <div
                    className="header"
                  >
                    <div
                      className="header"
                    >
                      <FormattedMessage
                        id="Terra.popup.header.close"
                        values={Object {}}
                      >
                        <Button
                          icon={
                            <span
                              className="close-icon"
                            />
                          }
                          isBlock={false}
                          isCompact={false}
                          isDisabled={false}
                          isIconOnly={true}
                          isReversed={false}
                          onClick={[MockFunction]}
                          text="Terra.popup.header.close"
                          type="button"
                          variant="utility"
                        >
                          <button
                            aria-disabled={false}
                            aria-label="Terra.popup.header.close"
                            className="button utility"
                            disabled={false}
                            onBlur={[Function]}
                            onClick={[MockFunction]}
                            onKeyDown={[Function]}
                            onKeyUp={[Function]}
                            type="button"
                          >
                            <span
                              className="button-label icon-only"
                            >
                              <span
                                className="icon"
                              >
                                <span
                                  className="close-icon icon-svg"
                                />
                              </span>
                            </span>
                          </button>
                        </Button>
                      </FormattedMessage>
                    </div>
                  </div>
                  <div
                    className="main"
                  >
                    <Scroll
                      className="normalizer"
                    >
                      <div
                        className="scroll normalizer"
                      >
                        <div
                          key=".0"
                        >
                          children node(s)
                        </div>
                      </div>
                    </Scroll>
                  </div>
                </div>
              </ContentContainer>
            </div>
          </div>
        </HookshotContent>
      </OnClickOutside(HookshotContent)>
    </div>
  </FocusTrap>
</PopupContent>
`;

exports[`PopupContent Prop Tests with header matches the shallow snapshot 1`] = `
<FocusTrap
  _createFocusTrap={[Function]}
  active={true}
  focusTrapOptions={
    Object {
      "clickOutsideDeactivates": true,
      "returnFocusOnDeactivate": true,
    }
  }
  paused={false}
  tag="div"
>
  <OnClickOutside(HookshotContent)
    className="content"
    data-terra-popup-content={true}
    eventTypes={
      Array [
        "mousedown",
        "touchstart",
      ]
    }
    excludeScrollbar={false}
    onEsc={[MockFunction]}
    onResize={[Function]}
    outsideClickIgnoreClass="ignore-react-onclickoutside"
    preventDefault={false}
    refCallback={[MockFunction]}
    role="dialog"
    stopPropagation={false}
    tabIndex="0"
  >
    <div
      className="inner is-full-screen"
      style={
        Object {
          "height": "640px",
          "width": "640px",
        }
      }
    >
      <ContentContainer
        fill={true}
        header={
          <div
            className="header"
          >
            <FormattedMessage
              id="Terra.popup.header.close"
              values={Object {}}
            >
              [Function]
            </FormattedMessage>
          </div>
        }
      >
        <div
          key=".0"
        >
          children node(s)
        </div>
      </ContentContainer>
    </div>
  </OnClickOutside(HookshotContent)>
</FocusTrap>
`;

exports[`PopupContentExports should match the snapshot 1`] = `
Object {
  "cornerSize": 3,
  "default": [Function],
}
`;
