// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`should renders with custom arrow class name 1`] = `
<PopupDefaultExample
  classNameArrow="terra-test-class-arrow"
>
  <div>
    <Popup
      attachmentBehavior="auto"
      boundingRef={null}
      classNameArrow="terra-test-class-arrow"
      classNameContent={null}
      classNameOverlay={null}
      contentAttachment="top center"
      contentHeight="80"
      contentWidth="240"
      isArrowDisplayed={false}
      isContentFocusDisabled={false}
      isHeaderDisabled={false}
      isOpen={true}
      onRequestClose={[Function]}
      targetRef={[Function]}
    >
      <Portal
        isOpened={true}
      >
        <Portal
          containerInfo={
            <div>
              <div
                class="popup-overlay"
              >
                <div
                  class="inner"
                />
              </div>
            </div>
          }
        >
          <PopupOverlay
            className={null}
            onRequestClose={[Function]}
          >
            <div
              className="popup-overlay"
              onClick={[Function]}
            >
              <div
                className="inner"
              />
            </div>
          </PopupOverlay>
        </Portal>
      </Portal>
      <Hookshot
        attachmentBehavior="auto"
        attachmentMargin={0}
        boundingRef={null}
        contentAttachment={
          Object {
            "horizontal": "center",
            "vertical": "top",
          }
        }
        contentOffset={
          Object {
            "horizontal": 0,
            "vertical": 0,
          }
        }
        isEnabled={true}
        isOpen={true}
        onPosition={[Function]}
        targetAttachment={
          Object {
            "horizontal": "center",
            "vertical": "bottom",
          }
        }
        targetOffset={
          Object {
            "horizontal": 0,
            "vertical": 0,
          }
        }
        targetRef={[Function]}
      >
        <Portal
          isOpened={true}
        >
          <Portal
            containerInfo={
              <div>
                <div>
                  <div
                    class="content content"
                    data-terra-popup-content="true"
                    role="dialog"
                    style="transform: translate3d(0px, 0px, 0px); opacity: 1;"
                    tabindex="0"
                  >
                    <div
                      class="inner"
                      style="height: 80px; width: 240px;"
                    >
                      <p>
                        this is popup content
                      </p>
                    </div>
                  </div>
                </div>
              </div>
            }
          >
            <PopupContent
              classNameInner={null}
              contentHeight={80}
              contentHeightMax={768}
              contentWidth={240}
              contentWidthMax={1024}
              disableOnClickOutside={true}
              isFocusedDisabled={false}
              isHeaderDisabled={false}
              isHeightAutomatic={false}
              isWidthAutomatic={false}
              onContentResize={[Function]}
              onRequestClose={[Function]}
              onResize={[Function]}
              refCallback={[Function]}
            >
              <FocusTrap
                _createFocusTrap={[Function]}
                active={true}
                focusTrapOptions={
                  Object {
                    "clickOutsideDeactivates": true,
                    "returnFocusOnDeactivate": true,
                  }
                }
                paused={false}
              >
                <div>
                  <OnClickOutside(HookshotContent)
                    className="content"
                    data-terra-popup-content={true}
                    disableOnClickOutside={true}
                    eventTypes={
                      Array [
                        "mousedown",
                        "touchstart",
                      ]
                    }
                    excludeScrollbar={false}
                    onEsc={[Function]}
                    onResize={[Function]}
                    outsideClickIgnoreClass="ignore-react-onclickoutside"
                    preventDefault={false}
                    refCallback={[Function]}
                    role="dialog"
                    stopPropagation={false}
                    tabIndex="0"
                  >
                    <HookshotContent
                      className="content"
                      data-terra-popup-content={true}
                      disableOnClickOutside={[Function]}
                      enableOnClickOutside={[Function]}
                      eventTypes={
                        Array [
                          "mousedown",
                          "touchstart",
                        ]
                      }
                      onEsc={[Function]}
                      onResize={[Function]}
                      outsideClickIgnoreClass="ignore-react-onclickoutside"
                      preventDefault={false}
                      refCallback={[Function]}
                      role="dialog"
                      stopPropagation={false}
                      tabIndex="0"
                    >
                      <div
                        className="content content"
                        data-terra-popup-content={true}
                        role="dialog"
                        tabIndex="0"
                      >
                        <div
                          className="inner"
                          style={
                            Object {
                              "height": "80px",
                              "width": "240px",
                            }
                          }
                        >
                          <p
                            key=".0"
                          >
                            this is popup content
                          </p>
                        </div>
                      </div>
                    </HookshotContent>
                  </OnClickOutside(HookshotContent)>
                </div>
              </FocusTrap>
            </PopupContent>
          </Portal>
        </Portal>
      </Hookshot>
    </Popup>
    <div
      style={
        Object {
          "height": "20px",
          "width": "20px",
        }
      }
    />
  </div>
</PopupDefaultExample>
`;

exports[`should renders with custom content class name 1`] = `
<PopupDefaultExample
  classNameContent="terra-test-class-content"
>
  <div>
    <Popup
      attachmentBehavior="auto"
      boundingRef={null}
      classNameArrow={null}
      classNameContent="terra-test-class-content"
      classNameOverlay={null}
      contentAttachment="top center"
      contentHeight="80"
      contentWidth="240"
      isArrowDisplayed={false}
      isContentFocusDisabled={false}
      isHeaderDisabled={false}
      isOpen={true}
      onRequestClose={[Function]}
      targetRef={[Function]}
    >
      <Portal
        isOpened={true}
      >
        <Portal
          containerInfo={
            <div>
              <div
                class="popup-overlay"
              >
                <div
                  class="inner"
                />
              </div>
            </div>
          }
        >
          <PopupOverlay
            className={null}
            onRequestClose={[Function]}
          >
            <div
              className="popup-overlay"
              onClick={[Function]}
            >
              <div
                className="inner"
              />
            </div>
          </PopupOverlay>
        </Portal>
      </Portal>
      <Hookshot
        attachmentBehavior="auto"
        attachmentMargin={0}
        boundingRef={null}
        contentAttachment={
          Object {
            "horizontal": "center",
            "vertical": "top",
          }
        }
        contentOffset={
          Object {
            "horizontal": 0,
            "vertical": 0,
          }
        }
        isEnabled={true}
        isOpen={true}
        onPosition={[Function]}
        targetAttachment={
          Object {
            "horizontal": "center",
            "vertical": "bottom",
          }
        }
        targetOffset={
          Object {
            "horizontal": 0,
            "vertical": 0,
          }
        }
        targetRef={[Function]}
      >
        <Portal
          isOpened={true}
        >
          <Portal
            containerInfo={
              <div>
                <div>
                  <div
                    class="content content"
                    data-terra-popup-content="true"
                    role="dialog"
                    style="transform: translate3d(0px, 0px, 0px); opacity: 1;"
                    tabindex="0"
                  >
                    <div
                      class="inner terra-test-class-content"
                      style="height: 80px; width: 240px;"
                    >
                      <p>
                        this is popup content
                      </p>
                    </div>
                  </div>
                </div>
              </div>
            }
          >
            <PopupContent
              classNameInner="terra-test-class-content"
              contentHeight={80}
              contentHeightMax={768}
              contentWidth={240}
              contentWidthMax={1024}
              disableOnClickOutside={true}
              isFocusedDisabled={false}
              isHeaderDisabled={false}
              isHeightAutomatic={false}
              isWidthAutomatic={false}
              onContentResize={[Function]}
              onRequestClose={[Function]}
              onResize={[Function]}
              refCallback={[Function]}
            >
              <FocusTrap
                _createFocusTrap={[Function]}
                active={true}
                focusTrapOptions={
                  Object {
                    "clickOutsideDeactivates": true,
                    "returnFocusOnDeactivate": true,
                  }
                }
                paused={false}
              >
                <div>
                  <OnClickOutside(HookshotContent)
                    className="content"
                    data-terra-popup-content={true}
                    disableOnClickOutside={true}
                    eventTypes={
                      Array [
                        "mousedown",
                        "touchstart",
                      ]
                    }
                    excludeScrollbar={false}
                    onEsc={[Function]}
                    onResize={[Function]}
                    outsideClickIgnoreClass="ignore-react-onclickoutside"
                    preventDefault={false}
                    refCallback={[Function]}
                    role="dialog"
                    stopPropagation={false}
                    tabIndex="0"
                  >
                    <HookshotContent
                      className="content"
                      data-terra-popup-content={true}
                      disableOnClickOutside={[Function]}
                      enableOnClickOutside={[Function]}
                      eventTypes={
                        Array [
                          "mousedown",
                          "touchstart",
                        ]
                      }
                      onEsc={[Function]}
                      onResize={[Function]}
                      outsideClickIgnoreClass="ignore-react-onclickoutside"
                      preventDefault={false}
                      refCallback={[Function]}
                      role="dialog"
                      stopPropagation={false}
                      tabIndex="0"
                    >
                      <div
                        className="content content"
                        data-terra-popup-content={true}
                        role="dialog"
                        tabIndex="0"
                      >
                        <div
                          className="inner terra-test-class-content"
                          style={
                            Object {
                              "height": "80px",
                              "width": "240px",
                            }
                          }
                        >
                          <p
                            key=".0"
                          >
                            this is popup content
                          </p>
                        </div>
                      </div>
                    </HookshotContent>
                  </OnClickOutside(HookshotContent)>
                </div>
              </FocusTrap>
            </PopupContent>
          </Portal>
        </Portal>
      </Hookshot>
    </Popup>
    <div
      style={
        Object {
          "height": "20px",
          "width": "20px",
        }
      }
    />
  </div>
</PopupDefaultExample>
`;

exports[`should renders with custom overlay class name 1`] = `
<PopupDefaultExample
  classNameOverlay="terra-test-class-overlay"
>
  <div>
    <Popup
      attachmentBehavior="auto"
      boundingRef={null}
      classNameArrow={null}
      classNameContent={null}
      classNameOverlay="terra-test-class-overlay"
      contentAttachment="top center"
      contentHeight="80"
      contentWidth="240"
      isArrowDisplayed={false}
      isContentFocusDisabled={false}
      isHeaderDisabled={false}
      isOpen={true}
      onRequestClose={[Function]}
      targetRef={[Function]}
    >
      <Portal
        isOpened={true}
      >
        <Portal
          containerInfo={
            <div>
              <div
                class="popup-overlay terra-test-class-overlay"
              >
                <div
                  class="inner"
                />
              </div>
            </div>
          }
        >
          <PopupOverlay
            className="terra-test-class-overlay"
            onRequestClose={[Function]}
          >
            <div
              className="popup-overlay terra-test-class-overlay"
              onClick={[Function]}
            >
              <div
                className="inner"
              />
            </div>
          </PopupOverlay>
        </Portal>
      </Portal>
      <Hookshot
        attachmentBehavior="auto"
        attachmentMargin={0}
        boundingRef={null}
        contentAttachment={
          Object {
            "horizontal": "center",
            "vertical": "top",
          }
        }
        contentOffset={
          Object {
            "horizontal": 0,
            "vertical": 0,
          }
        }
        isEnabled={true}
        isOpen={true}
        onPosition={[Function]}
        targetAttachment={
          Object {
            "horizontal": "center",
            "vertical": "bottom",
          }
        }
        targetOffset={
          Object {
            "horizontal": 0,
            "vertical": 0,
          }
        }
        targetRef={[Function]}
      >
        <Portal
          isOpened={true}
        >
          <Portal
            containerInfo={
              <div>
                <div>
                  <div
                    class="content content"
                    data-terra-popup-content="true"
                    role="dialog"
                    style="transform: translate3d(0px, 0px, 0px); opacity: 1;"
                    tabindex="0"
                  >
                    <div
                      class="inner"
                      style="height: 80px; width: 240px;"
                    >
                      <p>
                        this is popup content
                      </p>
                    </div>
                  </div>
                </div>
              </div>
            }
          >
            <PopupContent
              classNameInner={null}
              contentHeight={80}
              contentHeightMax={768}
              contentWidth={240}
              contentWidthMax={1024}
              disableOnClickOutside={true}
              isFocusedDisabled={false}
              isHeaderDisabled={false}
              isHeightAutomatic={false}
              isWidthAutomatic={false}
              onContentResize={[Function]}
              onRequestClose={[Function]}
              onResize={[Function]}
              refCallback={[Function]}
            >
              <FocusTrap
                _createFocusTrap={[Function]}
                active={true}
                focusTrapOptions={
                  Object {
                    "clickOutsideDeactivates": true,
                    "returnFocusOnDeactivate": true,
                  }
                }
                paused={false}
              >
                <div>
                  <OnClickOutside(HookshotContent)
                    className="content"
                    data-terra-popup-content={true}
                    disableOnClickOutside={true}
                    eventTypes={
                      Array [
                        "mousedown",
                        "touchstart",
                      ]
                    }
                    excludeScrollbar={false}
                    onEsc={[Function]}
                    onResize={[Function]}
                    outsideClickIgnoreClass="ignore-react-onclickoutside"
                    preventDefault={false}
                    refCallback={[Function]}
                    role="dialog"
                    stopPropagation={false}
                    tabIndex="0"
                  >
                    <HookshotContent
                      className="content"
                      data-terra-popup-content={true}
                      disableOnClickOutside={[Function]}
                      enableOnClickOutside={[Function]}
                      eventTypes={
                        Array [
                          "mousedown",
                          "touchstart",
                        ]
                      }
                      onEsc={[Function]}
                      onResize={[Function]}
                      outsideClickIgnoreClass="ignore-react-onclickoutside"
                      preventDefault={false}
                      refCallback={[Function]}
                      role="dialog"
                      stopPropagation={false}
                      tabIndex="0"
                    >
                      <div
                        className="content content"
                        data-terra-popup-content={true}
                        role="dialog"
                        tabIndex="0"
                      >
                        <div
                          className="inner"
                          style={
                            Object {
                              "height": "80px",
                              "width": "240px",
                            }
                          }
                        >
                          <p
                            key=".0"
                          >
                            this is popup content
                          </p>
                        </div>
                      </div>
                    </HookshotContent>
                  </OnClickOutside(HookshotContent)>
                </div>
              </FocusTrap>
            </PopupContent>
          </Portal>
        </Portal>
      </Hookshot>
    </Popup>
    <div
      style={
        Object {
          "height": "20px",
          "width": "20px",
        }
      }
    />
  </div>
</PopupDefaultExample>
`;

exports[`should shallow a default component 1`] = `
<div>
  <Popup
    attachmentBehavior="auto"
    boundingRef={null}
    classNameArrow={null}
    classNameContent={null}
    classNameOverlay={null}
    contentAttachment="top center"
    contentHeight="80"
    contentWidth="240"
    isArrowDisplayed={false}
    isContentFocusDisabled={false}
    isHeaderDisabled={false}
    isOpen={true}
    onRequestClose={[Function]}
    targetRef={[Function]}
  >
    <p>
      this is popup content
    </p>
  </Popup>
  <div
    style={
      Object {
        "height": "20px",
        "width": "20px",
      }
    }
  />
</div>
`;

exports[`should shallow render a component with push attachment behavior 1`] = `
<div>
  <Popup
    attachmentBehavior="push"
    boundingRef={null}
    classNameArrow={null}
    classNameContent={null}
    classNameOverlay={null}
    contentAttachment="top center"
    contentHeight="80"
    contentWidth="240"
    isArrowDisplayed={false}
    isContentFocusDisabled={false}
    isHeaderDisabled={false}
    isOpen={true}
    onRequestClose={[Function]}
    targetRef={[Function]}
  >
    <p>
      this is popup content
    </p>
  </Popup>
  <div
    style={
      Object {
        "height": "20px",
        "width": "20px",
      }
    }
  />
</div>
`;
