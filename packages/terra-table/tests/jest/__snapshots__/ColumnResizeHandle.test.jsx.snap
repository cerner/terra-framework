// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ColumnResizeHandle renders a default column resize handle when isActive is false 1`] = `
<InjectIntl(ColumnResizeHandle)
  columnIndex={0}
  columnText="Vitals"
  columnWidth={200}
  height={200}
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": null,
      "now": [Function],
      "onError": [Function],
      "textComponent": "span",
      "timeZone": null,
    }
  }
  isActive={false}
  maximumWidth={300}
  minimumWidth={60}
  onResizeMouseDown={[MockFunction]}
  onResizeMouseUp={[MockFunction]}
  setIsActive={[MockFunction]}
>
  <ColumnResizeHandle
    columnIndex={0}
    columnResizeIncrement={10}
    columnText="Vitals"
    columnWidth={200}
    height={200}
    intl={
      Object {
        "defaultFormats": Object {},
        "defaultLocale": "en",
        "formatDate": [Function],
        "formatHTMLMessage": [Function],
        "formatMessage": [Function],
        "formatNumber": [Function],
        "formatPlural": [Function],
        "formatRelative": [Function],
        "formatTime": [Function],
        "formats": Object {},
        "formatters": Object {
          "getDateTimeFormat": [Function],
          "getMessageFormat": [Function],
          "getNumberFormat": [Function],
          "getPluralFormat": [Function],
          "getRelativeFormat": [Function],
        },
        "locale": "en",
        "messages": null,
        "now": [Function],
        "onError": [Function],
        "textComponent": "span",
        "timeZone": null,
      }
    }
    isActive={false}
    maximumWidth={300}
    minimumWidth={60}
    onResizeMouseDown={[MockFunction]}
    onResizeMouseUp={[MockFunction]}
    setIsActive={[MockFunction]}
  >
    <div
      aria-hidden={false}
      aria-label={null}
      aria-valuemax={null}
      aria-valuemin={null}
      aria-valuenow={null}
      aria-valuetext={null}
      className="resize-handle"
      draggable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      onMouseDown={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onMouseUp={[Function]}
      role={null}
      style={
        Object {
          "height": "200px",
        }
      }
      tabIndex={0}
    />
  </ColumnResizeHandle>
</InjectIntl(ColumnResizeHandle)>
`;
