// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ColumnHeader renders a column header with an active resize column 1`] = `
<thead>
  <tr
    aria-rowindex={1}
    className="column-header-row"
    data-row-id="test-table-header-row"
    height="3rem"
  >
    <Memo(InjectIntl(ColumnHeaderCell))
      columnId="Column-0"
      columnIndex={0}
      displayName=" Vitals"
      headerHeight="3rem"
      id="Column-0-headerCell"
      isActive={false}
      isResizeActive={false}
      isResizeHandleActive={false}
      key="Column-0-headerCell"
      resizeHandleStateSetter={[Function]}
      tableHeight={500}
      tableId="test-table"
    />
    <Memo(InjectIntl(ColumnHeaderCell))
      columnId="Column-1"
      columnIndex={1}
      displayName=" Patient"
      headerHeight="3rem"
      id="Column-1-headerCell"
      isActive={false}
      isResizeActive={false}
      isResizeHandleActive={false}
      key="Column-1-headerCell"
      resizeHandleStateSetter={[Function]}
      tableHeight={500}
      tableId="test-table"
    />
  </tr>
</thead>
`;

exports[`ColumnHeader renders a column header with callbacks 1`] = `
<thead>
  <tr
    aria-rowindex={1}
    className="column-header-row"
    data-row-id="test-table-header-row"
    height="3rem"
  >
    <Memo(InjectIntl(ColumnHeaderCell))
      columnId="Column-0"
      columnIndex={0}
      displayName=" Vitals"
      headerHeight="3rem"
      id="Column-0-headerCell"
      isActive={false}
      isResizeActive={false}
      isResizeHandleActive={false}
      key="Column-0-headerCell"
      onColumnSelect={[MockFunction]}
      onResizeMouseDown={[MockFunction]}
      resizeHandleStateSetter={[Function]}
      tableHeight={500}
      tableId="test-table"
    />
    <Memo(InjectIntl(ColumnHeaderCell))
      columnId="Column-1"
      columnIndex={1}
      displayName=" Patient"
      headerHeight="3rem"
      id="Column-1-headerCell"
      isActive={false}
      isResizeActive={false}
      isResizeHandleActive={false}
      key="Column-1-headerCell"
      onColumnSelect={[MockFunction]}
      onResizeMouseDown={[MockFunction]}
      resizeHandleStateSetter={[Function]}
      tableHeight={500}
      tableId="test-table"
    />
  </tr>
</thead>
`;

exports[`ColumnHeader renders a column header with tableHeight prop 1`] = `
<thead>
  <tr
    aria-rowindex={1}
    className="column-header-row"
    data-row-id="test-table-header-row"
    height="3rem"
  >
    <Memo(InjectIntl(ColumnHeaderCell))
      columnId="Column-0"
      columnIndex={0}
      displayName=" Vitals"
      headerHeight="3rem"
      id="Column-0-headerCell"
      isActive={false}
      isResizeActive={false}
      isResizeHandleActive={false}
      key="Column-0-headerCell"
      resizeHandleStateSetter={[Function]}
      tableHeight={500}
      tableId="test-table"
    />
    <Memo(InjectIntl(ColumnHeaderCell))
      columnId="Column-1"
      columnIndex={1}
      displayName=" Patient"
      headerHeight="3rem"
      id="Column-1-headerCell"
      isActive={false}
      isResizeActive={false}
      isResizeHandleActive={false}
      key="Column-1-headerCell"
      resizeHandleStateSetter={[Function]}
      tableHeight={500}
      tableId="test-table"
    />
  </tr>
</thead>
`;

exports[`ColumnHeader renders a default column header 1`] = `
<thead>
  <tr
    aria-rowindex={1}
    className="column-header-row"
    data-row-id="test-table-header-row"
    height="3rem"
  >
    <Memo(InjectIntl(ColumnHeaderCell))
      columnId="Column-0"
      columnIndex={0}
      displayName=" Vitals"
      headerHeight="3rem"
      id="Column-0-headerCell"
      isActive={false}
      isResizeActive={false}
      isResizeHandleActive={false}
      key="Column-0-headerCell"
      resizeHandleStateSetter={[Function]}
      tableId="test-table"
    />
    <Memo(InjectIntl(ColumnHeaderCell))
      columnId="Column-1"
      columnIndex={1}
      displayName=" Patient"
      headerHeight="3rem"
      id="Column-1-headerCell"
      isActive={false}
      isResizeActive={false}
      isResizeHandleActive={false}
      key="Column-1-headerCell"
      resizeHandleStateSetter={[Function]}
      tableId="test-table"
    />
  </tr>
</thead>
`;

exports[`ColumnHeader verifies that the column headers are not hidden when the hasColumnHeader is true 1`] = `
<thead>
  <tr
    aria-rowindex={1}
    className="column-header-row"
    data-row-id="test-table-header-row"
    height="3rem"
  >
    <Memo(InjectIntl(ColumnHeaderCell))
      columnId="Column-0"
      columnIndex={0}
      displayName=" Vitals"
      headerHeight="3rem"
      id="Column-0-headerCell"
      isActive={false}
      isResizeActive={false}
      isResizeHandleActive={false}
      key="Column-0-headerCell"
      resizeHandleStateSetter={[Function]}
      tableId="test-table"
    />
    <Memo(InjectIntl(ColumnHeaderCell))
      columnId="Column-1"
      columnIndex={1}
      displayName=" Patient"
      headerHeight="3rem"
      id="Column-1-headerCell"
      isActive={false}
      isResizeActive={false}
      isResizeHandleActive={false}
      key="Column-1-headerCell"
      resizeHandleStateSetter={[Function]}
      tableId="test-table"
    />
  </tr>
</thead>
`;

exports[`ColumnHeader verifies that the hasVisibleColumnHeaders prop hides the table column headers when set to false 1`] = `
<thead>
  <tr
    aria-rowindex={1}
    className="column-header-row hidden"
    data-row-id="test-table-header-row"
  >
    <Memo(InjectIntl(ColumnHeaderCell))
      columnId="Column-0"
      columnIndex={0}
      displayName=" Vitals"
      headerHeight="3rem"
      id="Column-0-headerCell"
      isActive={false}
      isResizable={false}
      isResizeActive={false}
      isResizeHandleActive={false}
      isSelectable={false}
      key="Column-0-headerCell"
      resizeHandleStateSetter={[Function]}
      tableId="test-table"
    />
    <Memo(InjectIntl(ColumnHeaderCell))
      columnId="Column-1"
      columnIndex={1}
      displayName=" Patient"
      headerHeight="3rem"
      id="Column-1-headerCell"
      isActive={false}
      isResizable={false}
      isResizeActive={false}
      isResizeHandleActive={false}
      isSelectable={false}
      key="Column-1-headerCell"
      resizeHandleStateSetter={[Function]}
      tableId="test-table"
    />
  </tr>
</thead>
`;
