// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Tabs Responsiveness should render tabs that are responsive to the parent node viewport by default 1`] = `
<ContentContainer
  className="tabs-container structural"
  fill={false}
  header={
    <ResponsiveElement
      responsiveTo="parent"
      small={
        <CollapsibleTabs
          activeIndex={0}
          activeKey="default"
          onChange={[Function]}
          onTruncationChange={[Function]}
          variant="structural"
        >
          <TabPane
            className="is-active"
            isActive={true}
            isDisabled={false}
            isIconOnly={false}
            label="Default"
            onClick={[Function]}
          />
        </CollapsibleTabs>
      }
      tiny={
        <CollapsedTabs
          activeKey="default"
          onTruncationChange={[Function]}
        >
          <TabPane
            className="is-active"
            isActive={true}
            isDisabled={false}
            isIconOnly={false}
            label="Default"
            onClick={[Function]}
          />
        </CollapsedTabs>
      }
    />
  }
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": null,
      "now": [Function],
      "onError": [Function],
      "textComponent": "span",
      "timeZone": null,
    }
  }
>
  <div
    className="pane-content"
    role="tabpanel"
  />
</ContentContainer>
`;

exports[`Tabs Responsiveness should render tabs that are responsive to the window viewport 1`] = `
<ContentContainer
  className="tabs-container structural"
  fill={false}
  header={
    <ResponsiveElement
      responsiveTo="window"
      small={
        <CollapsibleTabs
          activeIndex={0}
          activeKey="default"
          onChange={[Function]}
          onTruncationChange={[Function]}
          variant="structural"
        >
          <TabPane
            className="is-active"
            isActive={true}
            isDisabled={false}
            isIconOnly={false}
            label="Default"
            onClick={[Function]}
          />
        </CollapsibleTabs>
      }
      tiny={
        <CollapsedTabs
          activeKey="default"
          onTruncationChange={[Function]}
        >
          <TabPane
            className="is-active"
            isActive={true}
            isDisabled={false}
            isIconOnly={false}
            label="Default"
            onClick={[Function]}
          />
        </CollapsedTabs>
      }
    />
  }
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": null,
      "now": [Function],
      "onError": [Function],
      "textComponent": "span",
      "timeZone": null,
    }
  }
>
  <div
    className="pane-content"
    role="tabpanel"
  />
</ContentContainer>
`;

exports[`Tabs Responsiveness should render tabs that do not completely collapse into a menu 1`] = `
<ContentContainer
  className="tabs-container structural"
  fill={false}
  header={
    <CollapsibleTabs
      activeIndex={0}
      activeKey="default"
      onChange={[Function]}
      onTruncationChange={[Function]}
      variant="structural"
    >
      <TabPane
        className="is-active"
        isActive={true}
        isDisabled={false}
        isIconOnly={false}
        label="Default"
        onClick={[Function]}
      />
    </CollapsibleTabs>
  }
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": null,
      "now": [Function],
      "onError": [Function],
      "textComponent": "span",
      "timeZone": null,
    }
  }
>
  <div
    className="pane-content"
    role="tabpanel"
  />
</ContentContainer>
`;

exports[`Tabs Variants should render modular-centered tabs 1`] = `
<ContentContainer
  className="tabs-container structural"
  fill={false}
  header={
    <ResponsiveElement
      responsiveTo="parent"
      small={
        <CollapsibleTabs
          activeIndex={0}
          activeKey="default"
          onChange={[Function]}
          onTruncationChange={[Function]}
          variant="structural"
        >
          <TabPane
            className="is-active"
            isActive={true}
            isDisabled={false}
            isIconOnly={false}
            label="Default"
            onClick={[Function]}
          />
        </CollapsibleTabs>
      }
      tiny={
        <CollapsedTabs
          activeKey="default"
          onTruncationChange={[Function]}
        >
          <TabPane
            className="is-active"
            isActive={true}
            isDisabled={false}
            isIconOnly={false}
            label="Default"
            onClick={[Function]}
          />
        </CollapsedTabs>
      }
    />
  }
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": null,
      "now": [Function],
      "onError": [Function],
      "textComponent": "span",
      "timeZone": null,
    }
  }
  variant="modular-centered"
>
  <div
    className="pane-content"
    role="tabpanel"
  />
</ContentContainer>
`;

exports[`Tabs Variants should render modular-left-aligned tabs 1`] = `
<ContentContainer
  className="tabs-container structural"
  fill={false}
  header={
    <ResponsiveElement
      responsiveTo="parent"
      small={
        <CollapsibleTabs
          activeIndex={0}
          activeKey="default"
          onChange={[Function]}
          onTruncationChange={[Function]}
          variant="structural"
        >
          <TabPane
            className="is-active"
            isActive={true}
            isDisabled={false}
            isIconOnly={false}
            label="Default"
            onClick={[Function]}
          />
        </CollapsibleTabs>
      }
      tiny={
        <CollapsedTabs
          activeKey="default"
          onTruncationChange={[Function]}
        >
          <TabPane
            className="is-active"
            isActive={true}
            isDisabled={false}
            isIconOnly={false}
            label="Default"
            onClick={[Function]}
          />
        </CollapsedTabs>
      }
    />
  }
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": null,
      "now": [Function],
      "onError": [Function],
      "textComponent": "span",
      "timeZone": null,
    }
  }
  variant="modular-left-aligned"
>
  <div
    className="pane-content"
    role="tabpanel"
  />
</ContentContainer>
`;

exports[`Tabs Variants should render structural tabs 1`] = `
<ContentContainer
  className="tabs-container structural"
  fill={false}
  header={
    <ResponsiveElement
      responsiveTo="parent"
      small={
        <CollapsibleTabs
          activeIndex={0}
          activeKey="default"
          onChange={[Function]}
          onTruncationChange={[Function]}
          variant="structural"
        >
          <TabPane
            className="is-active"
            isActive={true}
            isDisabled={false}
            isIconOnly={false}
            label="Default"
            onClick={[Function]}
          />
        </CollapsibleTabs>
      }
      tiny={
        <CollapsedTabs
          activeKey="default"
          onTruncationChange={[Function]}
        >
          <TabPane
            className="is-active"
            isActive={true}
            isDisabled={false}
            isIconOnly={false}
            label="Default"
            onClick={[Function]}
          />
        </CollapsedTabs>
      }
    />
  }
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": null,
      "now": [Function],
      "onError": [Function],
      "textComponent": "span",
      "timeZone": null,
    }
  }
  variant="structural"
>
  <div
    className="pane-content"
    role="tabpanel"
  />
</ContentContainer>
`;

exports[`Tabs should render a controlled component when onChange and activeKey are set 1`] = `
<ContentContainer
  className="tabs-container structural"
  fill={false}
  header={
    <ResponsiveElement
      responsiveTo="parent"
      small={
        <CollapsibleTabs
          activeIndex={0}
          activeKey="default"
          onChange={[Function]}
          onTruncationChange={[Function]}
          variant="structural"
        >
          <TabPane
            className="is-active"
            isActive={true}
            isDisabled={false}
            isIconOnly={false}
            label="Default"
            onClick={[Function]}
          />
        </CollapsibleTabs>
      }
      tiny={
        <CollapsedTabs
          activeKey="default"
          onTruncationChange={[Function]}
        >
          <TabPane
            className="is-active"
            isActive={true}
            isDisabled={false}
            isIconOnly={false}
            label="Default"
            onClick={[Function]}
          />
        </CollapsedTabs>
      }
    />
  }
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": null,
      "now": [Function],
      "onError": [Function],
      "textComponent": "span",
      "timeZone": null,
    }
  }
>
  <div
    className="pane-content"
    role="tabpanel"
  />
</ContentContainer>
`;

exports[`Tabs should render a default component 1`] = `
<ContentContainer
  className="tabs-container structural"
  fill={false}
  header={
    <ResponsiveElement
      responsiveTo="parent"
      small={
        <CollapsibleTabs
          activeIndex={0}
          activeKey="default"
          onChange={[Function]}
          onTruncationChange={[Function]}
          variant="structural"
        >
          <TabPane
            className="is-active"
            isActive={true}
            isDisabled={false}
            isIconOnly={false}
            label="Default"
            onClick={[Function]}
          />
        </CollapsibleTabs>
      }
      tiny={
        <CollapsedTabs
          activeKey="default"
          onTruncationChange={[Function]}
        >
          <TabPane
            className="is-active"
            isActive={true}
            isDisabled={false}
            isIconOnly={false}
            label="Default"
            onClick={[Function]}
          />
        </CollapsedTabs>
      }
    />
  }
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": null,
      "now": [Function],
      "onError": [Function],
      "textComponent": "span",
      "timeZone": null,
    }
  }
>
  <div
    className="pane-content"
    role="tabpanel"
  />
</ContentContainer>
`;

exports[`Tabs should render an uncontrolled component when defaultActiveKey is set 1`] = `
<ContentContainer
  className="tabs-container structural"
  defaultKey="default"
  fill={false}
  header={
    <ResponsiveElement
      responsiveTo="parent"
      small={
        <CollapsibleTabs
          activeIndex={0}
          activeKey="default"
          onChange={[Function]}
          onTruncationChange={[Function]}
          variant="structural"
        >
          <TabPane
            className="is-active"
            isActive={true}
            isDisabled={false}
            isIconOnly={false}
            label="Default"
            onClick={[Function]}
          />
        </CollapsibleTabs>
      }
      tiny={
        <CollapsedTabs
          activeKey="default"
          onTruncationChange={[Function]}
        >
          <TabPane
            className="is-active"
            isActive={true}
            isDisabled={false}
            isIconOnly={false}
            label="Default"
            onClick={[Function]}
          />
        </CollapsedTabs>
      }
    />
  }
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": null,
      "now": [Function],
      "onError": [Function],
      "textComponent": "span",
      "timeZone": null,
    }
  }
>
  <div
    className="pane-content"
    role="tabpanel"
  />
</ContentContainer>
`;

exports[`Tabs should render with content filled when indicated 1`] = `
<ContentContainer
  className="tabs-container structural"
  fill={true}
  header={
    <ResponsiveElement
      responsiveTo="parent"
      small={
        <CollapsibleTabs
          activeIndex={0}
          activeKey="default"
          onChange={[Function]}
          onTruncationChange={[Function]}
          variant="structural"
        >
          <TabPane
            className="is-active"
            isActive={true}
            isDisabled={false}
            isIconOnly={false}
            label="Default"
            onClick={[Function]}
          />
        </CollapsibleTabs>
      }
      tiny={
        <CollapsedTabs
          activeKey="default"
          onTruncationChange={[Function]}
        >
          <TabPane
            className="is-active"
            isActive={true}
            isDisabled={false}
            isIconOnly={false}
            label="Default"
            onClick={[Function]}
          />
        </CollapsedTabs>
      }
    />
  }
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": null,
      "now": [Function],
      "onError": [Function],
      "textComponent": "span",
      "timeZone": null,
    }
  }
>
  <div
    className="pane-content fill-parent"
    role="tabpanel"
  />
</ContentContainer>
`;

exports[`Tabs should render with tabs filled when indicated 1`] = `
<ContentContainer
  className="tabs-container structural"
  fill={false}
  header={
    <ResponsiveElement
      responsiveTo="parent"
      small={
        <CollapsibleTabs
          activeIndex={0}
          activeKey="default"
          onChange={[Function]}
          onTruncationChange={[Function]}
          variant="structural"
        >
          <TabPane
            className="is-active"
            isActive={true}
            isDisabled={false}
            isIconOnly={false}
            label="Default"
            onClick={[Function]}
          />
        </CollapsibleTabs>
      }
      tiny={
        <CollapsedTabs
          activeKey="default"
          onTruncationChange={[Function]}
        >
          <TabPane
            className="is-active"
            isActive={true}
            isDisabled={false}
            isIconOnly={false}
            label="Default"
            onClick={[Function]}
          />
        </CollapsedTabs>
      }
    />
  }
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": null,
      "now": [Function],
      "onError": [Function],
      "textComponent": "span",
      "timeZone": null,
    }
  }
  tabsFill={true}
>
  <div
    className="pane-content"
    role="tabpanel"
  />
</ContentContainer>
`;

exports[`Tabs should set custom props 1`] = `
<ContentContainer
  className="tabs-container structural customClass"
  fill={false}
  header={
    <ResponsiveElement
      responsiveTo="parent"
      small={
        <CollapsibleTabs
          activeIndex={0}
          activeKey="default"
          onChange={[Function]}
          onTruncationChange={[Function]}
          variant="structural"
        >
          <TabPane
            className="is-active"
            isActive={true}
            isDisabled={false}
            isIconOnly={false}
            label="Default"
            onClick={[Function]}
          />
        </CollapsibleTabs>
      }
      tiny={
        <CollapsedTabs
          activeKey="default"
          onTruncationChange={[Function]}
        >
          <TabPane
            className="is-active"
            isActive={true}
            isDisabled={false}
            isIconOnly={false}
            label="Default"
            onClick={[Function]}
          />
        </CollapsedTabs>
      }
    />
  }
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": null,
      "now": [Function],
      "onError": [Function],
      "textComponent": "span",
      "timeZone": null,
    }
  }
>
  <div
    className="pane-content"
    role="tabpanel"
  />
</ContentContainer>
`;

exports[`Tabs should set custom props for child Tab Pane 1`] = `
<ContentContainer
  className="tabs-container structural"
  fill={false}
  header={
    <ResponsiveElement
      responsiveTo="parent"
      small={
        <CollapsibleTabs
          activeIndex={0}
          activeKey="default"
          onChange={[Function]}
          onTruncationChange={[Function]}
          variant="structural"
        >
          <TabPane
            className="is-active customClass"
            isActive={true}
            isDisabled={false}
            isIconOnly={false}
            label="Default"
            onClick={[Function]}
          />
        </CollapsibleTabs>
      }
      tiny={
        <CollapsedTabs
          activeKey="default"
          onTruncationChange={[Function]}
        >
          <TabPane
            className="is-active customClass"
            isActive={true}
            isDisabled={false}
            isIconOnly={false}
            label="Default"
            onClick={[Function]}
          />
        </CollapsedTabs>
      }
    />
  }
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": null,
      "now": [Function],
      "onError": [Function],
      "textComponent": "span",
      "timeZone": null,
    }
  }
>
  <div
    className="pane-content"
    role="tabpanel"
  />
</ContentContainer>
`;
