// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Tabs Responsiveness correctly applies the theme context className 1`] = `
<ThemeContextProvider
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": null,
      "now": [Function],
      "onError": [Function],
      "textComponent": "span",
      "timeZone": null,
    }
  }
  theme={
    Object {
      "className": "orion-fusion-theme",
    }
  }
>
  <Tabs
    fill={false}
    responsiveTo="parent"
    tabFill={false}
    variant="modular-left-aligned"
  >
    <ContentContainer
      className="tabs-container structural orion-fusion-theme"
      fill={false}
      header={
        <ResponsiveElement
          onChange={[Function]}
          responsiveTo="parent"
        >
          <CollapsedTabs
            activeKey="default"
            onTruncationChange={[Function]}
          >
            <TabPane
              className="is-active"
              isActive={true}
              isDisabled={false}
              isIconOnly={false}
              label="Default"
              onClick={[Function]}
            />
          </CollapsedTabs>
        </ResponsiveElement>
      }
      variant="modular-left-aligned"
    >
      <div
        className="content-container-static tabs-container structural orion-fusion-theme"
        variant="modular-left-aligned"
      >
        <div
          className="header"
        >
          <ResponsiveElement
            onChange={[Function]}
            responsiveTo="parent"
          >
            <CollapsedTabs
              activeKey="default"
              onTruncationChange={[Function]}
            >
              <div
                className="collapsed-tabs-container orion-fusion-theme"
              >
                <TabMenu
                  activeKey="default"
                >
                  <div
                    className="tab-menu is-active orion-fusion-theme"
                    data-terra-tabs-menu={true}
                    onClick={[Function]}
                    onKeyDown={[Function]}
                    role="button"
                    tabIndex="0"
                  >
                    <FormattedMessage
                      id="Terra.tabs.more"
                      values={Object {}}
                    >
                      <span>
                        Default
                      </span>
                    </FormattedMessage>
                    <IconCaretDown
                      className=""
                      isBidi={true}
                      viewBox="0 0 48 48"
                      xmlns="http://www.w3.org/2000/svg"
                    >
                      <IconBase
                        ariaLabel={null}
                        className=""
                        focusable="false"
                        height="1em"
                        isBidi={true}
                        isSpin={false}
                        viewBox="0 0 48 48"
                        width="1em"
                        xmlns="http://www.w3.org/2000/svg"
                      >
                        <svg
                          aria-hidden="true"
                          className="tui-Icon icon is-bidi"
                          focusable="false"
                          height="1em"
                          viewBox="0 0 48 48"
                          width="1em"
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <path
                            d="M48 12L24 36 0 12h48z"
                          />
                        </svg>
                      </IconBase>
                    </IconCaretDown>
                    <Menu
                      contentWidth="240"
                      headerTitle=""
                      isArrowDisplayed={false}
                      isOpen={false}
                      onRequestClose={[Function]}
                      targetRef={[Function]}
                    >
                      <Popup
                        attachmentBehavior="flip"
                        boundingRef={null}
                        classNameArrow="arrow"
                        classNameContent={null}
                        classNameOverlay={null}
                        contentAttachment="top right"
                        contentHeight="auto"
                        contentWidth="240"
                        headerTitle=""
                        isArrowDisplayed={false}
                        isContentFocusDisabled={true}
                        isHeaderDisabled={true}
                        isOpen={false}
                        onRequestClose={[Function]}
                        popupContentRole="dialog"
                        targetRef={[Function]}
                      />
                    </Menu>
                  </div>
                </TabMenu>
              </div>
            </CollapsedTabs>
          </ResponsiveElement>
        </div>
        <div
          className="main"
        >
          <Scroll
            className="normalizer"
          >
            <div
              className="scroll normalizer"
            >
              <div
                className="pane-content"
                role="tabpanel"
              />
            </div>
          </Scroll>
        </div>
      </div>
    </ContentContainer>
  </Tabs>
</ThemeContextProvider>
`;

exports[`Tabs Responsiveness should render tabs that are responsive to the parent node viewport by default 1`] = `
<ContentContainer
  className="tabs-container structural"
  fill={false}
  header={
    <ResponsiveElement
      onChange={[Function]}
      responsiveTo="parent"
    >
      <CollapsibleTabs
        activeIndex={0}
        activeKey="default"
        onChange={[Function]}
        onTruncationChange={[Function]}
        variant="structural"
      >
        <TabPane
          className="is-active"
          isActive={true}
          isDisabled={false}
          isIconOnly={false}
          label="Default"
          onClick={[Function]}
        />
      </CollapsibleTabs>
    </ResponsiveElement>
  }
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": null,
      "now": [Function],
      "onError": [Function],
      "textComponent": "span",
      "timeZone": null,
    }
  }
>
  <div
    className="pane-content"
    role="tabpanel"
  />
</ContentContainer>
`;

exports[`Tabs Responsiveness should render tabs that are responsive to the window viewport 1`] = `
<ContentContainer
  className="tabs-container structural"
  fill={false}
  header={
    <ResponsiveElement
      onChange={[Function]}
      responsiveTo="window"
    >
      <CollapsibleTabs
        activeIndex={0}
        activeKey="default"
        onChange={[Function]}
        onTruncationChange={[Function]}
        variant="structural"
      >
        <TabPane
          className="is-active"
          isActive={true}
          isDisabled={false}
          isIconOnly={false}
          label="Default"
          onClick={[Function]}
        />
      </CollapsibleTabs>
    </ResponsiveElement>
  }
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": null,
      "now": [Function],
      "onError": [Function],
      "textComponent": "span",
      "timeZone": null,
    }
  }
>
  <div
    className="pane-content"
    role="tabpanel"
  />
</ContentContainer>
`;

exports[`Tabs Responsiveness should render tabs that do not completely collapse into a menu 1`] = `
<ContentContainer
  className="tabs-container structural"
  fill={false}
  header={
    <CollapsibleTabs
      activeIndex={0}
      activeKey="default"
      onChange={[Function]}
      onTruncationChange={[Function]}
      variant="structural"
    >
      <TabPane
        className="is-active"
        isActive={true}
        isDisabled={false}
        isIconOnly={false}
        label="Default"
        onClick={[Function]}
      />
    </CollapsibleTabs>
  }
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": null,
      "now": [Function],
      "onError": [Function],
      "textComponent": "span",
      "timeZone": null,
    }
  }
>
  <div
    className="pane-content"
    role="tabpanel"
  />
</ContentContainer>
`;

exports[`Tabs Variants should render modular-centered tabs 1`] = `
<ContentContainer
  className="tabs-container structural"
  fill={false}
  header={
    <ResponsiveElement
      onChange={[Function]}
      responsiveTo="parent"
    >
      <CollapsibleTabs
        activeIndex={0}
        activeKey="default"
        onChange={[Function]}
        onTruncationChange={[Function]}
        variant="structural"
      >
        <TabPane
          className="is-active"
          isActive={true}
          isDisabled={false}
          isIconOnly={false}
          label="Default"
          onClick={[Function]}
        />
      </CollapsibleTabs>
    </ResponsiveElement>
  }
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": null,
      "now": [Function],
      "onError": [Function],
      "textComponent": "span",
      "timeZone": null,
    }
  }
  variant="modular-centered"
>
  <div
    className="pane-content"
    role="tabpanel"
  />
</ContentContainer>
`;

exports[`Tabs Variants should render modular-left-aligned tabs 1`] = `
<ContentContainer
  className="tabs-container structural"
  fill={false}
  header={
    <ResponsiveElement
      onChange={[Function]}
      responsiveTo="parent"
    >
      <CollapsedTabs
        activeKey="default"
        onTruncationChange={[Function]}
      >
        <TabPane
          className="is-active"
          isActive={true}
          isDisabled={false}
          isIconOnly={false}
          label="Default"
          onClick={[Function]}
        />
      </CollapsedTabs>
    </ResponsiveElement>
  }
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": null,
      "now": [Function],
      "onError": [Function],
      "textComponent": "span",
      "timeZone": null,
    }
  }
  variant="modular-left-aligned"
>
  <div
    className="pane-content"
    role="tabpanel"
  />
</ContentContainer>
`;

exports[`Tabs Variants should render structural tabs 1`] = `
<ContentContainer
  className="tabs-container structural"
  fill={false}
  header={
    <ResponsiveElement
      onChange={[Function]}
      responsiveTo="parent"
    >
      <CollapsedTabs
        activeKey="default"
        onTruncationChange={[Function]}
      >
        <TabPane
          className="is-active"
          isActive={true}
          isDisabled={false}
          isIconOnly={false}
          label="Default"
          onClick={[Function]}
        />
      </CollapsedTabs>
    </ResponsiveElement>
  }
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": null,
      "now": [Function],
      "onError": [Function],
      "textComponent": "span",
      "timeZone": null,
    }
  }
  variant="structural"
>
  <div
    className="pane-content"
    role="tabpanel"
  />
</ContentContainer>
`;

exports[`Tabs should render a controlled component when onChange and activeKey are set 1`] = `
<ContentContainer
  className="tabs-container structural"
  fill={false}
  header={
    <ResponsiveElement
      onChange={[Function]}
      responsiveTo="parent"
    >
      <CollapsibleTabs
        activeIndex={0}
        activeKey="default"
        onChange={[Function]}
        onTruncationChange={[Function]}
        variant="structural"
      >
        <TabPane
          className="is-active"
          isActive={true}
          isDisabled={false}
          isIconOnly={false}
          label="Default"
          onClick={[Function]}
        />
      </CollapsibleTabs>
    </ResponsiveElement>
  }
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": null,
      "now": [Function],
      "onError": [Function],
      "textComponent": "span",
      "timeZone": null,
    }
  }
>
  <div
    className="pane-content"
    role="tabpanel"
  />
</ContentContainer>
`;

exports[`Tabs should render a default component 1`] = `
<ContentContainer
  className="tabs-container structural"
  fill={false}
  header={
    <ResponsiveElement
      onChange={[Function]}
      responsiveTo="parent"
    >
      <CollapsibleTabs
        activeIndex={0}
        activeKey="default"
        onChange={[Function]}
        onTruncationChange={[Function]}
        variant="structural"
      >
        <TabPane
          className="is-active"
          isActive={true}
          isDisabled={false}
          isIconOnly={false}
          label="Default"
          onClick={[Function]}
        />
      </CollapsibleTabs>
    </ResponsiveElement>
  }
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": null,
      "now": [Function],
      "onError": [Function],
      "textComponent": "span",
      "timeZone": null,
    }
  }
>
  <div
    className="pane-content"
    role="tabpanel"
  />
</ContentContainer>
`;

exports[`Tabs should render an id based on the Tabs id and the Tab key 1`] = `
<ContentContainer
  className="tabs-container structural"
  fill={false}
  header={
    <ResponsiveElement
      onChange={[Function]}
      responsiveTo="parent"
    >
      <CollapsedTabs
        activeKey="default"
        onTruncationChange={[Function]}
      >
        <TabPane
          className="is-active customClass"
          isActive={true}
          isDisabled={false}
          isIconOnly={false}
          label="Default"
          onClick={[Function]}
        />
      </CollapsedTabs>
    </ResponsiveElement>
  }
  id="application-id"
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": null,
      "now": [Function],
      "onError": [Function],
      "textComponent": "span",
      "timeZone": null,
    }
  }
>
  <div
    className="pane-content"
    role="tabpanel"
  />
</ContentContainer>
`;

exports[`Tabs should render an uncontrolled component when defaultActiveKey is set 1`] = `
<ContentContainer
  className="tabs-container structural"
  defaultKey="default"
  fill={false}
  header={
    <ResponsiveElement
      onChange={[Function]}
      responsiveTo="parent"
    >
      <CollapsedTabs
        activeKey="default"
        onTruncationChange={[Function]}
      >
        <TabPane
          className="is-active"
          isActive={true}
          isDisabled={false}
          isIconOnly={false}
          label="Default"
          onClick={[Function]}
        />
      </CollapsedTabs>
    </ResponsiveElement>
  }
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": null,
      "now": [Function],
      "onError": [Function],
      "textComponent": "span",
      "timeZone": null,
    }
  }
>
  <div
    className="pane-content"
    role="tabpanel"
  />
</ContentContainer>
`;

exports[`Tabs should render with content filled when indicated 1`] = `
<ContentContainer
  className="tabs-container structural"
  fill={true}
  header={
    <ResponsiveElement
      onChange={[Function]}
      responsiveTo="parent"
    >
      <CollapsedTabs
        activeKey="default"
        onTruncationChange={[Function]}
      >
        <TabPane
          className="is-active"
          isActive={true}
          isDisabled={false}
          isIconOnly={false}
          label="Default"
          onClick={[Function]}
        />
      </CollapsedTabs>
    </ResponsiveElement>
  }
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": null,
      "now": [Function],
      "onError": [Function],
      "textComponent": "span",
      "timeZone": null,
    }
  }
>
  <div
    className="pane-content fill-parent"
    role="tabpanel"
  />
</ContentContainer>
`;

exports[`Tabs should render with tabs filled when indicated 1`] = `
<ContentContainer
  className="tabs-container structural"
  fill={false}
  header={
    <ResponsiveElement
      onChange={[Function]}
      responsiveTo="parent"
    >
      <CollapsedTabs
        activeKey="default"
        onTruncationChange={[Function]}
      >
        <TabPane
          className="is-active"
          isActive={true}
          isDisabled={false}
          isIconOnly={false}
          label="Default"
          onClick={[Function]}
        />
      </CollapsedTabs>
    </ResponsiveElement>
  }
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": null,
      "now": [Function],
      "onError": [Function],
      "textComponent": "span",
      "timeZone": null,
    }
  }
  tabsFill={true}
>
  <div
    className="pane-content"
    role="tabpanel"
  />
</ContentContainer>
`;

exports[`Tabs should set custom props 1`] = `
<ContentContainer
  className="tabs-container structural customClass"
  fill={false}
  header={
    <ResponsiveElement
      onChange={[Function]}
      responsiveTo="parent"
    >
      <CollapsedTabs
        activeKey="default"
        onTruncationChange={[Function]}
      >
        <TabPane
          className="is-active"
          isActive={true}
          isDisabled={false}
          isIconOnly={false}
          label="Default"
          onClick={[Function]}
        />
      </CollapsedTabs>
    </ResponsiveElement>
  }
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": null,
      "now": [Function],
      "onError": [Function],
      "textComponent": "span",
      "timeZone": null,
    }
  }
>
  <div
    className="pane-content"
    role="tabpanel"
  />
</ContentContainer>
`;

exports[`Tabs should set custom props for child Tab Pane 1`] = `
<ContentContainer
  className="tabs-container structural"
  fill={false}
  header={
    <ResponsiveElement
      onChange={[Function]}
      responsiveTo="parent"
    >
      <CollapsedTabs
        activeKey="default"
        onTruncationChange={[Function]}
      >
        <TabPane
          className="is-active customClass"
          isActive={true}
          isDisabled={false}
          isIconOnly={false}
          label="Default"
          onClick={[Function]}
        />
      </CollapsedTabs>
    </ResponsiveElement>
  }
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": null,
      "now": [Function],
      "onError": [Function],
      "textComponent": "span",
      "timeZone": null,
    }
  }
>
  <div
    className="pane-content"
    role="tabpanel"
  />
</ContentContainer>
`;
