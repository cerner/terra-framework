// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Tabs Responsiveness correctly applies the theme context className 1`] = `
<ThemeContextProvider
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": null,
      "now": [Function],
      "onError": [Function],
      "textComponent": "span",
      "timeZone": null,
    }
  }
  theme={
    Object {
      "className": "orion-fusion-theme",
    }
  }
>
  <Tabs
    fill={false}
    responsiveTo="parent"
    tabFill={false}
    variant="modular-left-aligned"
  >
    <ContentContainer
      className="tabs-container structural orion-fusion-theme"
      fill={false}
      header={
        <ResponsiveElement
          onChange={[Function]}
          responsiveTo="parent"
        >
          <CollapsedTabs
            activeIndex={0}
            activeKey="default"
            onTruncationChange={[Function]}
          >
            <TabPane
              className="is-active"
              index={0}
              isActive={true}
              isDisabled={false}
              isIconOnly={false}
              label="Default"
              onClick={[Function]}
              showIcon={false}
            />
          </CollapsedTabs>
        </ResponsiveElement>
      }
      setFocusOnContainer={false}
      variant="modular-left-aligned"
    >
      <div
        className="content-container-static tabs-container structural orion-fusion-theme"
        variant="modular-left-aligned"
      >
        <div
          className="header"
        >
          <ResponsiveElement
            onChange={[Function]}
            responsiveTo="parent"
          >
            <CollapsedTabs
              activeIndex={0}
              activeKey="default"
              onTruncationChange={[Function]}
            >
              <div
                className="collapsed-tabs-container orion-fusion-theme"
                role="tablist"
              >
                <InjectIntl(TabMenu)
                  activeKey="default"
                  selectedTab={
                    <TabPane
                      className="is-active"
                      index={0}
                      isActive={true}
                      isDisabled={false}
                      isIconOnly={false}
                      label="Default"
                      onClick={[Function]}
                      showIcon={false}
                    />
                  }
                >
                  <TabMenu
                    activeKey="default"
                    intl={
                      Object {
                        "defaultFormats": Object {},
                        "defaultLocale": "en",
                        "formatDate": [Function],
                        "formatHTMLMessage": [Function],
                        "formatMessage": [Function],
                        "formatNumber": [Function],
                        "formatPlural": [Function],
                        "formatRelative": [Function],
                        "formatTime": [Function],
                        "formats": Object {},
                        "formatters": Object {
                          "getDateTimeFormat": [Function],
                          "getMessageFormat": [Function],
                          "getNumberFormat": [Function],
                          "getPluralFormat": [Function],
                          "getRelativeFormat": [Function],
                        },
                        "locale": "en",
                        "messages": null,
                        "now": [Function],
                        "onError": [Function],
                        "textComponent": "span",
                        "timeZone": null,
                      }
                    }
                    selectedTab={
                      <TabPane
                        className="is-active"
                        index={0}
                        isActive={true}
                        isDisabled={false}
                        isIconOnly={false}
                        label="Default"
                        onClick={[Function]}
                        showIcon={false}
                      />
                    }
                  >
                    <div
                      aria-describedby="terra-tabs-button-interaction-hint-00000000-0000-0000-0000-000000000000"
                      aria-selected={true}
                      className="tab-menu is-active orion-fusion-theme"
                      data-terra-tabs-menu={true}
                      data-terra-tabs-show-focus-styles={true}
                      onClick={[Function]}
                      onKeyDown={[Function]}
                      onMouseDown={[Function]}
                      role="tab"
                      tabIndex="0"
                    >
                      <FormattedMessage
                        id="Terra.tabs.more"
                        values={Object {}}
                      >
                        <span>
                          Default
                        </span>
                      </FormattedMessage>
                      <IconCaretDown
                        className=""
                        isBidi={true}
                        viewBox="0 0 48 48"
                        xmlns="http://www.w3.org/2000/svg"
                      >
                        <IconBase
                          className=""
                          focusable="false"
                          height="1em"
                          isBidi={true}
                          isSpin={false}
                          viewBox="0 0 48 48"
                          width="1em"
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <svg
                            className="tui-Icon icon is-bidi"
                            focusable="false"
                            height="1em"
                            role="presentation"
                            viewBox="0 0 48 48"
                            width="1em"
                            xmlns="http://www.w3.org/2000/svg"
                          >
                            <path
                              d="M48 12L24 36 0 12h48z"
                            />
                          </svg>
                        </IconBase>
                      </IconCaretDown>
                      <Menu
                        contentWidth="240"
                        headerTitle=""
                        isArrowDisplayed={false}
                        isOpen={false}
                        onRequestClose={[Function]}
                        showHeader={true}
                        targetRef={[Function]}
                      >
                        <Popup
                          attachmentBehavior="flip"
                          boundingRef={null}
                          classNameArrow="arrow"
                          classNameContent={null}
                          classNameOverlay={null}
                          contentAttachment="top right"
                          contentHeight="auto"
                          contentWidth="240"
                          headerTitle=""
                          isArrowDisplayed={false}
                          isContentFocusDisabled={true}
                          isHeaderDisabled={true}
                          isOpen={false}
                          onRequestClose={[Function]}
                          popupContentRole="dialog"
                          targetRef={[Function]}
                        />
                      </Menu>
                    </div>
                    <VisuallyHiddenText
                      aria-hidden="true"
                      aria-live="polite"
                      id="terra-tabs-button-interaction-hint-00000000-0000-0000-0000-000000000000"
                      role="tab"
                      text="Terra.tabs.hint.tabMenu"
                    >
                      <span
                        aria-hidden="true"
                        aria-live="polite"
                        className="visually-hidden-text"
                        id="terra-tabs-button-interaction-hint-00000000-0000-0000-0000-000000000000"
                        role="tab"
                      >
                        Terra.tabs.hint.tabMenu
                      </span>
                    </VisuallyHiddenText>
                  </TabMenu>
                </InjectIntl(TabMenu)>
              </div>
            </CollapsedTabs>
          </ResponsiveElement>
        </div>
        <div
          className="main"
        >
          <Scroll
            className="normalizer orion-fusion-theme"
          >
            <div
              className="scroll normalizer orion-fusion-theme"
            >
              <div
                className="pane-content"
                role="tabpanel"
              />
            </div>
          </Scroll>
        </div>
      </div>
    </ContentContainer>
  </Tabs>
</ThemeContextProvider>
`;

exports[`Tabs Responsiveness should render tabs that are responsive to the parent node viewport by default 1`] = `
<ContentContainer
  className="tabs-container structural"
  fill={false}
  header={
    <ResponsiveElement
      onChange={[Function]}
      responsiveTo="parent"
    >
      <CollapsibleTabs
        activeIndex={0}
        activeKey="default"
        onChange={[Function]}
        onTruncationChange={[Function]}
        variant="structural"
      >
        <TabPane
          className="is-active"
          index={0}
          isActive={true}
          isDisabled={false}
          isIconOnly={false}
          label="Default"
          onClick={[Function]}
          showIcon={false}
        />
      </CollapsibleTabs>
    </ResponsiveElement>
  }
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": null,
      "now": [Function],
      "onError": [Function],
      "textComponent": "span",
      "timeZone": null,
    }
  }
  setFocusOnContainer={false}
>
  <div
    className="pane-content"
    role="tabpanel"
  />
</ContentContainer>
`;

exports[`Tabs Responsiveness should render tabs that are responsive to the window viewport 1`] = `
<ContentContainer
  className="tabs-container structural"
  fill={false}
  header={
    <ResponsiveElement
      onChange={[Function]}
      responsiveTo="window"
    >
      <CollapsibleTabs
        activeIndex={0}
        activeKey="default"
        onChange={[Function]}
        onTruncationChange={[Function]}
        variant="structural"
      >
        <TabPane
          className="is-active"
          index={0}
          isActive={true}
          isDisabled={false}
          isIconOnly={false}
          label="Default"
          onClick={[Function]}
          showIcon={false}
        />
      </CollapsibleTabs>
    </ResponsiveElement>
  }
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": null,
      "now": [Function],
      "onError": [Function],
      "textComponent": "span",
      "timeZone": null,
    }
  }
  setFocusOnContainer={false}
>
  <div
    className="pane-content"
    role="tabpanel"
  />
</ContentContainer>
`;

exports[`Tabs Responsiveness should render tabs that do not completely collapse into a menu 1`] = `
<ContentContainer
  className="tabs-container structural"
  fill={false}
  header={
    <CollapsibleTabs
      activeIndex={0}
      activeKey="default"
      onChange={[Function]}
      onTruncationChange={[Function]}
      variant="structural"
    >
      <TabPane
        className="is-active"
        index={0}
        isActive={true}
        isDisabled={false}
        isIconOnly={false}
        label="Default"
        onClick={[Function]}
        showIcon={false}
      />
    </CollapsibleTabs>
  }
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": null,
      "now": [Function],
      "onError": [Function],
      "textComponent": "span",
      "timeZone": null,
    }
  }
  setFocusOnContainer={false}
>
  <div
    className="pane-content"
    role="tabpanel"
  />
</ContentContainer>
`;

exports[`Tabs Variants should render modular-centered tabs 1`] = `
<ContentContainer
  className="tabs-container structural"
  fill={false}
  header={
    <ResponsiveElement
      onChange={[Function]}
      responsiveTo="parent"
    >
      <CollapsibleTabs
        activeIndex={0}
        activeKey="default"
        onChange={[Function]}
        onTruncationChange={[Function]}
        variant="structural"
      >
        <TabPane
          className="is-active"
          index={0}
          isActive={true}
          isDisabled={false}
          isIconOnly={false}
          label="Default"
          onClick={[Function]}
          showIcon={false}
        />
      </CollapsibleTabs>
    </ResponsiveElement>
  }
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": null,
      "now": [Function],
      "onError": [Function],
      "textComponent": "span",
      "timeZone": null,
    }
  }
  setFocusOnContainer={false}
  variant="modular-centered"
>
  <div
    className="pane-content"
    role="tabpanel"
  />
</ContentContainer>
`;

exports[`Tabs Variants should render modular-left-aligned tabs 1`] = `
<ContentContainer
  className="tabs-container structural"
  fill={false}
  header={
    <ResponsiveElement
      onChange={[Function]}
      responsiveTo="parent"
    >
      <CollapsedTabs
        activeIndex={0}
        activeKey="default"
        onTruncationChange={[Function]}
      >
        <TabPane
          className="is-active"
          index={0}
          isActive={true}
          isDisabled={false}
          isIconOnly={false}
          label="Default"
          onClick={[Function]}
          showIcon={false}
        />
      </CollapsedTabs>
    </ResponsiveElement>
  }
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": null,
      "now": [Function],
      "onError": [Function],
      "textComponent": "span",
      "timeZone": null,
    }
  }
  setFocusOnContainer={false}
  variant="modular-left-aligned"
>
  <div
    className="pane-content"
    role="tabpanel"
  />
</ContentContainer>
`;

exports[`Tabs Variants should render structural tabs 1`] = `
<ContentContainer
  className="tabs-container structural"
  fill={false}
  header={
    <ResponsiveElement
      onChange={[Function]}
      responsiveTo="parent"
    >
      <CollapsedTabs
        activeIndex={0}
        activeKey="default"
        onTruncationChange={[Function]}
      >
        <TabPane
          className="is-active"
          index={0}
          isActive={true}
          isDisabled={false}
          isIconOnly={false}
          label="Default"
          onClick={[Function]}
          showIcon={false}
        />
      </CollapsedTabs>
    </ResponsiveElement>
  }
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": null,
      "now": [Function],
      "onError": [Function],
      "textComponent": "span",
      "timeZone": null,
    }
  }
  setFocusOnContainer={false}
  variant="structural"
>
  <div
    className="pane-content"
    role="tabpanel"
  />
</ContentContainer>
`;

exports[`Tabs should render a controlled component when onChange and activeKey are set 1`] = `
<ContentContainer
  className="tabs-container structural"
  fill={false}
  header={
    <ResponsiveElement
      onChange={[Function]}
      responsiveTo="parent"
    >
      <CollapsibleTabs
        activeIndex={0}
        activeKey="default"
        onChange={[Function]}
        onTruncationChange={[Function]}
        variant="structural"
      >
        <TabPane
          className="is-active"
          index={0}
          isActive={true}
          isDisabled={false}
          isIconOnly={false}
          label="Default"
          onClick={[Function]}
          showIcon={false}
        />
      </CollapsibleTabs>
    </ResponsiveElement>
  }
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": null,
      "now": [Function],
      "onError": [Function],
      "textComponent": "span",
      "timeZone": null,
    }
  }
  setFocusOnContainer={false}
>
  <div
    className="pane-content"
    role="tabpanel"
  />
</ContentContainer>
`;

exports[`Tabs should render a default component 1`] = `
<ContentContainer
  className="tabs-container structural"
  fill={false}
  header={
    <ResponsiveElement
      onChange={[Function]}
      responsiveTo="parent"
    >
      <CollapsibleTabs
        activeIndex={0}
        activeKey="default"
        onChange={[Function]}
        onTruncationChange={[Function]}
        variant="structural"
      >
        <TabPane
          className="is-active"
          index={0}
          isActive={true}
          isDisabled={false}
          isIconOnly={false}
          label="Default"
          onClick={[Function]}
          showIcon={false}
        />
      </CollapsibleTabs>
    </ResponsiveElement>
  }
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": null,
      "now": [Function],
      "onError": [Function],
      "textComponent": "span",
      "timeZone": null,
    }
  }
  setFocusOnContainer={false}
>
  <div
    className="pane-content"
    role="tabpanel"
  />
</ContentContainer>
`;

exports[`Tabs should render an id based on the Tabs id and the Tab key 1`] = `
<ContentContainer
  className="tabs-container structural"
  fill={false}
  header={
    <ResponsiveElement
      onChange={[Function]}
      responsiveTo="parent"
    >
      <CollapsedTabs
        activeIndex={0}
        activeKey="default"
        onTruncationChange={[Function]}
      >
        <TabPane
          className="is-active customClass"
          index={0}
          isActive={true}
          isDisabled={false}
          isIconOnly={false}
          label="Default"
          onClick={[Function]}
          showIcon={false}
        />
      </CollapsedTabs>
    </ResponsiveElement>
  }
  id="application-id"
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": null,
      "now": [Function],
      "onError": [Function],
      "textComponent": "span",
      "timeZone": null,
    }
  }
  setFocusOnContainer={false}
>
  <div
    className="pane-content"
    role="tabpanel"
  />
</ContentContainer>
`;

exports[`Tabs should render an uncontrolled component when defaultActiveKey is set 1`] = `
<ContentContainer
  className="tabs-container structural"
  defaultKey="default"
  fill={false}
  header={
    <ResponsiveElement
      onChange={[Function]}
      responsiveTo="parent"
    >
      <CollapsedTabs
        activeIndex={0}
        activeKey="default"
        onTruncationChange={[Function]}
      >
        <TabPane
          className="is-active"
          index={0}
          isActive={true}
          isDisabled={false}
          isIconOnly={false}
          label="Default"
          onClick={[Function]}
          showIcon={false}
        />
      </CollapsedTabs>
    </ResponsiveElement>
  }
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": null,
      "now": [Function],
      "onError": [Function],
      "textComponent": "span",
      "timeZone": null,
    }
  }
  setFocusOnContainer={false}
>
  <div
    className="pane-content"
    role="tabpanel"
  />
</ContentContainer>
`;

exports[`Tabs should render with content filled when indicated 1`] = `
<ContentContainer
  className="tabs-container structural"
  fill={true}
  header={
    <ResponsiveElement
      onChange={[Function]}
      responsiveTo="parent"
    >
      <CollapsedTabs
        activeIndex={0}
        activeKey="default"
        onTruncationChange={[Function]}
      >
        <TabPane
          className="is-active"
          index={0}
          isActive={true}
          isDisabled={false}
          isIconOnly={false}
          label="Default"
          onClick={[Function]}
          showIcon={false}
        />
      </CollapsedTabs>
    </ResponsiveElement>
  }
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": null,
      "now": [Function],
      "onError": [Function],
      "textComponent": "span",
      "timeZone": null,
    }
  }
  setFocusOnContainer={false}
>
  <div
    className="pane-content fill-parent"
    role="tabpanel"
  />
</ContentContainer>
`;

exports[`Tabs should render with tabs filled when indicated 1`] = `
<ContentContainer
  className="tabs-container structural"
  fill={false}
  header={
    <ResponsiveElement
      onChange={[Function]}
      responsiveTo="parent"
    >
      <CollapsedTabs
        activeIndex={0}
        activeKey="default"
        onTruncationChange={[Function]}
      >
        <TabPane
          className="is-active"
          index={0}
          isActive={true}
          isDisabled={false}
          isIconOnly={false}
          label="Default"
          onClick={[Function]}
          showIcon={false}
        />
      </CollapsedTabs>
    </ResponsiveElement>
  }
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": null,
      "now": [Function],
      "onError": [Function],
      "textComponent": "span",
      "timeZone": null,
    }
  }
  setFocusOnContainer={false}
  tabsFill={true}
>
  <div
    className="pane-content"
    role="tabpanel"
  />
</ContentContainer>
`;

exports[`Tabs should set custom props 1`] = `
<ContentContainer
  className="tabs-container structural customClass"
  fill={false}
  header={
    <ResponsiveElement
      onChange={[Function]}
      responsiveTo="parent"
    >
      <CollapsedTabs
        activeIndex={0}
        activeKey="default"
        onTruncationChange={[Function]}
      >
        <TabPane
          className="is-active"
          index={0}
          isActive={true}
          isDisabled={false}
          isIconOnly={false}
          label="Default"
          onClick={[Function]}
          showIcon={false}
        />
      </CollapsedTabs>
    </ResponsiveElement>
  }
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": null,
      "now": [Function],
      "onError": [Function],
      "textComponent": "span",
      "timeZone": null,
    }
  }
  setFocusOnContainer={false}
>
  <div
    className="pane-content"
    role="tabpanel"
  />
</ContentContainer>
`;

exports[`Tabs should set custom props for child Tab Pane 1`] = `
<ContentContainer
  className="tabs-container structural"
  fill={false}
  header={
    <ResponsiveElement
      onChange={[Function]}
      responsiveTo="parent"
    >
      <CollapsedTabs
        activeIndex={0}
        activeKey="default"
        onTruncationChange={[Function]}
      >
        <TabPane
          className="is-active customClass"
          index={0}
          isActive={true}
          isDisabled={false}
          isIconOnly={false}
          label="Default"
          onClick={[Function]}
          showIcon={false}
        />
      </CollapsedTabs>
    </ResponsiveElement>
  }
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": null,
      "now": [Function],
      "onError": [Function],
      "textComponent": "span",
      "timeZone": null,
    }
  }
  setFocusOnContainer={false}
>
  <div
    className="pane-content"
    role="tabpanel"
  />
</ContentContainer>
`;
