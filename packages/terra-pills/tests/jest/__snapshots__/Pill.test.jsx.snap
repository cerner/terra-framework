// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Pill should render a basic pill 1`] = `
<InjectIntl(Pill)
  id="Default"
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": null,
      "now": [Function],
      "onError": [Function],
      "textComponent": "span",
      "timeZone": null,
    }
  }
  label="Default"
>
  <Pill
    id="Default"
    intl={
      Object {
        "defaultFormats": Object {},
        "defaultLocale": "en",
        "formatDate": [Function],
        "formatHTMLMessage": [Function],
        "formatMessage": [Function],
        "formatNumber": [Function],
        "formatPlural": [Function],
        "formatRelative": [Function],
        "formatTime": [Function],
        "formats": Object {},
        "formatters": Object {
          "getDateTimeFormat": [Function],
          "getMessageFormat": [Function],
          "getNumberFormat": [Function],
          "getPluralFormat": [Function],
          "getRelativeFormat": [Function],
        },
        "locale": "en",
        "messages": null,
        "now": [Function],
        "onError": [Function],
        "textComponent": "span",
        "timeZone": null,
      }
    }
    label="Default"
  >
    <ResponsiveElement
      onResize={[Function]}
      responsiveTo="window"
    >
      <div
        className="pill-list-item"
        role="listitem"
      >
        <div
          aria-describedby="interaction-hint-Default"
          className="pill"
          data-terra-pill={true}
          data-terra-pills-show-focus-styles={true}
          id="Default"
          role="text"
        >
          <span
            className="pill-label"
          >
            Default
          </span>
        </div>
      </div>
    </ResponsiveElement>
  </Pill>
</InjectIntl(Pill)>
`;

exports[`Pill should render a removable pill 1`] = `
<InjectIntl(Pill)
  id="Removable"
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": null,
      "now": [Function],
      "onError": [Function],
      "textComponent": "span",
      "timeZone": null,
    }
  }
  isRemovable={true}
  label="Removable"
>
  <Pill
    id="Removable"
    intl={
      Object {
        "defaultFormats": Object {},
        "defaultLocale": "en",
        "formatDate": [Function],
        "formatHTMLMessage": [Function],
        "formatMessage": [Function],
        "formatNumber": [Function],
        "formatPlural": [Function],
        "formatRelative": [Function],
        "formatTime": [Function],
        "formats": Object {},
        "formatters": Object {
          "getDateTimeFormat": [Function],
          "getMessageFormat": [Function],
          "getNumberFormat": [Function],
          "getPluralFormat": [Function],
          "getRelativeFormat": [Function],
        },
        "locale": "en",
        "messages": null,
        "now": [Function],
        "onError": [Function],
        "textComponent": "span",
        "timeZone": null,
      }
    }
    isRemovable={true}
    label="Removable"
  >
    <ResponsiveElement
      onResize={[Function]}
      responsiveTo="window"
    >
      <div
        className="pill-list-item"
        role="listitem"
      >
        <div
          aria-describedby="interaction-hint-Removable"
          className="pill is-focusable is-removable"
          data-terra-pill={true}
          data-terra-pills-show-focus-styles={true}
          id="Removable"
          onBlur={[Function]}
          onKeyDown={[Function]}
          onMouseDown={[Function]}
          role="text"
          tabIndex="0"
        >
          <span
            className="pill-label"
          >
            Removable
          </span>
        </div>
        <button
          aria-hidden="true"
          aria-labelledby="remove-button-Removable"
          className="pill-remove-button"
          tabIndex="-1"
        >
          <span
            className="remove-button-label"
            id="remove-button-Removable"
          >
            Terra.pills.label.delete
          </span>
          <span
            className="clear-icon"
          />
        </button>
        <VisuallyHiddenText
          aria-hidden="true"
          id="interaction-hint-Removable"
          text=", Terra.pills.hint.removable"
        >
          <span
            aria-hidden="true"
            className="visually-hidden-text"
            id="interaction-hint-Removable"
          >
            , Terra.pills.hint.removable
          </span>
        </VisuallyHiddenText>
      </div>
    </ResponsiveElement>
  </Pill>
</InjectIntl(Pill)>
`;

exports[`Pill should render a selectable and removable pill 1`] = `
<InjectIntl(Pill)
  id="SelectableRemovable"
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": null,
      "now": [Function],
      "onError": [Function],
      "textComponent": "span",
      "timeZone": null,
    }
  }
  isRemovable={true}
  label="Selectable and Removable"
  onSelect={[Function]}
>
  <Pill
    id="SelectableRemovable"
    intl={
      Object {
        "defaultFormats": Object {},
        "defaultLocale": "en",
        "formatDate": [Function],
        "formatHTMLMessage": [Function],
        "formatMessage": [Function],
        "formatNumber": [Function],
        "formatPlural": [Function],
        "formatRelative": [Function],
        "formatTime": [Function],
        "formats": Object {},
        "formatters": Object {
          "getDateTimeFormat": [Function],
          "getMessageFormat": [Function],
          "getNumberFormat": [Function],
          "getPluralFormat": [Function],
          "getRelativeFormat": [Function],
        },
        "locale": "en",
        "messages": null,
        "now": [Function],
        "onError": [Function],
        "textComponent": "span",
        "timeZone": null,
      }
    }
    isRemovable={true}
    label="Selectable and Removable"
    onSelect={[Function]}
  >
    <ResponsiveElement
      onResize={[Function]}
      responsiveTo="window"
    >
      <div
        className="pill-list-item"
        role="listitem"
      >
        <button
          aria-describedby="interaction-hint-SelectableRemovable"
          aria-haspopup="dialog"
          className="pill is-focusable is-selectable is-removable is-selectable-and-removable"
          data-terra-pill={true}
          data-terra-pills-show-focus-styles={true}
          id="SelectableRemovable"
          onBlur={[Function]}
          onClick={[Function]}
          onKeyDown={[Function]}
          onMouseDown={[Function]}
          tabIndex="0"
          type="button"
        >
          <span
            className="pill-label"
          >
            Selectable and Removable
          </span>
        </button>
        <button
          aria-hidden="true"
          aria-labelledby="remove-button-SelectableRemovable"
          className="pill-remove-button"
          tabIndex="-1"
        >
          <span
            className="remove-button-label"
            id="remove-button-SelectableRemovable"
          >
            Terra.pills.label.delete
          </span>
          <span
            className="clear-icon"
          />
        </button>
        <VisuallyHiddenText
          aria-hidden="true"
          id="interaction-hint-SelectableRemovable"
          text=", Terra.pills.hint.selectableAndRemovable"
        >
          <span
            aria-hidden="true"
            className="visually-hidden-text"
            id="interaction-hint-SelectableRemovable"
          >
            , Terra.pills.hint.selectableAndRemovable
          </span>
        </VisuallyHiddenText>
      </div>
    </ResponsiveElement>
  </Pill>
</InjectIntl(Pill)>
`;

exports[`Pill should render a selectable pill 1`] = `
<InjectIntl(Pill)
  id="Selectable"
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": null,
      "now": [Function],
      "onError": [Function],
      "textComponent": "span",
      "timeZone": null,
    }
  }
  label="Selectable"
  onSelect={[Function]}
>
  <Pill
    id="Selectable"
    intl={
      Object {
        "defaultFormats": Object {},
        "defaultLocale": "en",
        "formatDate": [Function],
        "formatHTMLMessage": [Function],
        "formatMessage": [Function],
        "formatNumber": [Function],
        "formatPlural": [Function],
        "formatRelative": [Function],
        "formatTime": [Function],
        "formats": Object {},
        "formatters": Object {
          "getDateTimeFormat": [Function],
          "getMessageFormat": [Function],
          "getNumberFormat": [Function],
          "getPluralFormat": [Function],
          "getRelativeFormat": [Function],
        },
        "locale": "en",
        "messages": null,
        "now": [Function],
        "onError": [Function],
        "textComponent": "span",
        "timeZone": null,
      }
    }
    label="Selectable"
    onSelect={[Function]}
  >
    <ResponsiveElement
      onResize={[Function]}
      responsiveTo="window"
    >
      <div
        className="pill-list-item"
        role="listitem"
      >
        <button
          aria-describedby="interaction-hint-Selectable"
          aria-haspopup="dialog"
          className="pill is-focusable is-selectable"
          data-terra-pill={true}
          data-terra-pills-show-focus-styles={true}
          id="Selectable"
          onBlur={[Function]}
          onClick={[Function]}
          onKeyDown={[Function]}
          onMouseDown={[Function]}
          tabIndex="0"
          type="button"
        >
          <span
            className="pill-label"
          >
            Selectable
          </span>
        </button>
        <VisuallyHiddenText
          aria-hidden="true"
          id="interaction-hint-Selectable"
          text=", Terra.pills.hint.selectable"
        >
          <span
            aria-hidden="true"
            className="visually-hidden-text"
            id="interaction-hint-Selectable"
          >
            , Terra.pills.hint.selectable
          </span>
        </VisuallyHiddenText>
      </div>
    </ResponsiveElement>
  </Pill>
</InjectIntl(Pill)>
`;
