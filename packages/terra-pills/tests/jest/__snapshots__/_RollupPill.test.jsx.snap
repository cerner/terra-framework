// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Rollup Pill should render rollup pill with the label "4 more" 1`] = `
<injectIntl(RollUpPill)
  isCollapsed={true}
  rollupCount={4}
>
  <RollUpPill
    intl={
      Object {
        "$t": [Function],
        "defaultFormats": Object {},
        "defaultLocale": "en",
        "defaultRichTextElements": undefined,
        "fallbackOnEmptyString": true,
        "formatDate": [Function],
        "formatDateTimeRange": [Function],
        "formatDateToParts": [Function],
        "formatDisplayName": [Function],
        "formatList": [Function],
        "formatListToParts": [Function],
        "formatMessage": [Function],
        "formatNumber": [Function],
        "formatNumberToParts": [Function],
        "formatPlural": [Function],
        "formatRelativeTime": [Function],
        "formatTime": [Function],
        "formatTimeToParts": [Function],
        "formats": Object {},
        "formatters": Object {
          "getDateTimeFormat": [Function],
          "getDisplayNames": [Function],
          "getListFormat": [Function],
          "getMessageFormat": [Function],
          "getNumberFormat": [Function],
          "getPluralRules": [Function],
          "getRelativeTimeFormat": [Function],
        },
        "locale": "en",
        "messages": null,
        "onError": [Function],
        "onWarn": [Function],
        "textComponent": Symbol(react.fragment),
        "timeZone": undefined,
        "wrapRichTextChunksInFragment": undefined,
      }
    }
    isCollapsed={true}
    rollupCount={4}
  >
    <div
      className="pill-list-item"
      role="listitem"
    >
      <button
        aria-describedby="terra-rollup-pill-00000000-0000-0000-0000-000000000000"
        className="rollup-pill"
        data-terra-rollup-pill={true}
        data-terra-rollup-pill-show-focus-styles={true}
        id="terra-rollup-pill-00000000-0000-0000-0000-000000000000"
        onBlur={[Function]}
        onClick={[Function]}
        onKeyDown={[Function]}
        onMouseDown={[Function]}
        tabIndex="0"
        type="button"
      >
        <span
          className="rollup-pill-label"
        >
          Terra.pills.label.rollupPill
        </span>
      </button>
      <VisuallyHiddenText
        aria-hidden="true"
        id="terra-rollup-pill-00000000-0000-0000-0000-000000000000"
        text="Terra.pills.hint.rollupPill"
      >
        <span
          aria-hidden="true"
          className="visually-hidden-text"
          id="terra-rollup-pill-00000000-0000-0000-0000-000000000000"
        >
          Terra.pills.hint.rollupPill
        </span>
      </VisuallyHiddenText>
    </div>
  </RollUpPill>
</injectIntl(RollUpPill)>
`;

exports[`Rollup Pill should render rollup pill with the label "show less" when isCollapsed is false 1`] = `
<injectIntl(RollUpPill)
  isCollapsed={false}
  rollupCount={3}
>
  <RollUpPill
    intl={
      Object {
        "$t": [Function],
        "defaultFormats": Object {},
        "defaultLocale": "en",
        "defaultRichTextElements": undefined,
        "fallbackOnEmptyString": true,
        "formatDate": [Function],
        "formatDateTimeRange": [Function],
        "formatDateToParts": [Function],
        "formatDisplayName": [Function],
        "formatList": [Function],
        "formatListToParts": [Function],
        "formatMessage": [Function],
        "formatNumber": [Function],
        "formatNumberToParts": [Function],
        "formatPlural": [Function],
        "formatRelativeTime": [Function],
        "formatTime": [Function],
        "formatTimeToParts": [Function],
        "formats": Object {},
        "formatters": Object {
          "getDateTimeFormat": [Function],
          "getDisplayNames": [Function],
          "getListFormat": [Function],
          "getMessageFormat": [Function],
          "getNumberFormat": [Function],
          "getPluralRules": [Function],
          "getRelativeTimeFormat": [Function],
        },
        "locale": "en",
        "messages": null,
        "onError": [Function],
        "onWarn": [Function],
        "textComponent": Symbol(react.fragment),
        "timeZone": undefined,
        "wrapRichTextChunksInFragment": undefined,
      }
    }
    isCollapsed={false}
    rollupCount={3}
  >
    <div
      className="pill-list-item"
      role="listitem"
    >
      <button
        aria-describedby="terra-rollup-pill-00000000-0000-0000-0000-000000000000"
        className="rollup-pill"
        data-terra-rollup-pill={true}
        data-terra-rollup-pill-show-focus-styles={true}
        id="terra-rollup-pill-00000000-0000-0000-0000-000000000000"
        onBlur={[Function]}
        onClick={[Function]}
        onKeyDown={[Function]}
        onMouseDown={[Function]}
        tabIndex="0"
        type="button"
      >
        <span
          className="rollup-pill-label"
        >
          Terra.pills.label.showLess
        </span>
      </button>
      <VisuallyHiddenText
        aria-hidden="true"
        id="terra-rollup-pill-00000000-0000-0000-0000-000000000000"
        text="Terra.pills.hint.showLess"
      >
        <span
          aria-hidden="true"
          className="visually-hidden-text"
          id="terra-rollup-pill-00000000-0000-0000-0000-000000000000"
        >
          Terra.pills.hint.showLess
        </span>
      </VisuallyHiddenText>
    </div>
  </RollUpPill>
</injectIntl(RollUpPill)>
`;

exports[`Rollup Pill should render rollup pill with the label "show less" when isCollapsed is true and rollupCount is 0 1`] = `
<injectIntl(RollUpPill)
  isCollapsed={true}
  rollupCount={0}
>
  <RollUpPill
    intl={
      Object {
        "$t": [Function],
        "defaultFormats": Object {},
        "defaultLocale": "en",
        "defaultRichTextElements": undefined,
        "fallbackOnEmptyString": true,
        "formatDate": [Function],
        "formatDateTimeRange": [Function],
        "formatDateToParts": [Function],
        "formatDisplayName": [Function],
        "formatList": [Function],
        "formatListToParts": [Function],
        "formatMessage": [Function],
        "formatNumber": [Function],
        "formatNumberToParts": [Function],
        "formatPlural": [Function],
        "formatRelativeTime": [Function],
        "formatTime": [Function],
        "formatTimeToParts": [Function],
        "formats": Object {},
        "formatters": Object {
          "getDateTimeFormat": [Function],
          "getDisplayNames": [Function],
          "getListFormat": [Function],
          "getMessageFormat": [Function],
          "getNumberFormat": [Function],
          "getPluralRules": [Function],
          "getRelativeTimeFormat": [Function],
        },
        "locale": "en",
        "messages": null,
        "onError": [Function],
        "onWarn": [Function],
        "textComponent": Symbol(react.fragment),
        "timeZone": undefined,
        "wrapRichTextChunksInFragment": undefined,
      }
    }
    isCollapsed={true}
    rollupCount={0}
  >
    <div
      className="pill-list-item"
      role="listitem"
    >
      <button
        aria-describedby="terra-rollup-pill-00000000-0000-0000-0000-000000000000"
        className="rollup-pill"
        data-terra-rollup-pill={true}
        data-terra-rollup-pill-show-focus-styles={true}
        id="terra-rollup-pill-00000000-0000-0000-0000-000000000000"
        onBlur={[Function]}
        onClick={[Function]}
        onKeyDown={[Function]}
        onMouseDown={[Function]}
        tabIndex="0"
        type="button"
      >
        <span
          className="rollup-pill-label"
        >
          Terra.pills.label.showLess
        </span>
      </button>
      <VisuallyHiddenText
        aria-hidden="true"
        id="terra-rollup-pill-00000000-0000-0000-0000-000000000000"
        text="Terra.pills.hint.rollupPill"
      >
        <span
          aria-hidden="true"
          className="visually-hidden-text"
          id="terra-rollup-pill-00000000-0000-0000-0000-000000000000"
        >
          Terra.pills.hint.rollupPill
        </span>
      </VisuallyHiddenText>
    </div>
  </RollUpPill>
</injectIntl(RollUpPill)>
`;
