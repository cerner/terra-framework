// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`correctly applies the theme context className 1`] = `
<ContextProvider
  value={
    Object {
      "className": "orion-fusion-theme",
      "name": undefined,
    }
  }
>
  <InjectIntl(DateTimePicker)
    name="date-time-input"
    utcOffset={0}
  />
</ContextProvider>
`;

exports[`should render a date time picker with a default date and time 1`] = `
<DateTimePicker
  disabled={false}
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": null,
      "now": [Function],
      "onError": [Function],
      "textComponent": "span",
      "timeZone": null,
    }
  }
  isIncomplete={false}
  isInvalid={false}
  isInvalidMeridiem={false}
  maxDate="2100-12-31"
  minDate="1900-01-01"
  name="date-time-input"
  required={false}
  showSeconds={false}
  timeVariant="24-hour"
  utcOffset={0}
  value="2017-04-01T10:30"
/>
`;

exports[`should render a date time picker with disabled dates 1`] = `
<DateTimePicker
  disabled={false}
  excludeDates={
    Array [
      "2017-04-01",
    ]
  }
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": null,
      "now": [Function],
      "onError": [Function],
      "textComponent": "span",
      "timeZone": null,
    }
  }
  isIncomplete={false}
  isInvalid={false}
  isInvalidMeridiem={false}
  maxDate="2100-12-31"
  minDate="1900-01-01"
  name="date-time-input"
  required={false}
  showSeconds={false}
  timeVariant="24-hour"
  utcOffset={0}
/>
`;

exports[`should render a date time picker with filtered dates 1`] = `
<DateTimePicker
  disabled={false}
  filterDate={[Function]}
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": null,
      "now": [Function],
      "onError": [Function],
      "textComponent": "span",
      "timeZone": null,
    }
  }
  isIncomplete={false}
  isInvalid={false}
  isInvalidMeridiem={false}
  maxDate="2100-12-31"
  minDate="1900-01-01"
  name="date-time-input"
  required={false}
  showSeconds={false}
  timeVariant="24-hour"
  utcOffset={0}
/>
`;

exports[`should render a date time picker with included dates 1`] = `
<DateTimePicker
  disabled={false}
  includeDates={
    Array [
      "2017-04-01",
    ]
  }
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": null,
      "now": [Function],
      "onError": [Function],
      "textComponent": "span",
      "timeZone": null,
    }
  }
  isIncomplete={false}
  isInvalid={false}
  isInvalidMeridiem={false}
  maxDate="2100-12-31"
  minDate="1900-01-01"
  name="date-time-input"
  required={false}
  showSeconds={false}
  timeVariant="24-hour"
  utcOffset={0}
/>
`;

exports[`should render a date time picker with min and max dates 1`] = `
<DateTimePicker
  disabled={false}
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": null,
      "now": [Function],
      "onError": [Function],
      "textComponent": "span",
      "timeZone": null,
    }
  }
  isIncomplete={false}
  isInvalid={false}
  isInvalidMeridiem={false}
  maxDate="2017-04-01"
  minDate="2017-04-10"
  name="date-time-input"
  required={false}
  showSeconds={false}
  timeVariant="24-hour"
  utcOffset={0}
/>
`;

exports[`should render a date time picker with onBlur 1`] = `
<DateTimePicker
  disabled={false}
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": null,
      "now": [Function],
      "onError": [Function],
      "textComponent": "span",
      "timeZone": null,
    }
  }
  isIncomplete={false}
  isInvalid={false}
  isInvalidMeridiem={false}
  maxDate="2100-12-31"
  minDate="1900-01-01"
  name="date-time-input"
  onBlur={[Function]}
  required={false}
  showSeconds={false}
  timeVariant="24-hour"
  utcOffset={0}
/>
`;

exports[`should render a date time picker with onChange 1`] = `
<DateTimePicker
  disabled={false}
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": null,
      "now": [Function],
      "onError": [Function],
      "textComponent": "span",
      "timeZone": null,
    }
  }
  isIncomplete={false}
  isInvalid={false}
  isInvalidMeridiem={false}
  maxDate="2100-12-31"
  minDate="1900-01-01"
  name="date-time-input"
  onChange={[Function]}
  required={false}
  showSeconds={false}
  timeVariant="24-hour"
  utcOffset={0}
/>
`;

exports[`should render a date time picker with onChangeRaw 1`] = `
<DateTimePicker
  disabled={false}
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": null,
      "now": [Function],
      "onError": [Function],
      "textComponent": "span",
      "timeZone": null,
    }
  }
  isIncomplete={false}
  isInvalid={false}
  isInvalidMeridiem={false}
  maxDate="2100-12-31"
  minDate="1900-01-01"
  name="date-time-input"
  onChangeRaw={[Function]}
  required={false}
  showSeconds={false}
  timeVariant="24-hour"
  utcOffset={0}
/>
`;

exports[`should render a date time picker with the seconds field enabled 1`] = `
<DateTimePicker
  disabled={false}
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": null,
      "now": [Function],
      "onError": [Function],
      "textComponent": "span",
      "timeZone": null,
    }
  }
  isIncomplete={false}
  isInvalid={false}
  isInvalidMeridiem={false}
  maxDate="2100-12-31"
  minDate="1900-01-01"
  name="date-time-input"
  required={false}
  showSeconds={true}
  timeVariant="24-hour"
  utcOffset={0}
/>
`;

exports[`should render a default date time picker 1`] = `
<DateTimePicker
  disabled={false}
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": null,
      "now": [Function],
      "onError": [Function],
      "textComponent": "span",
      "timeZone": null,
    }
  }
  isIncomplete={false}
  isInvalid={false}
  isInvalidMeridiem={false}
  maxDate="2100-12-31"
  minDate="1900-01-01"
  name="date-time-input"
  required={false}
  showSeconds={false}
  timeVariant="24-hour"
  utcOffset={0}
/>
`;

exports[`should render a default date time picker with custom date input attributes 1`] = `
<DateTimePicker
  dateInputAttributes={
    Object {
      "id": "terra-date-input",
    }
  }
  disabled={false}
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": null,
      "now": [Function],
      "onError": [Function],
      "textComponent": "span",
      "timeZone": null,
    }
  }
  isIncomplete={false}
  isInvalid={false}
  isInvalidMeridiem={false}
  maxDate="2100-12-31"
  minDate="1900-01-01"
  name="date-time-input"
  required={false}
  showSeconds={false}
  timeVariant="24-hour"
  utcOffset={0}
/>
`;

exports[`should render a default date time picker with custom time input attributes 1`] = `
<DateTimePicker
  disabled={false}
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": null,
      "now": [Function],
      "onError": [Function],
      "textComponent": "span",
      "timeZone": null,
    }
  }
  isIncomplete={false}
  isInvalid={false}
  isInvalidMeridiem={false}
  maxDate="2100-12-31"
  minDate="1900-01-01"
  name="date-time-input"
  required={false}
  showSeconds={false}
  timeInputAttributes={
    Object {
      "id": "terra-time-input",
    }
  }
  timeVariant="24-hour"
  utcOffset={0}
/>
`;

exports[`should render a disabled date time picker 1`] = `
<DateTimePicker
  disabled={true}
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": null,
      "now": [Function],
      "onError": [Function],
      "textComponent": "span",
      "timeZone": null,
    }
  }
  isIncomplete={false}
  isInvalid={false}
  isInvalidMeridiem={false}
  maxDate="2100-12-31"
  minDate="1900-01-01"
  name="date-time-input"
  required={false}
  showSeconds={false}
  timeVariant="24-hour"
  utcOffset={0}
/>
`;

exports[`should render with a default timeVariant if variant is not specified 1`] = `
<DateTimePicker
  disabled={false}
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": null,
      "now": [Function],
      "onError": [Function],
      "textComponent": "span",
      "timeZone": null,
    }
  }
  isIncomplete={false}
  isInvalid={false}
  isInvalidMeridiem={false}
  maxDate="2100-12-31"
  minDate="1900-01-01"
  name="date-time-input"
  required={false}
  showSeconds={false}
  timeVariant="24-hour"
  utcOffset={0}
  value="2017-04-01T10:30"
/>
`;
