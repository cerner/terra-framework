// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ApplicationLayout Snapshot Tests renders the ApplicationLayout with given props 1`] = `
<ModalManager
  closeOnOutsideClick={false}
  shouldTrapFocus={false}
  zIndex="6000"
>
  <withRouter(NavigationLayout)
    config={
      {
        "content": {
          "/item_1": {
            "component": {
              "default": {
                "componentClass": [Function],
                "props": {
                  "test": "content props item 1",
                },
              },
            },
            "path": "/item_1",
          },
          "/item_2": {
            "component": {
              "default": {
                "componentClass": [Function],
                "props": {
                  "test": "content props item 2",
                },
              },
            },
            "path": "/item_2",
          },
        },
        "menu": {
          "/": {
            "component": {
              "small": {
                "componentClass": [Function],
                "props": {
                  "applicationMenuWrapperProps": {
                    "contentComponentClass": [Function],
                    "extensions": <div>
                      Extensions
                    </div>,
                    "nameConfig": {
                      "accessory": <div>
                        accessory
                      </div>,
                      "title": "name config title",
                    },
                    "utilityConfig": {
                      "accessory": <div>
                        Avatar
                      </div>,
                      "initialSelectedKey": "utility 1",
                      "menuItems": [
                        {
                          "childKeys": [
                            "utility 2",
                          ],
                          "key": "utility 1",
                          "title": "Utility 1",
                        },
                        {
                          "key": "utility 2",
                          "title": "Utility 2",
                        },
                      ],
                      "onBlur": [Function],
                      "onChange": [Function],
                      "title": "Swanson, Henry",
                    },
                  },
                  "menuItems": [
                    {
                      "externalLink": undefined,
                      "hasSubMenu": true,
                      "path": "/item_1",
                      "text": "Item 1",
                    },
                    {
                      "externalLink": undefined,
                      "hasSubMenu": true,
                      "path": "/item_2",
                      "text": "Item 2",
                    },
                  ],
                },
                "refuseRoutingStackNavigation": false,
              },
              "tiny": {
                "componentClass": [Function],
                "props": {
                  "applicationMenuWrapperProps": {
                    "contentComponentClass": [Function],
                    "extensions": <div>
                      Extensions
                    </div>,
                    "nameConfig": {
                      "accessory": <div>
                        accessory
                      </div>,
                      "title": "name config title",
                    },
                    "utilityConfig": {
                      "accessory": <div>
                        Avatar
                      </div>,
                      "initialSelectedKey": "utility 1",
                      "menuItems": [
                        {
                          "childKeys": [
                            "utility 2",
                          ],
                          "key": "utility 1",
                          "title": "Utility 1",
                        },
                        {
                          "key": "utility 2",
                          "title": "Utility 2",
                        },
                      ],
                      "onBlur": [Function],
                      "onChange": [Function],
                      "title": "Swanson, Henry",
                    },
                  },
                  "menuItems": [
                    {
                      "externalLink": undefined,
                      "hasSubMenu": true,
                      "path": "/item_1",
                      "text": "Item 1",
                    },
                    {
                      "externalLink": undefined,
                      "hasSubMenu": true,
                      "path": "/item_2",
                      "text": "Item 2",
                    },
                  ],
                },
                "refuseRoutingStackNavigation": false,
              },
            },
            "path": "/",
          },
          "/item_1": {
            "component": {
              "default": {
                "componentClass": [Function],
                "props": {
                  "applicationMenuWrapperProps": {
                    "contentComponentClass": [Function],
                    "extensions": <div>
                      Extensions
                    </div>,
                    "nameConfig": {
                      "accessory": <div>
                        accessory
                      </div>,
                      "title": "name config title",
                    },
                    "utilityConfig": {
                      "accessory": <div>
                        Avatar
                      </div>,
                      "initialSelectedKey": "utility 1",
                      "menuItems": [
                        {
                          "childKeys": [
                            "utility 2",
                          ],
                          "key": "utility 1",
                          "title": "Utility 1",
                        },
                        {
                          "key": "utility 2",
                          "title": "Utility 2",
                        },
                      ],
                      "onBlur": [Function],
                      "onChange": [Function],
                      "title": "Swanson, Henry",
                    },
                  },
                  "test": "menu props item 1",
                },
              },
            },
            "path": "/item_1",
          },
          "/item_2": {
            "component": {
              "medium": {
                "componentClass": [Function],
                "props": {
                  "applicationMenuWrapperProps": {
                    "contentComponentClass": [Function],
                    "extensions": <div>
                      Extensions
                    </div>,
                    "nameConfig": {
                      "accessory": <div>
                        accessory
                      </div>,
                      "title": "name config title",
                    },
                    "utilityConfig": {
                      "accessory": <div>
                        Avatar
                      </div>,
                      "initialSelectedKey": "utility 1",
                      "menuItems": [
                        {
                          "childKeys": [
                            "utility 2",
                          ],
                          "key": "utility 1",
                          "title": "Utility 1",
                        },
                        {
                          "key": "utility 2",
                          "title": "Utility 2",
                        },
                      ],
                      "onBlur": [Function],
                      "onChange": [Function],
                      "title": "Swanson, Henry",
                    },
                  },
                  "test": "content props item 2",
                },
              },
            },
            "path": "/item_2",
          },
        },
      }
    }
    header={
      <InjectIntl(withDisclosureManager(ApplicationHeader))
        applicationLinks={
          {
            "alignment": undefined,
            "links": [
              {
                "externalLink": undefined,
                "icon": undefined,
                "id": "application-layout-tab-0",
                "path": "/item_1",
                "text": "Item 1",
              },
              {
                "externalLink": undefined,
                "icon": undefined,
                "id": "application-layout-tab-1",
                "path": "/item_2",
                "text": "Item 2",
              },
            ],
          }
        }
        extensions={
          <div>
            Extensions
          </div>
        }
        hasIcons={false}
        nameConfig={
          {
            "accessory": <div>
              accessory
            </div>,
            "title": "name config title",
          }
        }
        utilityConfig={
          {
            "accessory": <div>
              Avatar
            </div>,
            "initialSelectedKey": "utility 1",
            "menuItems": [
              {
                "childKeys": [
                  "utility 2",
                ],
                "key": "utility 1",
                "title": "Utility 1",
              },
              {
                "key": "utility 2",
                "title": "Utility 2",
              },
            ],
            "onBlur": [Function],
            "onChange": [Function],
            "title": "Swanson, Henry",
          }
        }
      />
    }
    indexPath="/item_1"
  />
</ModalManager>
`;

exports[`ApplicationLayout Snapshot Tests renders the ApplicationLayout with only required props 1`] = `
<ModalManager
  closeOnOutsideClick={false}
  shouldTrapFocus={false}
  zIndex="6000"
>
  <withRouter(NavigationLayout)
    config={
      {
        "content": {
          "/item_1": {
            "component": {
              "default": {
                "componentClass": [Function],
                "props": {
                  "test": "content props item 1",
                },
              },
            },
            "path": "/item_1",
          },
          "/item_2": {
            "component": {
              "default": {
                "componentClass": [Function],
                "props": {
                  "test": "content props item 2",
                },
              },
            },
            "path": "/item_2",
          },
        },
        "menu": {
          "/": {
            "component": {
              "small": {
                "componentClass": [Function],
                "props": {
                  "applicationMenuWrapperProps": {
                    "contentComponentClass": [Function],
                    "extensions": undefined,
                    "nameConfig": undefined,
                    "utilityConfig": undefined,
                  },
                  "menuItems": [],
                },
                "refuseRoutingStackNavigation": true,
              },
              "tiny": {
                "componentClass": [Function],
                "props": {
                  "applicationMenuWrapperProps": {
                    "contentComponentClass": [Function],
                    "extensions": undefined,
                    "nameConfig": undefined,
                    "utilityConfig": undefined,
                  },
                  "menuItems": [],
                },
                "refuseRoutingStackNavigation": true,
              },
            },
            "path": "/",
          },
          "/item_1": {
            "component": {
              "default": {
                "componentClass": [Function],
                "props": {
                  "applicationMenuWrapperProps": {
                    "contentComponentClass": [Function],
                    "extensions": undefined,
                    "nameConfig": undefined,
                    "utilityConfig": undefined,
                  },
                  "test": "menu props item 1",
                },
              },
            },
            "path": "/item_1",
          },
          "/item_2": {
            "component": {
              "medium": {
                "componentClass": [Function],
                "props": {
                  "applicationMenuWrapperProps": {
                    "contentComponentClass": [Function],
                    "extensions": undefined,
                    "nameConfig": undefined,
                    "utilityConfig": undefined,
                  },
                  "test": "content props item 2",
                },
              },
            },
            "path": "/item_2",
          },
        },
      }
    }
    header={
      <InjectIntl(withDisclosureManager(ApplicationHeader))
        applicationLinks={
          {
            "alignment": undefined,
            "links": [],
          }
        }
        hasIcons={false}
      />
    }
    indexPath="/item_1"
  />
</ModalManager>
`;

exports[`ApplicationLayout Snapshot Tests when given nav items with icons matches the snapshot 1`] = `
<ModalManager
  closeOnOutsideClick={false}
  shouldTrapFocus={false}
  zIndex="6000"
>
  <withRouter(NavigationLayout)
    config={
      {
        "content": {
          "/item_1": {
            "component": {
              "default": {
                "componentClass": [Function],
                "props": {
                  "test": "content props item 1",
                },
              },
            },
            "path": "/item_1",
          },
          "/item_2": {
            "component": {
              "default": {
                "componentClass": [Function],
                "props": {
                  "test": "content props item 2",
                },
              },
            },
            "path": "/item_2",
          },
        },
        "menu": {
          "/": {
            "component": {
              "small": {
                "componentClass": [Function],
                "props": {
                  "applicationMenuWrapperProps": {
                    "contentComponentClass": [Function],
                    "extensions": undefined,
                    "nameConfig": undefined,
                    "utilityConfig": undefined,
                  },
                  "menuItems": [
                    {
                      "externalLink": undefined,
                      "hasSubMenu": true,
                      "path": "/item_1",
                      "text": "Item 1",
                    },
                    {
                      "externalLink": undefined,
                      "hasSubMenu": true,
                      "path": "/item_2",
                      "text": "Item 2",
                    },
                  ],
                },
                "refuseRoutingStackNavigation": false,
              },
              "tiny": {
                "componentClass": [Function],
                "props": {
                  "applicationMenuWrapperProps": {
                    "contentComponentClass": [Function],
                    "extensions": undefined,
                    "nameConfig": undefined,
                    "utilityConfig": undefined,
                  },
                  "menuItems": [
                    {
                      "externalLink": undefined,
                      "hasSubMenu": true,
                      "path": "/item_1",
                      "text": "Item 1",
                    },
                    {
                      "externalLink": undefined,
                      "hasSubMenu": true,
                      "path": "/item_2",
                      "text": "Item 2",
                    },
                  ],
                },
                "refuseRoutingStackNavigation": false,
              },
            },
            "path": "/",
          },
          "/item_1": {
            "component": {
              "default": {
                "componentClass": [Function],
                "props": {
                  "applicationMenuWrapperProps": {
                    "contentComponentClass": [Function],
                    "extensions": undefined,
                    "nameConfig": undefined,
                    "utilityConfig": undefined,
                  },
                  "test": "menu props item 1",
                },
              },
            },
            "path": "/item_1",
          },
          "/item_2": {
            "component": {
              "medium": {
                "componentClass": [Function],
                "props": {
                  "applicationMenuWrapperProps": {
                    "contentComponentClass": [Function],
                    "extensions": undefined,
                    "nameConfig": undefined,
                    "utilityConfig": undefined,
                  },
                  "test": "content props item 2",
                },
              },
            },
            "path": "/item_2",
          },
        },
      }
    }
    header={
      <InjectIntl(withDisclosureManager(ApplicationHeader))
        applicationLinks={
          {
            "alignment": undefined,
            "links": [
              {
                "externalLink": undefined,
                "icon": <IconFeatured
                  data-name="Layer 1"
                  viewBox="0 0 48 48"
                  xmlns="http://www.w3.org/2000/svg"
                />,
                "id": "application-layout-tab-0",
                "path": "/item_1",
                "text": "Item 1",
              },
              {
                "externalLink": undefined,
                "icon": <IconFeatured
                  data-name="Layer 1"
                  viewBox="0 0 48 48"
                  xmlns="http://www.w3.org/2000/svg"
                />,
                "id": "application-layout-tab-1",
                "path": "/item_2",
                "text": "Item 2",
              },
            ],
          }
        }
        hasIcons={true}
      />
    }
    indexPath="/item_1"
  />
</ModalManager>
`;
