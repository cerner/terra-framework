"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _react = _interopRequireDefault(require("react"));
var _propTypes = _interopRequireDefault(require("prop-types"));
var _bind = _interopRequireDefault(require("classnames/bind"));
var _terraThemeContext = _interopRequireDefault(require("terra-theme-context"));
var _NoticeModule = _interopRequireDefault(require("./Notice.module.scss"));
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
var cx = _bind.default.bind(_NoticeModule.default);
var getTitle = function getTitle(variant) {
  if (variant === 'ux-recommendation') {
    return 'UX Recommendation';
  }
  if (variant === 'caution') {
    return 'Caution';
  }
  if (variant === 'deprecation') {
    return 'Deprecation Notice';
  }
  if (variant === 'maintenance') {
    return 'In Maintenance';
  }
  if (variant === 'important') {
    return 'Important';
  }
  if (variant === 'not-supported') {
    return 'Hazards for Incorrect Usage';
  }
  return 'error';
};
var getStaticContent = function getStaticContent(variant) {
  if (variant === 'not-supported') {
    return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement("p", {
      className: cx('paragraph')
    }, "This component was designed and tested according to the documented implementation."), /*#__PURE__*/_react.default.createElement("p", {
      className: cx('paragraph')
    }, "Using the component incorrectly:", /*#__PURE__*/_react.default.createElement("ul", {
      className: cx('list')
    }, /*#__PURE__*/_react.default.createElement("li", null, "will likely result in improper composition and create accessibility issues"), /*#__PURE__*/_react.default.createElement("li", null, "may cause erratic or broken behaviors and styles"), /*#__PURE__*/_react.default.createElement("li", null, /*#__PURE__*/_react.default.createElement("strong", null, "will not be supported "), "or enhanced to allow for incorrect use"))));
  }
  return null;
};
var propTypes = {
  /**
   * The aria-level attribute specifies the heading level of the notice. If no level is present, a value of 2 is the default.
   */
  ariaLevel: _propTypes.default.oneOf(['2', '3', '4', '5', '6']),
  /**
  * The main body text of the notice. Generally a string or a p tag.
  */
  children: _propTypes.default.node,
  /**
  * The type of notice.
  */
  variant: _propTypes.default.oneOf(['ux-recommendation', 'caution', 'deprecation', 'maintenance', 'important', 'not-supported'])
};
var defaultProps = {
  ariaLevel: '2',
  variant: 'important'
};
var Notice = function Notice(_ref) {
  var ariaLevel = _ref.ariaLevel,
    variant = _ref.variant,
    children = _ref.children;
  var theme = _react.default.useContext(_terraThemeContext.default);
  return /*#__PURE__*/_react.default.createElement("div", {
    className: cx('notice', variant, theme.className)
  }, /*#__PURE__*/_react.default.createElement("div", {
    className: cx('accessory'),
    "aria-hidden": "true",
    focusable: "false"
  }), /*#__PURE__*/_react.default.createElement("div", {
    role: "heading",
    className: cx('title'),
    "aria-level": ariaLevel
  }, /*#__PURE__*/_react.default.createElement("span", null, getTitle(variant))), /*#__PURE__*/_react.default.createElement("div", {
    className: cx('children')
  }, getStaticContent(variant),
  // Wrap any string children in a p tag.
  _react.default.Children.map(children, function (element) {
    if (typeof element === 'string') {
      return /*#__PURE__*/_react.default.createElement("p", null, element);
    }
    return element;
  })));
};
Notice.propTypes = propTypes;
Notice.defaultProps = defaultProps;
var _default = Notice;
exports.default = _default;