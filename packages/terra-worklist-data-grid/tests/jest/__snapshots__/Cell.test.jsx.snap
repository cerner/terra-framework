// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Cell verifies mask takes precedence when cell is masked, selectable and selected 1`] = `
<td
  aria-label="Some Label Here"
  aria-selected={true}
  className="worklist-data-grid-cell masked"
  onClick={[Function]}
  onKeyDown={[Function]}
  tabIndex={-1}
>
  <FocusTrap
    _createFocusTrap={[Function]}
    active={false}
    focusTrapOptions={
      Object {
        "clickOutsideDeactivates": true,
        "escapeDeactivates": false,
        "onDeactivate": [Function],
        "returnFocusOnDeactivate": true,
      }
    }
    paused={false}
  >
    <div
      className="cell-content"
      style={
        Object {
          "height": undefined,
        }
      }
    >
      <span
        className="no-data-cell"
      >
        Terra.worklistDataGrid.maskedCell
      </span>
    </div>
  </FocusTrap>
  <VisuallyHiddenText
    aria-live="polite"
    text={null}
  />
</td>
`;

exports[`Cell verifies that a cell has the correct styles and no content when isMasked prop is true 1`] = `
<td
  aria-label="Some Label Here"
  aria-selected={false}
  className="worklist-data-grid-cell masked"
  onClick={[Function]}
  onKeyDown={[Function]}
  tabIndex={-1}
>
  <FocusTrap
    _createFocusTrap={[Function]}
    active={false}
    focusTrapOptions={
      Object {
        "clickOutsideDeactivates": true,
        "escapeDeactivates": false,
        "onDeactivate": [Function],
        "returnFocusOnDeactivate": true,
      }
    }
    paused={false}
  >
    <div
      className="cell-content"
      style={
        Object {
          "height": undefined,
        }
      }
    >
      <span
        className="no-data-cell"
      >
        Terra.worklistDataGrid.maskedCell
      </span>
    </div>
  </FocusTrap>
  <VisuallyHiddenText
    aria-live="polite"
    text={null}
  />
</td>
`;

exports[`Cell verifies that a selected cell has the correct styles when isSelected prop is true 1`] = `
<td
  aria-label="Some Label Here"
  aria-selected={true}
  className="worklist-data-grid-cell selectable selected"
  onClick={[Function]}
  onKeyDown={[Function]}
  tabIndex={-1}
>
  <FocusTrap
    _createFocusTrap={[Function]}
    active={false}
    focusTrapOptions={
      Object {
        "clickOutsideDeactivates": true,
        "escapeDeactivates": false,
        "onDeactivate": [Function],
        "returnFocusOnDeactivate": true,
      }
    }
    paused={false}
  >
    <div
      className="cell-content"
      style={
        Object {
          "height": undefined,
        }
      }
    >
      Data in cell
    </div>
  </FocusTrap>
  <VisuallyHiddenText
    aria-live="polite"
    text={null}
  />
</td>
`;

exports[`Cell verifies that only a regular cell(<td>) is created when isRowHeader prop is false 1`] = `
<td
  aria-selected={false}
  className="worklist-data-grid-cell selectable"
  onClick={[Function]}
  onKeyDown={[Function]}
  tabIndex={-1}
>
  <FocusTrap
    _createFocusTrap={[Function]}
    active={false}
    focusTrapOptions={
      Object {
        "clickOutsideDeactivates": true,
        "escapeDeactivates": false,
        "onDeactivate": [Function],
        "returnFocusOnDeactivate": true,
      }
    }
    paused={false}
  >
    <div
      className="cell-content"
      style={
        Object {
          "height": undefined,
        }
      }
    >
      Data in cell
    </div>
  </FocusTrap>
  <VisuallyHiddenText
    aria-live="polite"
    text={null}
  />
</td>
`;

exports[`Cell verifies that only a row header cell (<th>) is created when isRowHeader prop is true 1`] = `
<th
  aria-selected={false}
  className="worklist-data-grid-cell selectable"
  onClick={[Function]}
  onKeyDown={[Function]}
  role="rowheader"
  scope="row"
  tabIndex={-1}
>
  <FocusTrap
    _createFocusTrap={[Function]}
    active={false}
    focusTrapOptions={
      Object {
        "clickOutsideDeactivates": true,
        "escapeDeactivates": false,
        "onDeactivate": [Function],
        "returnFocusOnDeactivate": true,
      }
    }
    paused={false}
  >
    <div
      className="cell-content"
      style={
        Object {
          "height": "50px",
        }
      }
    >
      Data in cell
    </div>
  </FocusTrap>
  <VisuallyHiddenText
    aria-live="polite"
    text={null}
  />
</th>
`;

exports[`Cell verifies that the cell rendered is marked blank when the cell content is empty 1`] = `
<td
  aria-selected={false}
  className="worklist-data-grid-cell selectable blank"
  onClick={[Function]}
  onKeyDown={[Function]}
  tabIndex={-1}
>
  <FocusTrap
    _createFocusTrap={[Function]}
    active={false}
    focusTrapOptions={
      Object {
        "clickOutsideDeactivates": true,
        "escapeDeactivates": false,
        "onDeactivate": [Function],
        "returnFocusOnDeactivate": true,
      }
    }
    paused={false}
  >
    <div
      className="cell-content"
      style={
        Object {
          "height": undefined,
        }
      }
    >
      <span
        className="no-data-cell"
      >
        Terra.worklistDataGrid.blank
      </span>
    </div>
  </FocusTrap>
  <VisuallyHiddenText
    aria-live="polite"
    text={null}
  />
</td>
`;

exports[`Cell verifies that the cell rendered is marked selectable when isSelectable prop is true 1`] = `
<td
  aria-selected={false}
  className="worklist-data-grid-cell selectable"
  onClick={[Function]}
  onKeyDown={[Function]}
  tabIndex={-1}
>
  <FocusTrap
    _createFocusTrap={[Function]}
    active={false}
    focusTrapOptions={
      Object {
        "clickOutsideDeactivates": true,
        "escapeDeactivates": false,
        "onDeactivate": [Function],
        "returnFocusOnDeactivate": true,
      }
    }
    paused={false}
  >
    <div
      className="cell-content"
      style={
        Object {
          "height": undefined,
        }
      }
    >
      Data in cell
    </div>
  </FocusTrap>
  <VisuallyHiddenText
    aria-live="polite"
    text={null}
  />
</td>
`;
