// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`correctly applies the theme context className 1`] = `
<ThemeContextProvider
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": null,
      "now": [Function],
      "onError": [Function],
      "textComponent": "span",
      "timeZone": null,
    }
  }
  theme={
    Object {
      "className": "orion-fusion-theme",
    }
  }
>
  <NotificationDialog
    acceptAction={
      Object {
        "onClick": [Function],
        "text": "Confirm",
      }
    }
    buttonOrder="acceptFirst"
    content={null}
    emphasizedAction="accept"
    endMessage={null}
    isOpen={true}
    rejectAction={
      Object {
        "onClick": [Function],
        "text": "Close",
      }
    }
    startMessage="The Main Instruction is text used to provide more detail or define terminology. Don’t repeat the title verbatim."
    title="Make sure that the title relates directly to the choices."
    variant="alert"
  >
    <AbstractModal
      aria-describedby="notification-dialog-title"
      aria-labelledby="notification-dialog-header"
      ariaLabel="Notification Dialog"
      classNameModal="notification-dialog orion-fusion-theme"
      classNameOverlay={null}
      closeOnEsc={false}
      closeOnOutsideClick={false}
      data-terra-notification-dialog={true}
      isFullscreen={false}
      isOpen={true}
      onRequestClose={[Function]}
      role="alertdialog"
      rootSelector="#root"
      zIndex="9000"
    >
      <Portal
        isOpened={true}
      >
        <Portal
          containerInfo={
            <div>
              <div
                class="overlay layer-9000 orion-fusion-theme"
              />
              <div
                aria-describedby="notification-dialog-title"
                aria-label="Notification Dialog"
                aria-labelledby="notification-dialog-header"
                aria-modal="true"
                class="abstract-modal layer-9000 orion-fusion-theme notification-dialog orion-fusion-theme"
                data-terra-notification-dialog="true"
                role="alertdialog"
                tabindex="0"
              >
                <span
                  class="visually-hidden-text"
                  data-terra-abstract-modal-begin="true"
                  tabindex="-1"
                >
                  Terra.AbstractModal.BeginModalDialog
                </span>
                <div
                  class="notification-dialog-inner-wrapper"
                >
                  <div
                    class="notification-dialog-container"
                    tabindex="0"
                  >
                    <div
                      class="header-body"
                      id="notification-dialog-header"
                    >
                      <span>
                        Terra.notification.dialog.alert
                      </span>
                    </div>
                    <div
                      class="notification-dialog-body"
                    >
                      <div
                        class="icon-container"
                      >
                        <span
                          class="icon alert"
                        />
                      </div>
                      <div
                        class="text-wrapper"
                      >
                        <div
                          class="title"
                          id="notification-dialog-title"
                        >
                          Make sure that the title relates directly to the choices.
                        </div>
                        <div
                          class="message"
                        >
                          The Main Instruction is text used to provide more detail or define terminology. Don’t repeat the title verbatim.
                        </div>
                      </div>
                    </div>
                    <div
                      class="footer-body"
                    >
                      <div
                        class="actions"
                      >
                        <button
                          aria-disabled="false"
                          class="button emphasis orion-fusion-theme"
                          type="button"
                        >
                          <span
                            class="button-label text-only"
                          >
                            <span
                              class=""
                            >
                              Confirm
                            </span>
                          </span>
                        </button>
                        <button
                          aria-disabled="false"
                          class="button neutral orion-fusion-theme"
                          type="button"
                        >
                          <span
                            class="button-label text-only"
                          >
                            <span
                              class=""
                            >
                              Close
                            </span>
                          </span>
                        </button>
                      </div>
                    </div>
                  </div>
                </div>
                <span
                  class="visually-hidden-text"
                >
                  Terra.AbstractModal.EndModalDialog
                </span>
              </div>
            </div>
          }
        >
          <ForwardRef
            aria-describedby="notification-dialog-title"
            aria-labelledby="notification-dialog-header"
            aria-modal="true"
            ariaLabel="Notification Dialog"
            classNameModal="notification-dialog orion-fusion-theme"
            classNameOverlay={null}
            closeOnOutsideClick={false}
            data-terra-notification-dialog={true}
            isFullscreen={false}
            isScrollable={false}
            onRequestClose={[Function]}
            role="alertdialog"
            rootSelector="#root"
            zIndex="9000"
          >
            <ModalOverlay
              className={null}
              onClick={null}
              zIndex="9000"
            >
              <div
                className="overlay layer-9000 orion-fusion-theme"
                onClick={null}
              />
            </ModalOverlay>
            <div
              aria-describedby="notification-dialog-title"
              aria-label="Notification Dialog"
              aria-labelledby="notification-dialog-header"
              aria-modal="true"
              className="abstract-modal layer-9000 orion-fusion-theme notification-dialog orion-fusion-theme"
              data-terra-notification-dialog={true}
              role="alertdialog"
              tabIndex="0"
            >
              <FormattedMessage
                id="Terra.AbstractModal.BeginModalDialog"
                values={Object {}}
              >
                <VisuallyHiddenText
                  data-terra-abstract-modal-begin={true}
                  tabIndex="-1"
                  text="Terra.AbstractModal.BeginModalDialog"
                >
                  <span
                    className="visually-hidden-text"
                    data-terra-abstract-modal-begin={true}
                    tabIndex="-1"
                  >
                    Terra.AbstractModal.BeginModalDialog
                  </span>
                </VisuallyHiddenText>
              </FormattedMessage>
              <FocusTrap
                _createFocusTrap={[Function]}
                active={true}
                focusTrapOptions={
                  Object {
                    "clickOutsideDeactivates": false,
                    "escapeDeactivates": false,
                    "returnFocusOnDeactivate": true,
                  }
                }
                paused={false}
              >
                <div
                  className="notification-dialog-inner-wrapper"
                >
                  <div
                    className="notification-dialog-container"
                    tabIndex="0"
                  >
                    <div
                      className="header-body"
                      id="notification-dialog-header"
                    >
                      <FormattedMessage
                        id="Terra.notification.dialog.alert"
                        values={Object {}}
                      >
                        <span>
                          Terra.notification.dialog.alert
                        </span>
                      </FormattedMessage>
                    </div>
                    <div
                      className="notification-dialog-body"
                    >
                      <div
                        className="icon-container"
                      >
                        <span
                          className="icon alert"
                        />
                      </div>
                      <div
                        className="text-wrapper"
                      >
                        <div
                          className="title"
                          id="notification-dialog-title"
                        >
                          Make sure that the title relates directly to the choices.
                        </div>
                        <div
                          className="message"
                        >
                          The Main Instruction is text used to provide more detail or define terminology. Don’t repeat the title verbatim.
                        </div>
                      </div>
                    </div>
                    <div
                      className="footer-body"
                    >
                      <div
                        className="actions"
                      >
                        <Button
                          isBlock={false}
                          isCompact={false}
                          isDisabled={false}
                          isIconOnly={false}
                          isReversed={false}
                          onClick={[Function]}
                          text="Confirm"
                          type="button"
                          variant="emphasis"
                        >
                          <button
                            aria-disabled={false}
                            className="button emphasis orion-fusion-theme"
                            disabled={false}
                            onBlur={[Function]}
                            onClick={[Function]}
                            onFocus={[Function]}
                            onKeyDown={[Function]}
                            onKeyUp={[Function]}
                            onMouseDown={[Function]}
                            type="button"
                          >
                            <span
                              className="button-label text-only"
                            >
                              <span
                                className=""
                              >
                                Confirm
                              </span>
                            </span>
                          </button>
                        </Button>
                        <Button
                          isBlock={false}
                          isCompact={false}
                          isDisabled={false}
                          isIconOnly={false}
                          isReversed={false}
                          onClick={[Function]}
                          text="Close"
                          type="button"
                          variant="neutral"
                        >
                          <button
                            aria-disabled={false}
                            className="button neutral orion-fusion-theme"
                            disabled={false}
                            onBlur={[Function]}
                            onClick={[Function]}
                            onFocus={[Function]}
                            onKeyDown={[Function]}
                            onKeyUp={[Function]}
                            onMouseDown={[Function]}
                            type="button"
                          >
                            <span
                              className="button-label text-only"
                            >
                              <span
                                className=""
                              >
                                Close
                              </span>
                            </span>
                          </button>
                        </Button>
                      </div>
                    </div>
                  </div>
                </div>
              </FocusTrap>
              <FormattedMessage
                id="Terra.AbstractModal.EndModalDialog"
                values={Object {}}
              >
                <VisuallyHiddenText
                  text="Terra.AbstractModal.EndModalDialog"
                >
                  <span
                    className="visually-hidden-text"
                  >
                    Terra.AbstractModal.EndModalDialog
                  </span>
                </VisuallyHiddenText>
              </FormattedMessage>
            </div>
          </ForwardRef>
        </Portal>
      </Portal>
    </AbstractModal>
  </NotificationDialog>
</ThemeContextProvider>
`;

exports[`should mount a complete notification-dialog 1`] = `
<CompleteNotificationDialog
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": null,
      "now": [Function],
      "onError": [Function],
      "textComponent": "span",
      "timeZone": null,
    }
  }
>
  <NotificationDialog
    acceptAction={
      Object {
        "onClick": [Function],
        "text": "Confirm",
      }
    }
    buttonOrder="acceptFirst"
    content={null}
    emphasizedAction="accept"
    endMessage={null}
    isOpen={false}
    rejectAction={
      Object {
        "onClick": [Function],
        "text": "Close",
      }
    }
    startMessage="The Main Instruction is text used to provide more detail or define terminology. Don’t repeat the title verbatim."
    title="Make sure that the title relates directly to the choices."
    variant="alert"
  />
  <Button
    id="trigger-notification-dialog"
    isBlock={false}
    isCompact={false}
    isDisabled={false}
    isIconOnly={false}
    isReversed={false}
    onClick={[Function]}
    text="Trigger NotificationDialog"
    type="button"
    variant="neutral"
  >
    <button
      aria-disabled={false}
      className="button neutral"
      disabled={false}
      id="trigger-notification-dialog"
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      onKeyUp={[Function]}
      onMouseDown={[Function]}
      type="button"
    >
      <span
        className="button-label text-only"
      >
        <span
          className=""
        >
          Trigger NotificationDialog
        </span>
      </span>
    </button>
  </Button>
</CompleteNotificationDialog>
`;

exports[`should mount a complete notification-dialog with long message 1`] = `
<CompleteNotificationDialogWithLongMessage
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": null,
      "now": [Function],
      "onError": [Function],
      "textComponent": "span",
      "timeZone": null,
    }
  }
>
  <NotificationDialog
    acceptAction={
      Object {
        "onClick": [Function],
        "text": "Confirm",
      }
    }
    buttonOrder="acceptFirst"
    content={null}
    emphasizedAction="accept"
    endMessage={null}
    isOpen={false}
    rejectAction={
      Object {
        "onClick": [Function],
        "text": "Close",
      }
    }
    startMessage="This is the messageThis is the messageThis is the messageThis is the messageThis is the messageThis is the messageThis is the messageThis is the messageThis is the messageThis is the message"
    title="This is the titleThis is the titleThis is the titleThis is the titleThis is the titleThis is the titleThis is the titleThis is the title"
    variant="success"
  />
  <Button
    id="trigger-notification-dialog"
    isBlock={false}
    isCompact={false}
    isDisabled={false}
    isIconOnly={false}
    isReversed={false}
    onClick={[Function]}
    text="Trigger NotificationDialog"
    type="button"
    variant="neutral"
  >
    <button
      aria-disabled={false}
      className="button neutral"
      disabled={false}
      id="trigger-notification-dialog"
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      onKeyUp={[Function]}
      onMouseDown={[Function]}
      type="button"
    >
      <span
        className="button-label text-only"
      >
        <span
          className=""
        >
          Trigger NotificationDialog
        </span>
      </span>
    </button>
  </Button>
</CompleteNotificationDialogWithLongMessage>
`;

exports[`should mount a notification-dialog with no variant 1`] = `
<NoVariantNotificationDialog
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": null,
      "now": [Function],
      "onError": [Function],
      "textComponent": "span",
      "timeZone": null,
    }
  }
>
  <NotificationDialog
    acceptAction={
      Object {
        "onClick": [Function],
        "text": "Confirm",
      }
    }
    buttonOrder="acceptFirst"
    content={null}
    emphasizedAction="accept"
    endMessage={null}
    header="No Variant for this dialog"
    isOpen={false}
    rejectAction={
      Object {
        "onClick": [Function],
        "text": "Close",
      }
    }
    startMessage="The Main Instruction is text used to provide more detail or define terminology. Don’t repeat the title verbatim."
    title="Make sure that the title relates directly to the choices."
    variant="custom"
  />
  <Button
    id="trigger-notification-dialog"
    isBlock={false}
    isCompact={false}
    isDisabled={false}
    isIconOnly={false}
    isReversed={false}
    onClick={[Function]}
    text="Trigger Notification Dialog"
    type="button"
    variant="neutral"
  >
    <button
      aria-disabled={false}
      className="button neutral"
      disabled={false}
      id="trigger-notification-dialog"
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      onKeyUp={[Function]}
      onMouseDown={[Function]}
      type="button"
    >
      <span
        className="button-label text-only"
      >
        <span
          className=""
        >
          Trigger Notification Dialog
        </span>
      </span>
    </button>
  </Button>
</NoVariantNotificationDialog>
`;

exports[`should shallow a complete notification-dialog 1`] = `
<Fragment>
  <NotificationDialog
    acceptAction={
      Object {
        "onClick": [Function],
        "text": "Confirm",
      }
    }
    buttonOrder="acceptFirst"
    content={null}
    emphasizedAction="accept"
    endMessage={null}
    isOpen={false}
    rejectAction={
      Object {
        "onClick": [Function],
        "text": "Close",
      }
    }
    startMessage="The Main Instruction is text used to provide more detail or define terminology. Don’t repeat the title verbatim."
    title="Make sure that the title relates directly to the choices."
    variant="alert"
  />
  <Button
    id="trigger-notification-dialog"
    isBlock={false}
    isCompact={false}
    isDisabled={false}
    isIconOnly={false}
    isReversed={false}
    onClick={[Function]}
    text="Trigger NotificationDialog"
    type="button"
    variant="neutral"
  />
</Fragment>
`;

exports[`should shallow a complete notification-dialog with long message 1`] = `
<Fragment>
  <NotificationDialog
    acceptAction={
      Object {
        "onClick": [Function],
        "text": "Confirm",
      }
    }
    buttonOrder="acceptFirst"
    content={null}
    emphasizedAction="accept"
    endMessage={null}
    isOpen={false}
    rejectAction={
      Object {
        "onClick": [Function],
        "text": "Close",
      }
    }
    startMessage="This is the messageThis is the messageThis is the messageThis is the messageThis is the messageThis is the messageThis is the messageThis is the messageThis is the messageThis is the message"
    title="This is the titleThis is the titleThis is the titleThis is the titleThis is the titleThis is the titleThis is the titleThis is the title"
    variant="success"
  />
  <Button
    id="trigger-notification-dialog"
    isBlock={false}
    isCompact={false}
    isDisabled={false}
    isIconOnly={false}
    isReversed={false}
    onClick={[Function]}
    text="Trigger NotificationDialog"
    type="button"
    variant="neutral"
  />
</Fragment>
`;

exports[`should shallow a notification-dialog with no variant 1`] = `
<Fragment>
  <NotificationDialog
    acceptAction={
      Object {
        "onClick": [Function],
        "text": "Confirm",
      }
    }
    buttonOrder="acceptFirst"
    content={null}
    emphasizedAction="accept"
    endMessage={null}
    header="No Variant for this dialog"
    isOpen={false}
    rejectAction={
      Object {
        "onClick": [Function],
        "text": "Close",
      }
    }
    startMessage="The Main Instruction is text used to provide more detail or define terminology. Don’t repeat the title verbatim."
    title="Make sure that the title relates directly to the choices."
    variant="custom"
  />
  <Button
    id="trigger-notification-dialog"
    isBlock={false}
    isCompact={false}
    isDisabled={false}
    isIconOnly={false}
    isReversed={false}
    onClick={[Function]}
    text="Trigger Notification Dialog"
    type="button"
    variant="neutral"
  />
</Fragment>
`;
