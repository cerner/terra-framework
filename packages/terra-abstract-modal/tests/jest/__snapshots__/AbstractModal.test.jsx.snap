// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`correctly applies the theme context className 1`] = `
<ModalExample
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": null,
      "now": [Function],
      "onError": [Function],
      "textComponent": "span",
      "timeZone": null,
    }
  }
>
  <div>
    <AbstractModal
      ariaLabel="Terra Modal"
      classNameModal={null}
      classNameOverlay={null}
      closeOnEsc={true}
      closeOnOutsideClick={true}
      intl={
        Object {
          "defaultFormats": Object {},
          "defaultLocale": "en",
          "formatDate": [Function],
          "formatHTMLMessage": [Function],
          "formatMessage": [Function],
          "formatNumber": [Function],
          "formatPlural": [Function],
          "formatRelative": [Function],
          "formatTime": [Function],
          "formats": Object {},
          "formatters": Object {
            "getDateTimeFormat": [Function],
            "getMessageFormat": [Function],
            "getNumberFormat": [Function],
            "getPluralFormat": [Function],
            "getRelativeFormat": [Function],
          },
          "locale": "en",
          "messages": null,
          "now": [Function],
          "onError": [Function],
          "textComponent": "span",
          "timeZone": null,
        }
      }
      isFullscreen={false}
      isOpen={true}
      onRequestClose={[Function]}
      role="dialog"
      rootSelector="#root"
      trapFocus={false}
      zIndex="6000"
    >
      <Portal
        isOpened={true}
      >
        <Portal
          containerInfo={
            <div>
              <div
                class="overlay layer-6000 orion-fusion-theme"
              />
              <div
                aria-label="Terra Modal"
                aria-modal="true"
                class="abstract-modal layer-6000 orion-fusion-theme"
                intl="[object Object]"
                role="dialog"
                tabindex="0"
              >
                <div
                  class="abstract-modal-container"
                  data-terra-abstract-modal-begin="true"
                  tabindex="-1"
                >
                  <span
                    class="visually-hidden-text"
                  >
                    Terra.AbstractModal.BeginModalDialog
                  </span>
                  <div>
                    <h1>
                      Terra Modal
                    </h1>
                    <button
                      type="button"
                    >
                      Close Modal
                    </button>
                  </div>
                  <span
                    class="visually-hidden-text"
                  >
                    Terra.AbstractModal.EndModalDialog
                  </span>
                </div>
              </div>
            </div>
          }
        >
          <ForwardRef
            aria-modal="true"
            ariaLabel="Terra Modal"
            classNameModal={null}
            classNameOverlay={null}
            closeOnOutsideClick={true}
            intl={
              Object {
                "defaultFormats": Object {},
                "defaultLocale": "en",
                "formatDate": [Function],
                "formatHTMLMessage": [Function],
                "formatMessage": [Function],
                "formatNumber": [Function],
                "formatPlural": [Function],
                "formatRelative": [Function],
                "formatTime": [Function],
                "formats": Object {},
                "formatters": Object {
                  "getDateTimeFormat": [Function],
                  "getMessageFormat": [Function],
                  "getNumberFormat": [Function],
                  "getPluralFormat": [Function],
                  "getRelativeFormat": [Function],
                },
                "locale": "en",
                "messages": null,
                "now": [Function],
                "onError": [Function],
                "textComponent": "span",
                "timeZone": null,
              }
            }
            isFullscreen={false}
            isScrollable={false}
            onKeyDown={[Function]}
            onRequestClose={[Function]}
            role="dialog"
            rootSelector="#root"
            trapFocus={false}
            zIndex="6000"
          >
            <ModalOverlay
              className={null}
              onClick={[Function]}
              zIndex="6000"
            >
              <div
                className="overlay layer-6000 orion-fusion-theme"
                onClick={[Function]}
              />
            </ModalOverlay>
            <div
              aria-label="Terra Modal"
              aria-modal="true"
              className="abstract-modal layer-6000 orion-fusion-theme"
              intl={
                Object {
                  "defaultFormats": Object {},
                  "defaultLocale": "en",
                  "formatDate": [Function],
                  "formatHTMLMessage": [Function],
                  "formatMessage": [Function],
                  "formatNumber": [Function],
                  "formatPlural": [Function],
                  "formatRelative": [Function],
                  "formatTime": [Function],
                  "formats": Object {},
                  "formatters": Object {
                    "getDateTimeFormat": [Function],
                    "getMessageFormat": [Function],
                    "getNumberFormat": [Function],
                    "getPluralFormat": [Function],
                    "getRelativeFormat": [Function],
                  },
                  "locale": "en",
                  "messages": null,
                  "now": [Function],
                  "onError": [Function],
                  "textComponent": "span",
                  "timeZone": null,
                }
              }
              onKeyDown={[Function]}
              role="dialog"
              tabIndex="0"
            >
              <FocusTrapWrapper
                trapFocus={false}
              >
                <div
                  className="abstract-modal-container"
                  data-terra-abstract-modal-begin={true}
                  tabIndex="-1"
                >
                  <FormattedMessage
                    id="Terra.AbstractModal.BeginModalDialog"
                    values={Object {}}
                  >
                    <VisuallyHiddenText
                      text="Terra.AbstractModal.BeginModalDialog"
                    >
                      <span
                        className="visually-hidden-text"
                      >
                        Terra.AbstractModal.BeginModalDialog
                      </span>
                    </VisuallyHiddenText>
                  </FormattedMessage>
                  <div>
                    <h1>
                      Terra Modal
                    </h1>
                    <button
                      onClick={[Function]}
                      type="button"
                    >
                      Close Modal
                    </button>
                  </div>
                  <FormattedMessage
                    id="Terra.AbstractModal.EndModalDialog"
                    values={Object {}}
                  >
                    <VisuallyHiddenText
                      text="Terra.AbstractModal.EndModalDialog"
                    >
                      <span
                        className="visually-hidden-text"
                      >
                        Terra.AbstractModal.EndModalDialog
                      </span>
                    </VisuallyHiddenText>
                  </FormattedMessage>
                </div>
              </FocusTrapWrapper>
            </div>
          </ForwardRef>
        </Portal>
      </Portal>
    </AbstractModal>
    <button
      onClick={[Function]}
      type="button"
    >
      Open Modal
    </button>
  </div>
</ModalExample>
`;

exports[`should mount an open modal 1`] = `
<ModalExample
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": null,
      "now": [Function],
      "onError": [Function],
      "textComponent": "span",
      "timeZone": null,
    }
  }
>
  <div>
    <AbstractModal
      ariaLabel="Terra Modal"
      classNameModal={null}
      classNameOverlay={null}
      closeOnEsc={true}
      closeOnOutsideClick={true}
      intl={
        Object {
          "defaultFormats": Object {},
          "defaultLocale": "en",
          "formatDate": [Function],
          "formatHTMLMessage": [Function],
          "formatMessage": [Function],
          "formatNumber": [Function],
          "formatPlural": [Function],
          "formatRelative": [Function],
          "formatTime": [Function],
          "formats": Object {},
          "formatters": Object {
            "getDateTimeFormat": [Function],
            "getMessageFormat": [Function],
            "getNumberFormat": [Function],
            "getPluralFormat": [Function],
            "getRelativeFormat": [Function],
          },
          "locale": "en",
          "messages": null,
          "now": [Function],
          "onError": [Function],
          "textComponent": "span",
          "timeZone": null,
        }
      }
      isFullscreen={false}
      isOpen={true}
      onRequestClose={[Function]}
      role="dialog"
      rootSelector="#root"
      trapFocus={false}
      zIndex="6000"
    >
      <Portal
        isOpened={true}
      >
        <Portal
          containerInfo={
            <div>
              <div
                class="overlay layer-6000"
              />
              <div
                aria-label="Terra Modal"
                aria-modal="true"
                class="abstract-modal layer-6000"
                intl="[object Object]"
                role="dialog"
                tabindex="0"
              >
                <div
                  class="abstract-modal-container"
                  data-terra-abstract-modal-begin="true"
                  tabindex="-1"
                >
                  <span
                    class="visually-hidden-text"
                  >
                    Terra.AbstractModal.BeginModalDialog
                  </span>
                  <div>
                    <h1>
                      Terra Modal
                    </h1>
                    <button
                      type="button"
                    >
                      Close Modal
                    </button>
                  </div>
                  <span
                    class="visually-hidden-text"
                  >
                    Terra.AbstractModal.EndModalDialog
                  </span>
                </div>
              </div>
            </div>
          }
        >
          <ForwardRef
            aria-modal="true"
            ariaLabel="Terra Modal"
            classNameModal={null}
            classNameOverlay={null}
            closeOnOutsideClick={true}
            intl={
              Object {
                "defaultFormats": Object {},
                "defaultLocale": "en",
                "formatDate": [Function],
                "formatHTMLMessage": [Function],
                "formatMessage": [Function],
                "formatNumber": [Function],
                "formatPlural": [Function],
                "formatRelative": [Function],
                "formatTime": [Function],
                "formats": Object {},
                "formatters": Object {
                  "getDateTimeFormat": [Function],
                  "getMessageFormat": [Function],
                  "getNumberFormat": [Function],
                  "getPluralFormat": [Function],
                  "getRelativeFormat": [Function],
                },
                "locale": "en",
                "messages": null,
                "now": [Function],
                "onError": [Function],
                "textComponent": "span",
                "timeZone": null,
              }
            }
            isFullscreen={false}
            isScrollable={false}
            onKeyDown={[Function]}
            onRequestClose={[Function]}
            role="dialog"
            rootSelector="#root"
            trapFocus={false}
            zIndex="6000"
          >
            <ModalOverlay
              className={null}
              onClick={[Function]}
              zIndex="6000"
            >
              <div
                className="overlay layer-6000"
                onClick={[Function]}
              />
            </ModalOverlay>
            <div
              aria-label="Terra Modal"
              aria-modal="true"
              className="abstract-modal layer-6000"
              intl={
                Object {
                  "defaultFormats": Object {},
                  "defaultLocale": "en",
                  "formatDate": [Function],
                  "formatHTMLMessage": [Function],
                  "formatMessage": [Function],
                  "formatNumber": [Function],
                  "formatPlural": [Function],
                  "formatRelative": [Function],
                  "formatTime": [Function],
                  "formats": Object {},
                  "formatters": Object {
                    "getDateTimeFormat": [Function],
                    "getMessageFormat": [Function],
                    "getNumberFormat": [Function],
                    "getPluralFormat": [Function],
                    "getRelativeFormat": [Function],
                  },
                  "locale": "en",
                  "messages": null,
                  "now": [Function],
                  "onError": [Function],
                  "textComponent": "span",
                  "timeZone": null,
                }
              }
              onKeyDown={[Function]}
              role="dialog"
              tabIndex="0"
            >
              <FocusTrapWrapper
                trapFocus={false}
              >
                <div
                  className="abstract-modal-container"
                  data-terra-abstract-modal-begin={true}
                  tabIndex="-1"
                >
                  <FormattedMessage
                    id="Terra.AbstractModal.BeginModalDialog"
                    values={Object {}}
                  >
                    <VisuallyHiddenText
                      text="Terra.AbstractModal.BeginModalDialog"
                    >
                      <span
                        className="visually-hidden-text"
                      >
                        Terra.AbstractModal.BeginModalDialog
                      </span>
                    </VisuallyHiddenText>
                  </FormattedMessage>
                  <div>
                    <h1>
                      Terra Modal
                    </h1>
                    <button
                      onClick={[Function]}
                      type="button"
                    >
                      Close Modal
                    </button>
                  </div>
                  <FormattedMessage
                    id="Terra.AbstractModal.EndModalDialog"
                    values={Object {}}
                  >
                    <VisuallyHiddenText
                      text="Terra.AbstractModal.EndModalDialog"
                    >
                      <span
                        className="visually-hidden-text"
                      >
                        Terra.AbstractModal.EndModalDialog
                      </span>
                    </VisuallyHiddenText>
                  </FormattedMessage>
                </div>
              </FocusTrapWrapper>
            </div>
          </ForwardRef>
        </Portal>
      </Portal>
    </AbstractModal>
    <button
      onClick={[Function]}
      type="button"
    >
      Open Modal
    </button>
  </div>
</ModalExample>
`;

exports[`should mount an open modal 7000 z-index 1`] = `
<ModalExample
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": null,
      "now": [Function],
      "onError": [Function],
      "textComponent": "span",
      "timeZone": null,
    }
  }
  zIndex="7000"
>
  <div>
    <AbstractModal
      ariaLabel="Terra Modal"
      classNameModal={null}
      classNameOverlay={null}
      closeOnEsc={true}
      closeOnOutsideClick={true}
      intl={
        Object {
          "defaultFormats": Object {},
          "defaultLocale": "en",
          "formatDate": [Function],
          "formatHTMLMessage": [Function],
          "formatMessage": [Function],
          "formatNumber": [Function],
          "formatPlural": [Function],
          "formatRelative": [Function],
          "formatTime": [Function],
          "formats": Object {},
          "formatters": Object {
            "getDateTimeFormat": [Function],
            "getMessageFormat": [Function],
            "getNumberFormat": [Function],
            "getPluralFormat": [Function],
            "getRelativeFormat": [Function],
          },
          "locale": "en",
          "messages": null,
          "now": [Function],
          "onError": [Function],
          "textComponent": "span",
          "timeZone": null,
        }
      }
      isFullscreen={false}
      isOpen={true}
      onRequestClose={[Function]}
      role="dialog"
      rootSelector="#root"
      trapFocus={false}
      zIndex="7000"
    >
      <Portal
        isOpened={true}
      >
        <Portal
          containerInfo={
            <div>
              <div
                class="overlay layer-7000"
              />
              <div
                aria-label="Terra Modal"
                aria-modal="true"
                class="abstract-modal layer-7000"
                intl="[object Object]"
                role="dialog"
                tabindex="0"
              >
                <div
                  class="abstract-modal-container"
                  data-terra-abstract-modal-begin="true"
                  tabindex="-1"
                >
                  <span
                    class="visually-hidden-text"
                  >
                    Terra.AbstractModal.BeginModalDialog
                  </span>
                  <div>
                    <h1>
                      Terra Modal
                    </h1>
                    <button
                      type="button"
                    >
                      Close Modal
                    </button>
                  </div>
                  <span
                    class="visually-hidden-text"
                  >
                    Terra.AbstractModal.EndModalDialog
                  </span>
                </div>
              </div>
            </div>
          }
        >
          <ForwardRef
            aria-modal="true"
            ariaLabel="Terra Modal"
            classNameModal={null}
            classNameOverlay={null}
            closeOnOutsideClick={true}
            intl={
              Object {
                "defaultFormats": Object {},
                "defaultLocale": "en",
                "formatDate": [Function],
                "formatHTMLMessage": [Function],
                "formatMessage": [Function],
                "formatNumber": [Function],
                "formatPlural": [Function],
                "formatRelative": [Function],
                "formatTime": [Function],
                "formats": Object {},
                "formatters": Object {
                  "getDateTimeFormat": [Function],
                  "getMessageFormat": [Function],
                  "getNumberFormat": [Function],
                  "getPluralFormat": [Function],
                  "getRelativeFormat": [Function],
                },
                "locale": "en",
                "messages": null,
                "now": [Function],
                "onError": [Function],
                "textComponent": "span",
                "timeZone": null,
              }
            }
            isFullscreen={false}
            isScrollable={false}
            onKeyDown={[Function]}
            onRequestClose={[Function]}
            role="dialog"
            rootSelector="#root"
            trapFocus={false}
            zIndex="7000"
          >
            <ModalOverlay
              className={null}
              onClick={[Function]}
              zIndex="7000"
            >
              <div
                className="overlay layer-7000"
                onClick={[Function]}
              />
            </ModalOverlay>
            <div
              aria-label="Terra Modal"
              aria-modal="true"
              className="abstract-modal layer-7000"
              intl={
                Object {
                  "defaultFormats": Object {},
                  "defaultLocale": "en",
                  "formatDate": [Function],
                  "formatHTMLMessage": [Function],
                  "formatMessage": [Function],
                  "formatNumber": [Function],
                  "formatPlural": [Function],
                  "formatRelative": [Function],
                  "formatTime": [Function],
                  "formats": Object {},
                  "formatters": Object {
                    "getDateTimeFormat": [Function],
                    "getMessageFormat": [Function],
                    "getNumberFormat": [Function],
                    "getPluralFormat": [Function],
                    "getRelativeFormat": [Function],
                  },
                  "locale": "en",
                  "messages": null,
                  "now": [Function],
                  "onError": [Function],
                  "textComponent": "span",
                  "timeZone": null,
                }
              }
              onKeyDown={[Function]}
              role="dialog"
              tabIndex="0"
            >
              <FocusTrapWrapper
                trapFocus={false}
              >
                <div
                  className="abstract-modal-container"
                  data-terra-abstract-modal-begin={true}
                  tabIndex="-1"
                >
                  <FormattedMessage
                    id="Terra.AbstractModal.BeginModalDialog"
                    values={Object {}}
                  >
                    <VisuallyHiddenText
                      text="Terra.AbstractModal.BeginModalDialog"
                    >
                      <span
                        className="visually-hidden-text"
                      >
                        Terra.AbstractModal.BeginModalDialog
                      </span>
                    </VisuallyHiddenText>
                  </FormattedMessage>
                  <div>
                    <h1>
                      Terra Modal
                    </h1>
                    <button
                      onClick={[Function]}
                      type="button"
                    >
                      Close Modal
                    </button>
                  </div>
                  <FormattedMessage
                    id="Terra.AbstractModal.EndModalDialog"
                    values={Object {}}
                  >
                    <VisuallyHiddenText
                      text="Terra.AbstractModal.EndModalDialog"
                    >
                      <span
                        className="visually-hidden-text"
                      >
                        Terra.AbstractModal.EndModalDialog
                      </span>
                    </VisuallyHiddenText>
                  </FormattedMessage>
                </div>
              </FocusTrapWrapper>
            </div>
          </ForwardRef>
        </Portal>
      </Portal>
    </AbstractModal>
    <button
      onClick={[Function]}
      type="button"
    >
      Open Modal
    </button>
  </div>
</ModalExample>
`;

exports[`should mount an open modal 8000 z-index 1`] = `
<ModalExample
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": null,
      "now": [Function],
      "onError": [Function],
      "textComponent": "span",
      "timeZone": null,
    }
  }
  zIndex="8000"
>
  <div>
    <AbstractModal
      ariaLabel="Terra Modal"
      classNameModal={null}
      classNameOverlay={null}
      closeOnEsc={true}
      closeOnOutsideClick={true}
      intl={
        Object {
          "defaultFormats": Object {},
          "defaultLocale": "en",
          "formatDate": [Function],
          "formatHTMLMessage": [Function],
          "formatMessage": [Function],
          "formatNumber": [Function],
          "formatPlural": [Function],
          "formatRelative": [Function],
          "formatTime": [Function],
          "formats": Object {},
          "formatters": Object {
            "getDateTimeFormat": [Function],
            "getMessageFormat": [Function],
            "getNumberFormat": [Function],
            "getPluralFormat": [Function],
            "getRelativeFormat": [Function],
          },
          "locale": "en",
          "messages": null,
          "now": [Function],
          "onError": [Function],
          "textComponent": "span",
          "timeZone": null,
        }
      }
      isFullscreen={false}
      isOpen={true}
      onRequestClose={[Function]}
      role="dialog"
      rootSelector="#root"
      trapFocus={false}
      zIndex="8000"
    >
      <Portal
        isOpened={true}
      >
        <Portal
          containerInfo={
            <div>
              <div
                class="overlay layer-8000"
              />
              <div
                aria-label="Terra Modal"
                aria-modal="true"
                class="abstract-modal layer-8000"
                intl="[object Object]"
                role="dialog"
                tabindex="0"
              >
                <div
                  class="abstract-modal-container"
                  data-terra-abstract-modal-begin="true"
                  tabindex="-1"
                >
                  <span
                    class="visually-hidden-text"
                  >
                    Terra.AbstractModal.BeginModalDialog
                  </span>
                  <div>
                    <h1>
                      Terra Modal
                    </h1>
                    <button
                      type="button"
                    >
                      Close Modal
                    </button>
                  </div>
                  <span
                    class="visually-hidden-text"
                  >
                    Terra.AbstractModal.EndModalDialog
                  </span>
                </div>
              </div>
            </div>
          }
        >
          <ForwardRef
            aria-modal="true"
            ariaLabel="Terra Modal"
            classNameModal={null}
            classNameOverlay={null}
            closeOnOutsideClick={true}
            intl={
              Object {
                "defaultFormats": Object {},
                "defaultLocale": "en",
                "formatDate": [Function],
                "formatHTMLMessage": [Function],
                "formatMessage": [Function],
                "formatNumber": [Function],
                "formatPlural": [Function],
                "formatRelative": [Function],
                "formatTime": [Function],
                "formats": Object {},
                "formatters": Object {
                  "getDateTimeFormat": [Function],
                  "getMessageFormat": [Function],
                  "getNumberFormat": [Function],
                  "getPluralFormat": [Function],
                  "getRelativeFormat": [Function],
                },
                "locale": "en",
                "messages": null,
                "now": [Function],
                "onError": [Function],
                "textComponent": "span",
                "timeZone": null,
              }
            }
            isFullscreen={false}
            isScrollable={false}
            onKeyDown={[Function]}
            onRequestClose={[Function]}
            role="dialog"
            rootSelector="#root"
            trapFocus={false}
            zIndex="8000"
          >
            <ModalOverlay
              className={null}
              onClick={[Function]}
              zIndex="8000"
            >
              <div
                className="overlay layer-8000"
                onClick={[Function]}
              />
            </ModalOverlay>
            <div
              aria-label="Terra Modal"
              aria-modal="true"
              className="abstract-modal layer-8000"
              intl={
                Object {
                  "defaultFormats": Object {},
                  "defaultLocale": "en",
                  "formatDate": [Function],
                  "formatHTMLMessage": [Function],
                  "formatMessage": [Function],
                  "formatNumber": [Function],
                  "formatPlural": [Function],
                  "formatRelative": [Function],
                  "formatTime": [Function],
                  "formats": Object {},
                  "formatters": Object {
                    "getDateTimeFormat": [Function],
                    "getMessageFormat": [Function],
                    "getNumberFormat": [Function],
                    "getPluralFormat": [Function],
                    "getRelativeFormat": [Function],
                  },
                  "locale": "en",
                  "messages": null,
                  "now": [Function],
                  "onError": [Function],
                  "textComponent": "span",
                  "timeZone": null,
                }
              }
              onKeyDown={[Function]}
              role="dialog"
              tabIndex="0"
            >
              <FocusTrapWrapper
                trapFocus={false}
              >
                <div
                  className="abstract-modal-container"
                  data-terra-abstract-modal-begin={true}
                  tabIndex="-1"
                >
                  <FormattedMessage
                    id="Terra.AbstractModal.BeginModalDialog"
                    values={Object {}}
                  >
                    <VisuallyHiddenText
                      text="Terra.AbstractModal.BeginModalDialog"
                    >
                      <span
                        className="visually-hidden-text"
                      >
                        Terra.AbstractModal.BeginModalDialog
                      </span>
                    </VisuallyHiddenText>
                  </FormattedMessage>
                  <div>
                    <h1>
                      Terra Modal
                    </h1>
                    <button
                      onClick={[Function]}
                      type="button"
                    >
                      Close Modal
                    </button>
                  </div>
                  <FormattedMessage
                    id="Terra.AbstractModal.EndModalDialog"
                    values={Object {}}
                  >
                    <VisuallyHiddenText
                      text="Terra.AbstractModal.EndModalDialog"
                    >
                      <span
                        className="visually-hidden-text"
                      >
                        Terra.AbstractModal.EndModalDialog
                      </span>
                    </VisuallyHiddenText>
                  </FormattedMessage>
                </div>
              </FocusTrapWrapper>
            </div>
          </ForwardRef>
        </Portal>
      </Portal>
    </AbstractModal>
    <button
      onClick={[Function]}
      type="button"
    >
      Open Modal
    </button>
  </div>
</ModalExample>
`;

exports[`should mount an open modal 9000 z-index 1`] = `
<ModalExample
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": null,
      "now": [Function],
      "onError": [Function],
      "textComponent": "span",
      "timeZone": null,
    }
  }
  zIndex="9000"
>
  <div>
    <AbstractModal
      ariaLabel="Terra Modal"
      classNameModal={null}
      classNameOverlay={null}
      closeOnEsc={true}
      closeOnOutsideClick={true}
      intl={
        Object {
          "defaultFormats": Object {},
          "defaultLocale": "en",
          "formatDate": [Function],
          "formatHTMLMessage": [Function],
          "formatMessage": [Function],
          "formatNumber": [Function],
          "formatPlural": [Function],
          "formatRelative": [Function],
          "formatTime": [Function],
          "formats": Object {},
          "formatters": Object {
            "getDateTimeFormat": [Function],
            "getMessageFormat": [Function],
            "getNumberFormat": [Function],
            "getPluralFormat": [Function],
            "getRelativeFormat": [Function],
          },
          "locale": "en",
          "messages": null,
          "now": [Function],
          "onError": [Function],
          "textComponent": "span",
          "timeZone": null,
        }
      }
      isFullscreen={false}
      isOpen={true}
      onRequestClose={[Function]}
      role="dialog"
      rootSelector="#root"
      trapFocus={false}
      zIndex="9000"
    >
      <Portal
        isOpened={true}
      >
        <Portal
          containerInfo={
            <div>
              <div
                class="overlay layer-9000"
              />
              <div
                aria-label="Terra Modal"
                aria-modal="true"
                class="abstract-modal layer-9000"
                intl="[object Object]"
                role="dialog"
                tabindex="0"
              >
                <div
                  class="abstract-modal-container"
                  data-terra-abstract-modal-begin="true"
                  tabindex="-1"
                >
                  <span
                    class="visually-hidden-text"
                  >
                    Terra.AbstractModal.BeginModalDialog
                  </span>
                  <div>
                    <h1>
                      Terra Modal
                    </h1>
                    <button
                      type="button"
                    >
                      Close Modal
                    </button>
                  </div>
                  <span
                    class="visually-hidden-text"
                  >
                    Terra.AbstractModal.EndModalDialog
                  </span>
                </div>
              </div>
            </div>
          }
        >
          <ForwardRef
            aria-modal="true"
            ariaLabel="Terra Modal"
            classNameModal={null}
            classNameOverlay={null}
            closeOnOutsideClick={true}
            intl={
              Object {
                "defaultFormats": Object {},
                "defaultLocale": "en",
                "formatDate": [Function],
                "formatHTMLMessage": [Function],
                "formatMessage": [Function],
                "formatNumber": [Function],
                "formatPlural": [Function],
                "formatRelative": [Function],
                "formatTime": [Function],
                "formats": Object {},
                "formatters": Object {
                  "getDateTimeFormat": [Function],
                  "getMessageFormat": [Function],
                  "getNumberFormat": [Function],
                  "getPluralFormat": [Function],
                  "getRelativeFormat": [Function],
                },
                "locale": "en",
                "messages": null,
                "now": [Function],
                "onError": [Function],
                "textComponent": "span",
                "timeZone": null,
              }
            }
            isFullscreen={false}
            isScrollable={false}
            onKeyDown={[Function]}
            onRequestClose={[Function]}
            role="dialog"
            rootSelector="#root"
            trapFocus={false}
            zIndex="9000"
          >
            <ModalOverlay
              className={null}
              onClick={[Function]}
              zIndex="9000"
            >
              <div
                className="overlay layer-9000"
                onClick={[Function]}
              />
            </ModalOverlay>
            <div
              aria-label="Terra Modal"
              aria-modal="true"
              className="abstract-modal layer-9000"
              intl={
                Object {
                  "defaultFormats": Object {},
                  "defaultLocale": "en",
                  "formatDate": [Function],
                  "formatHTMLMessage": [Function],
                  "formatMessage": [Function],
                  "formatNumber": [Function],
                  "formatPlural": [Function],
                  "formatRelative": [Function],
                  "formatTime": [Function],
                  "formats": Object {},
                  "formatters": Object {
                    "getDateTimeFormat": [Function],
                    "getMessageFormat": [Function],
                    "getNumberFormat": [Function],
                    "getPluralFormat": [Function],
                    "getRelativeFormat": [Function],
                  },
                  "locale": "en",
                  "messages": null,
                  "now": [Function],
                  "onError": [Function],
                  "textComponent": "span",
                  "timeZone": null,
                }
              }
              onKeyDown={[Function]}
              role="dialog"
              tabIndex="0"
            >
              <FocusTrapWrapper
                trapFocus={false}
              >
                <div
                  className="abstract-modal-container"
                  data-terra-abstract-modal-begin={true}
                  tabIndex="-1"
                >
                  <FormattedMessage
                    id="Terra.AbstractModal.BeginModalDialog"
                    values={Object {}}
                  >
                    <VisuallyHiddenText
                      text="Terra.AbstractModal.BeginModalDialog"
                    >
                      <span
                        className="visually-hidden-text"
                      >
                        Terra.AbstractModal.BeginModalDialog
                      </span>
                    </VisuallyHiddenText>
                  </FormattedMessage>
                  <div>
                    <h1>
                      Terra Modal
                    </h1>
                    <button
                      onClick={[Function]}
                      type="button"
                    >
                      Close Modal
                    </button>
                  </div>
                  <FormattedMessage
                    id="Terra.AbstractModal.EndModalDialog"
                    values={Object {}}
                  >
                    <VisuallyHiddenText
                      text="Terra.AbstractModal.EndModalDialog"
                    >
                      <span
                        className="visually-hidden-text"
                      >
                        Terra.AbstractModal.EndModalDialog
                      </span>
                    </VisuallyHiddenText>
                  </FormattedMessage>
                </div>
              </FocusTrapWrapper>
            </div>
          </ForwardRef>
        </Portal>
      </Portal>
    </AbstractModal>
    <button
      onClick={[Function]}
      type="button"
    >
      Open Modal
    </button>
  </div>
</ModalExample>
`;

exports[`should mount an open modal set to fullscreen 1`] = `
<ModalExample
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": null,
      "now": [Function],
      "onError": [Function],
      "textComponent": "span",
      "timeZone": null,
    }
  }
  isFullscreen={true}
>
  <div>
    <AbstractModal
      ariaLabel="Terra Modal"
      classNameModal={null}
      classNameOverlay={null}
      closeOnEsc={true}
      closeOnOutsideClick={true}
      intl={
        Object {
          "defaultFormats": Object {},
          "defaultLocale": "en",
          "formatDate": [Function],
          "formatHTMLMessage": [Function],
          "formatMessage": [Function],
          "formatNumber": [Function],
          "formatPlural": [Function],
          "formatRelative": [Function],
          "formatTime": [Function],
          "formats": Object {},
          "formatters": Object {
            "getDateTimeFormat": [Function],
            "getMessageFormat": [Function],
            "getNumberFormat": [Function],
            "getPluralFormat": [Function],
            "getRelativeFormat": [Function],
          },
          "locale": "en",
          "messages": null,
          "now": [Function],
          "onError": [Function],
          "textComponent": "span",
          "timeZone": null,
        }
      }
      isFullscreen={true}
      isOpen={true}
      onRequestClose={[Function]}
      role="dialog"
      rootSelector="#root"
      trapFocus={false}
      zIndex="6000"
    >
      <Portal
        isOpened={true}
      >
        <Portal
          containerInfo={
            <div>
              <div
                class="overlay layer-6000"
              />
              <div
                aria-label="Terra Modal"
                aria-modal="true"
                class="abstract-modal is-fullscreen layer-6000"
                intl="[object Object]"
                role="dialog"
                tabindex="0"
              >
                <div
                  class="abstract-modal-container"
                  data-terra-abstract-modal-begin="true"
                  tabindex="-1"
                >
                  <span
                    class="visually-hidden-text"
                  >
                    Terra.AbstractModal.BeginModalDialog
                  </span>
                  <div>
                    <h1>
                      Terra Modal
                    </h1>
                    <button
                      type="button"
                    >
                      Close Modal
                    </button>
                  </div>
                  <span
                    class="visually-hidden-text"
                  >
                    Terra.AbstractModal.EndModalDialog
                  </span>
                </div>
              </div>
            </div>
          }
        >
          <ForwardRef
            aria-modal="true"
            ariaLabel="Terra Modal"
            classNameModal={null}
            classNameOverlay={null}
            closeOnOutsideClick={true}
            intl={
              Object {
                "defaultFormats": Object {},
                "defaultLocale": "en",
                "formatDate": [Function],
                "formatHTMLMessage": [Function],
                "formatMessage": [Function],
                "formatNumber": [Function],
                "formatPlural": [Function],
                "formatRelative": [Function],
                "formatTime": [Function],
                "formats": Object {},
                "formatters": Object {
                  "getDateTimeFormat": [Function],
                  "getMessageFormat": [Function],
                  "getNumberFormat": [Function],
                  "getPluralFormat": [Function],
                  "getRelativeFormat": [Function],
                },
                "locale": "en",
                "messages": null,
                "now": [Function],
                "onError": [Function],
                "textComponent": "span",
                "timeZone": null,
              }
            }
            isFullscreen={true}
            isScrollable={false}
            onKeyDown={[Function]}
            onRequestClose={[Function]}
            role="dialog"
            rootSelector="#root"
            trapFocus={false}
            zIndex="6000"
          >
            <ModalOverlay
              className={null}
              onClick={[Function]}
              zIndex="6000"
            >
              <div
                className="overlay layer-6000"
                onClick={[Function]}
              />
            </ModalOverlay>
            <div
              aria-label="Terra Modal"
              aria-modal="true"
              className="abstract-modal is-fullscreen layer-6000"
              intl={
                Object {
                  "defaultFormats": Object {},
                  "defaultLocale": "en",
                  "formatDate": [Function],
                  "formatHTMLMessage": [Function],
                  "formatMessage": [Function],
                  "formatNumber": [Function],
                  "formatPlural": [Function],
                  "formatRelative": [Function],
                  "formatTime": [Function],
                  "formats": Object {},
                  "formatters": Object {
                    "getDateTimeFormat": [Function],
                    "getMessageFormat": [Function],
                    "getNumberFormat": [Function],
                    "getPluralFormat": [Function],
                    "getRelativeFormat": [Function],
                  },
                  "locale": "en",
                  "messages": null,
                  "now": [Function],
                  "onError": [Function],
                  "textComponent": "span",
                  "timeZone": null,
                }
              }
              onKeyDown={[Function]}
              role="dialog"
              tabIndex="0"
            >
              <FocusTrapWrapper
                trapFocus={false}
              >
                <div
                  className="abstract-modal-container"
                  data-terra-abstract-modal-begin={true}
                  tabIndex="-1"
                >
                  <FormattedMessage
                    id="Terra.AbstractModal.BeginModalDialog"
                    values={Object {}}
                  >
                    <VisuallyHiddenText
                      text="Terra.AbstractModal.BeginModalDialog"
                    >
                      <span
                        className="visually-hidden-text"
                      >
                        Terra.AbstractModal.BeginModalDialog
                      </span>
                    </VisuallyHiddenText>
                  </FormattedMessage>
                  <div>
                    <h1>
                      Terra Modal
                    </h1>
                    <button
                      onClick={[Function]}
                      type="button"
                    >
                      Close Modal
                    </button>
                  </div>
                  <FormattedMessage
                    id="Terra.AbstractModal.EndModalDialog"
                    values={Object {}}
                  >
                    <VisuallyHiddenText
                      text="Terra.AbstractModal.EndModalDialog"
                    >
                      <span
                        className="visually-hidden-text"
                      >
                        Terra.AbstractModal.EndModalDialog
                      </span>
                    </VisuallyHiddenText>
                  </FormattedMessage>
                </div>
              </FocusTrapWrapper>
            </div>
          </ForwardRef>
        </Portal>
      </Portal>
    </AbstractModal>
    <button
      onClick={[Function]}
      type="button"
    >
      Open Modal
    </button>
  </div>
</ModalExample>
`;

exports[`should mount an open modal with custom props 1`] = `
<ModalExample
  id="custom-props"
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": null,
      "now": [Function],
      "onError": [Function],
      "textComponent": "span",
      "timeZone": null,
    }
  }
>
  <div>
    <AbstractModal
      ariaLabel="Terra Modal"
      classNameModal={null}
      classNameOverlay={null}
      closeOnEsc={true}
      closeOnOutsideClick={true}
      id="custom-props"
      intl={
        Object {
          "defaultFormats": Object {},
          "defaultLocale": "en",
          "formatDate": [Function],
          "formatHTMLMessage": [Function],
          "formatMessage": [Function],
          "formatNumber": [Function],
          "formatPlural": [Function],
          "formatRelative": [Function],
          "formatTime": [Function],
          "formats": Object {},
          "formatters": Object {
            "getDateTimeFormat": [Function],
            "getMessageFormat": [Function],
            "getNumberFormat": [Function],
            "getPluralFormat": [Function],
            "getRelativeFormat": [Function],
          },
          "locale": "en",
          "messages": null,
          "now": [Function],
          "onError": [Function],
          "textComponent": "span",
          "timeZone": null,
        }
      }
      isFullscreen={false}
      isOpen={true}
      onRequestClose={[Function]}
      role="dialog"
      rootSelector="#root"
      trapFocus={false}
      zIndex="6000"
    >
      <Portal
        isOpened={true}
      >
        <Portal
          containerInfo={
            <div>
              <div
                class="overlay layer-6000"
              />
              <div
                aria-label="Terra Modal"
                aria-modal="true"
                class="abstract-modal layer-6000"
                id="custom-props"
                intl="[object Object]"
                role="dialog"
                tabindex="0"
              >
                <div
                  class="abstract-modal-container"
                  data-terra-abstract-modal-begin="true"
                  tabindex="-1"
                >
                  <span
                    class="visually-hidden-text"
                  >
                    Terra.AbstractModal.BeginModalDialog
                  </span>
                  <div>
                    <h1>
                      Terra Modal
                    </h1>
                    <button
                      type="button"
                    >
                      Close Modal
                    </button>
                  </div>
                  <span
                    class="visually-hidden-text"
                  >
                    Terra.AbstractModal.EndModalDialog
                  </span>
                </div>
              </div>
            </div>
          }
        >
          <ForwardRef
            aria-modal="true"
            ariaLabel="Terra Modal"
            classNameModal={null}
            classNameOverlay={null}
            closeOnOutsideClick={true}
            id="custom-props"
            intl={
              Object {
                "defaultFormats": Object {},
                "defaultLocale": "en",
                "formatDate": [Function],
                "formatHTMLMessage": [Function],
                "formatMessage": [Function],
                "formatNumber": [Function],
                "formatPlural": [Function],
                "formatRelative": [Function],
                "formatTime": [Function],
                "formats": Object {},
                "formatters": Object {
                  "getDateTimeFormat": [Function],
                  "getMessageFormat": [Function],
                  "getNumberFormat": [Function],
                  "getPluralFormat": [Function],
                  "getRelativeFormat": [Function],
                },
                "locale": "en",
                "messages": null,
                "now": [Function],
                "onError": [Function],
                "textComponent": "span",
                "timeZone": null,
              }
            }
            isFullscreen={false}
            isScrollable={false}
            onKeyDown={[Function]}
            onRequestClose={[Function]}
            role="dialog"
            rootSelector="#root"
            trapFocus={false}
            zIndex="6000"
          >
            <ModalOverlay
              className={null}
              onClick={[Function]}
              zIndex="6000"
            >
              <div
                className="overlay layer-6000"
                onClick={[Function]}
              />
            </ModalOverlay>
            <div
              aria-label="Terra Modal"
              aria-modal="true"
              className="abstract-modal layer-6000"
              id="custom-props"
              intl={
                Object {
                  "defaultFormats": Object {},
                  "defaultLocale": "en",
                  "formatDate": [Function],
                  "formatHTMLMessage": [Function],
                  "formatMessage": [Function],
                  "formatNumber": [Function],
                  "formatPlural": [Function],
                  "formatRelative": [Function],
                  "formatTime": [Function],
                  "formats": Object {},
                  "formatters": Object {
                    "getDateTimeFormat": [Function],
                    "getMessageFormat": [Function],
                    "getNumberFormat": [Function],
                    "getPluralFormat": [Function],
                    "getRelativeFormat": [Function],
                  },
                  "locale": "en",
                  "messages": null,
                  "now": [Function],
                  "onError": [Function],
                  "textComponent": "span",
                  "timeZone": null,
                }
              }
              onKeyDown={[Function]}
              role="dialog"
              tabIndex="0"
            >
              <FocusTrapWrapper
                trapFocus={false}
              >
                <div
                  className="abstract-modal-container"
                  data-terra-abstract-modal-begin={true}
                  tabIndex="-1"
                >
                  <FormattedMessage
                    id="Terra.AbstractModal.BeginModalDialog"
                    values={Object {}}
                  >
                    <VisuallyHiddenText
                      text="Terra.AbstractModal.BeginModalDialog"
                    >
                      <span
                        className="visually-hidden-text"
                      >
                        Terra.AbstractModal.BeginModalDialog
                      </span>
                    </VisuallyHiddenText>
                  </FormattedMessage>
                  <div>
                    <h1>
                      Terra Modal
                    </h1>
                    <button
                      onClick={[Function]}
                      type="button"
                    >
                      Close Modal
                    </button>
                  </div>
                  <FormattedMessage
                    id="Terra.AbstractModal.EndModalDialog"
                    values={Object {}}
                  >
                    <VisuallyHiddenText
                      text="Terra.AbstractModal.EndModalDialog"
                    >
                      <span
                        className="visually-hidden-text"
                      >
                        Terra.AbstractModal.EndModalDialog
                      </span>
                    </VisuallyHiddenText>
                  </FormattedMessage>
                </div>
              </FocusTrapWrapper>
            </div>
          </ForwardRef>
        </Portal>
      </Portal>
    </AbstractModal>
    <button
      onClick={[Function]}
      type="button"
    >
      Open Modal
    </button>
  </div>
</ModalExample>
`;

exports[`should mount an open modal with modal class name 1`] = `
<ModalExample
  classNameModal="modal-custom-class"
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": null,
      "now": [Function],
      "onError": [Function],
      "textComponent": "span",
      "timeZone": null,
    }
  }
>
  <div>
    <AbstractModal
      ariaLabel="Terra Modal"
      classNameModal="modal-custom-class"
      classNameOverlay={null}
      closeOnEsc={true}
      closeOnOutsideClick={true}
      intl={
        Object {
          "defaultFormats": Object {},
          "defaultLocale": "en",
          "formatDate": [Function],
          "formatHTMLMessage": [Function],
          "formatMessage": [Function],
          "formatNumber": [Function],
          "formatPlural": [Function],
          "formatRelative": [Function],
          "formatTime": [Function],
          "formats": Object {},
          "formatters": Object {
            "getDateTimeFormat": [Function],
            "getMessageFormat": [Function],
            "getNumberFormat": [Function],
            "getPluralFormat": [Function],
            "getRelativeFormat": [Function],
          },
          "locale": "en",
          "messages": null,
          "now": [Function],
          "onError": [Function],
          "textComponent": "span",
          "timeZone": null,
        }
      }
      isFullscreen={false}
      isOpen={true}
      onRequestClose={[Function]}
      role="dialog"
      rootSelector="#root"
      trapFocus={false}
      zIndex="6000"
    >
      <Portal
        isOpened={true}
      >
        <Portal
          containerInfo={
            <div>
              <div
                class="overlay layer-6000"
              />
              <div
                aria-label="Terra Modal"
                aria-modal="true"
                class="abstract-modal layer-6000 modal-custom-class"
                intl="[object Object]"
                role="dialog"
                tabindex="0"
              >
                <div
                  class="abstract-modal-container"
                  data-terra-abstract-modal-begin="true"
                  tabindex="-1"
                >
                  <span
                    class="visually-hidden-text"
                  >
                    Terra.AbstractModal.BeginModalDialog
                  </span>
                  <div>
                    <h1>
                      Terra Modal
                    </h1>
                    <button
                      type="button"
                    >
                      Close Modal
                    </button>
                  </div>
                  <span
                    class="visually-hidden-text"
                  >
                    Terra.AbstractModal.EndModalDialog
                  </span>
                </div>
              </div>
            </div>
          }
        >
          <ForwardRef
            aria-modal="true"
            ariaLabel="Terra Modal"
            classNameModal="modal-custom-class"
            classNameOverlay={null}
            closeOnOutsideClick={true}
            intl={
              Object {
                "defaultFormats": Object {},
                "defaultLocale": "en",
                "formatDate": [Function],
                "formatHTMLMessage": [Function],
                "formatMessage": [Function],
                "formatNumber": [Function],
                "formatPlural": [Function],
                "formatRelative": [Function],
                "formatTime": [Function],
                "formats": Object {},
                "formatters": Object {
                  "getDateTimeFormat": [Function],
                  "getMessageFormat": [Function],
                  "getNumberFormat": [Function],
                  "getPluralFormat": [Function],
                  "getRelativeFormat": [Function],
                },
                "locale": "en",
                "messages": null,
                "now": [Function],
                "onError": [Function],
                "textComponent": "span",
                "timeZone": null,
              }
            }
            isFullscreen={false}
            isScrollable={false}
            onKeyDown={[Function]}
            onRequestClose={[Function]}
            role="dialog"
            rootSelector="#root"
            trapFocus={false}
            zIndex="6000"
          >
            <ModalOverlay
              className={null}
              onClick={[Function]}
              zIndex="6000"
            >
              <div
                className="overlay layer-6000"
                onClick={[Function]}
              />
            </ModalOverlay>
            <div
              aria-label="Terra Modal"
              aria-modal="true"
              className="abstract-modal layer-6000 modal-custom-class"
              intl={
                Object {
                  "defaultFormats": Object {},
                  "defaultLocale": "en",
                  "formatDate": [Function],
                  "formatHTMLMessage": [Function],
                  "formatMessage": [Function],
                  "formatNumber": [Function],
                  "formatPlural": [Function],
                  "formatRelative": [Function],
                  "formatTime": [Function],
                  "formats": Object {},
                  "formatters": Object {
                    "getDateTimeFormat": [Function],
                    "getMessageFormat": [Function],
                    "getNumberFormat": [Function],
                    "getPluralFormat": [Function],
                    "getRelativeFormat": [Function],
                  },
                  "locale": "en",
                  "messages": null,
                  "now": [Function],
                  "onError": [Function],
                  "textComponent": "span",
                  "timeZone": null,
                }
              }
              onKeyDown={[Function]}
              role="dialog"
              tabIndex="0"
            >
              <FocusTrapWrapper
                trapFocus={false}
              >
                <div
                  className="abstract-modal-container"
                  data-terra-abstract-modal-begin={true}
                  tabIndex="-1"
                >
                  <FormattedMessage
                    id="Terra.AbstractModal.BeginModalDialog"
                    values={Object {}}
                  >
                    <VisuallyHiddenText
                      text="Terra.AbstractModal.BeginModalDialog"
                    >
                      <span
                        className="visually-hidden-text"
                      >
                        Terra.AbstractModal.BeginModalDialog
                      </span>
                    </VisuallyHiddenText>
                  </FormattedMessage>
                  <div>
                    <h1>
                      Terra Modal
                    </h1>
                    <button
                      onClick={[Function]}
                      type="button"
                    >
                      Close Modal
                    </button>
                  </div>
                  <FormattedMessage
                    id="Terra.AbstractModal.EndModalDialog"
                    values={Object {}}
                  >
                    <VisuallyHiddenText
                      text="Terra.AbstractModal.EndModalDialog"
                    >
                      <span
                        className="visually-hidden-text"
                      >
                        Terra.AbstractModal.EndModalDialog
                      </span>
                    </VisuallyHiddenText>
                  </FormattedMessage>
                </div>
              </FocusTrapWrapper>
            </div>
          </ForwardRef>
        </Portal>
      </Portal>
    </AbstractModal>
    <button
      onClick={[Function]}
      type="button"
    >
      Open Modal
    </button>
  </div>
</ModalExample>
`;

exports[`should mount an open modal with overlay class name 1`] = `
<ModalExample
  classNameOverlay="overlay-custom-class"
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": null,
      "now": [Function],
      "onError": [Function],
      "textComponent": "span",
      "timeZone": null,
    }
  }
>
  <div>
    <AbstractModal
      ariaLabel="Terra Modal"
      classNameModal={null}
      classNameOverlay="overlay-custom-class"
      closeOnEsc={true}
      closeOnOutsideClick={true}
      intl={
        Object {
          "defaultFormats": Object {},
          "defaultLocale": "en",
          "formatDate": [Function],
          "formatHTMLMessage": [Function],
          "formatMessage": [Function],
          "formatNumber": [Function],
          "formatPlural": [Function],
          "formatRelative": [Function],
          "formatTime": [Function],
          "formats": Object {},
          "formatters": Object {
            "getDateTimeFormat": [Function],
            "getMessageFormat": [Function],
            "getNumberFormat": [Function],
            "getPluralFormat": [Function],
            "getRelativeFormat": [Function],
          },
          "locale": "en",
          "messages": null,
          "now": [Function],
          "onError": [Function],
          "textComponent": "span",
          "timeZone": null,
        }
      }
      isFullscreen={false}
      isOpen={true}
      onRequestClose={[Function]}
      role="dialog"
      rootSelector="#root"
      trapFocus={false}
      zIndex="6000"
    >
      <Portal
        isOpened={true}
      >
        <Portal
          containerInfo={
            <div>
              <div
                class="overlay layer-6000 overlay-custom-class"
              />
              <div
                aria-label="Terra Modal"
                aria-modal="true"
                class="abstract-modal layer-6000"
                intl="[object Object]"
                role="dialog"
                tabindex="0"
              >
                <div
                  class="abstract-modal-container"
                  data-terra-abstract-modal-begin="true"
                  tabindex="-1"
                >
                  <span
                    class="visually-hidden-text"
                  >
                    Terra.AbstractModal.BeginModalDialog
                  </span>
                  <div>
                    <h1>
                      Terra Modal
                    </h1>
                    <button
                      type="button"
                    >
                      Close Modal
                    </button>
                  </div>
                  <span
                    class="visually-hidden-text"
                  >
                    Terra.AbstractModal.EndModalDialog
                  </span>
                </div>
              </div>
            </div>
          }
        >
          <ForwardRef
            aria-modal="true"
            ariaLabel="Terra Modal"
            classNameModal={null}
            classNameOverlay="overlay-custom-class"
            closeOnOutsideClick={true}
            intl={
              Object {
                "defaultFormats": Object {},
                "defaultLocale": "en",
                "formatDate": [Function],
                "formatHTMLMessage": [Function],
                "formatMessage": [Function],
                "formatNumber": [Function],
                "formatPlural": [Function],
                "formatRelative": [Function],
                "formatTime": [Function],
                "formats": Object {},
                "formatters": Object {
                  "getDateTimeFormat": [Function],
                  "getMessageFormat": [Function],
                  "getNumberFormat": [Function],
                  "getPluralFormat": [Function],
                  "getRelativeFormat": [Function],
                },
                "locale": "en",
                "messages": null,
                "now": [Function],
                "onError": [Function],
                "textComponent": "span",
                "timeZone": null,
              }
            }
            isFullscreen={false}
            isScrollable={false}
            onKeyDown={[Function]}
            onRequestClose={[Function]}
            role="dialog"
            rootSelector="#root"
            trapFocus={false}
            zIndex="6000"
          >
            <ModalOverlay
              className="overlay-custom-class"
              onClick={[Function]}
              zIndex="6000"
            >
              <div
                className="overlay layer-6000 overlay-custom-class"
                onClick={[Function]}
              />
            </ModalOverlay>
            <div
              aria-label="Terra Modal"
              aria-modal="true"
              className="abstract-modal layer-6000"
              intl={
                Object {
                  "defaultFormats": Object {},
                  "defaultLocale": "en",
                  "formatDate": [Function],
                  "formatHTMLMessage": [Function],
                  "formatMessage": [Function],
                  "formatNumber": [Function],
                  "formatPlural": [Function],
                  "formatRelative": [Function],
                  "formatTime": [Function],
                  "formats": Object {},
                  "formatters": Object {
                    "getDateTimeFormat": [Function],
                    "getMessageFormat": [Function],
                    "getNumberFormat": [Function],
                    "getPluralFormat": [Function],
                    "getRelativeFormat": [Function],
                  },
                  "locale": "en",
                  "messages": null,
                  "now": [Function],
                  "onError": [Function],
                  "textComponent": "span",
                  "timeZone": null,
                }
              }
              onKeyDown={[Function]}
              role="dialog"
              tabIndex="0"
            >
              <FocusTrapWrapper
                trapFocus={false}
              >
                <div
                  className="abstract-modal-container"
                  data-terra-abstract-modal-begin={true}
                  tabIndex="-1"
                >
                  <FormattedMessage
                    id="Terra.AbstractModal.BeginModalDialog"
                    values={Object {}}
                  >
                    <VisuallyHiddenText
                      text="Terra.AbstractModal.BeginModalDialog"
                    >
                      <span
                        className="visually-hidden-text"
                      >
                        Terra.AbstractModal.BeginModalDialog
                      </span>
                    </VisuallyHiddenText>
                  </FormattedMessage>
                  <div>
                    <h1>
                      Terra Modal
                    </h1>
                    <button
                      onClick={[Function]}
                      type="button"
                    >
                      Close Modal
                    </button>
                  </div>
                  <FormattedMessage
                    id="Terra.AbstractModal.EndModalDialog"
                    values={Object {}}
                  >
                    <VisuallyHiddenText
                      text="Terra.AbstractModal.EndModalDialog"
                    >
                      <span
                        className="visually-hidden-text"
                      >
                        Terra.AbstractModal.EndModalDialog
                      </span>
                    </VisuallyHiddenText>
                  </FormattedMessage>
                </div>
              </FocusTrapWrapper>
            </div>
          </ForwardRef>
        </Portal>
      </Portal>
    </AbstractModal>
    <button
      onClick={[Function]}
      type="button"
    >
      Open Modal
    </button>
  </div>
</ModalExample>
`;

exports[`should mount an open modal with role 1`] = `
<ModalExample
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": null,
      "now": [Function],
      "onError": [Function],
      "textComponent": "span",
      "timeZone": null,
    }
  }
  role="alertdialog"
>
  <div>
    <AbstractModal
      ariaLabel="Terra Modal"
      classNameModal={null}
      classNameOverlay={null}
      closeOnEsc={true}
      closeOnOutsideClick={true}
      intl={
        Object {
          "defaultFormats": Object {},
          "defaultLocale": "en",
          "formatDate": [Function],
          "formatHTMLMessage": [Function],
          "formatMessage": [Function],
          "formatNumber": [Function],
          "formatPlural": [Function],
          "formatRelative": [Function],
          "formatTime": [Function],
          "formats": Object {},
          "formatters": Object {
            "getDateTimeFormat": [Function],
            "getMessageFormat": [Function],
            "getNumberFormat": [Function],
            "getPluralFormat": [Function],
            "getRelativeFormat": [Function],
          },
          "locale": "en",
          "messages": null,
          "now": [Function],
          "onError": [Function],
          "textComponent": "span",
          "timeZone": null,
        }
      }
      isFullscreen={false}
      isOpen={true}
      onRequestClose={[Function]}
      role="alertdialog"
      rootSelector="#root"
      trapFocus={false}
      zIndex="6000"
    >
      <Portal
        isOpened={true}
      >
        <Portal
          containerInfo={
            <div>
              <div
                class="overlay layer-6000"
              />
              <div
                aria-label="Terra Modal"
                aria-modal="true"
                class="abstract-modal layer-6000"
                intl="[object Object]"
                role="alertdialog"
                tabindex="0"
              >
                <div
                  class="abstract-modal-container"
                  data-terra-abstract-modal-begin="true"
                  tabindex="-1"
                >
                  <span
                    class="visually-hidden-text"
                  >
                    Terra.AbstractModal.BeginModalDialog
                  </span>
                  <div>
                    <h1>
                      Terra Modal
                    </h1>
                    <button
                      type="button"
                    >
                      Close Modal
                    </button>
                  </div>
                  <span
                    class="visually-hidden-text"
                  >
                    Terra.AbstractModal.EndModalDialog
                  </span>
                </div>
              </div>
            </div>
          }
        >
          <ForwardRef
            aria-modal="true"
            ariaLabel="Terra Modal"
            classNameModal={null}
            classNameOverlay={null}
            closeOnOutsideClick={true}
            intl={
              Object {
                "defaultFormats": Object {},
                "defaultLocale": "en",
                "formatDate": [Function],
                "formatHTMLMessage": [Function],
                "formatMessage": [Function],
                "formatNumber": [Function],
                "formatPlural": [Function],
                "formatRelative": [Function],
                "formatTime": [Function],
                "formats": Object {},
                "formatters": Object {
                  "getDateTimeFormat": [Function],
                  "getMessageFormat": [Function],
                  "getNumberFormat": [Function],
                  "getPluralFormat": [Function],
                  "getRelativeFormat": [Function],
                },
                "locale": "en",
                "messages": null,
                "now": [Function],
                "onError": [Function],
                "textComponent": "span",
                "timeZone": null,
              }
            }
            isFullscreen={false}
            isScrollable={false}
            onKeyDown={[Function]}
            onRequestClose={[Function]}
            role="alertdialog"
            rootSelector="#root"
            trapFocus={false}
            zIndex="6000"
          >
            <ModalOverlay
              className={null}
              onClick={[Function]}
              zIndex="6000"
            >
              <div
                className="overlay layer-6000"
                onClick={[Function]}
              />
            </ModalOverlay>
            <div
              aria-label="Terra Modal"
              aria-modal="true"
              className="abstract-modal layer-6000"
              intl={
                Object {
                  "defaultFormats": Object {},
                  "defaultLocale": "en",
                  "formatDate": [Function],
                  "formatHTMLMessage": [Function],
                  "formatMessage": [Function],
                  "formatNumber": [Function],
                  "formatPlural": [Function],
                  "formatRelative": [Function],
                  "formatTime": [Function],
                  "formats": Object {},
                  "formatters": Object {
                    "getDateTimeFormat": [Function],
                    "getMessageFormat": [Function],
                    "getNumberFormat": [Function],
                    "getPluralFormat": [Function],
                    "getRelativeFormat": [Function],
                  },
                  "locale": "en",
                  "messages": null,
                  "now": [Function],
                  "onError": [Function],
                  "textComponent": "span",
                  "timeZone": null,
                }
              }
              onKeyDown={[Function]}
              role="alertdialog"
              tabIndex="0"
            >
              <FocusTrapWrapper
                trapFocus={false}
              >
                <div
                  className="abstract-modal-container"
                  data-terra-abstract-modal-begin={true}
                  tabIndex="-1"
                >
                  <FormattedMessage
                    id="Terra.AbstractModal.BeginModalDialog"
                    values={Object {}}
                  >
                    <VisuallyHiddenText
                      text="Terra.AbstractModal.BeginModalDialog"
                    >
                      <span
                        className="visually-hidden-text"
                      >
                        Terra.AbstractModal.BeginModalDialog
                      </span>
                    </VisuallyHiddenText>
                  </FormattedMessage>
                  <div>
                    <h1>
                      Terra Modal
                    </h1>
                    <button
                      onClick={[Function]}
                      type="button"
                    >
                      Close Modal
                    </button>
                  </div>
                  <FormattedMessage
                    id="Terra.AbstractModal.EndModalDialog"
                    values={Object {}}
                  >
                    <VisuallyHiddenText
                      text="Terra.AbstractModal.EndModalDialog"
                    >
                      <span
                        className="visually-hidden-text"
                      >
                        Terra.AbstractModal.EndModalDialog
                      </span>
                    </VisuallyHiddenText>
                  </FormattedMessage>
                </div>
              </FocusTrapWrapper>
            </div>
          </ForwardRef>
        </Portal>
      </Portal>
    </AbstractModal>
    <button
      onClick={[Function]}
      type="button"
    >
      Open Modal
    </button>
  </div>
</ModalExample>
`;

exports[`should mount an open modal with trapFocus set to true 1`] = `
<ModalExample
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": null,
      "now": [Function],
      "onError": [Function],
      "textComponent": "span",
      "timeZone": null,
    }
  }
  trapFocus={true}
>
  <div>
    <AbstractModal
      ariaLabel="Terra Modal"
      classNameModal={null}
      classNameOverlay={null}
      closeOnEsc={true}
      closeOnOutsideClick={true}
      intl={
        Object {
          "defaultFormats": Object {},
          "defaultLocale": "en",
          "formatDate": [Function],
          "formatHTMLMessage": [Function],
          "formatMessage": [Function],
          "formatNumber": [Function],
          "formatPlural": [Function],
          "formatRelative": [Function],
          "formatTime": [Function],
          "formats": Object {},
          "formatters": Object {
            "getDateTimeFormat": [Function],
            "getMessageFormat": [Function],
            "getNumberFormat": [Function],
            "getPluralFormat": [Function],
            "getRelativeFormat": [Function],
          },
          "locale": "en",
          "messages": null,
          "now": [Function],
          "onError": [Function],
          "textComponent": "span",
          "timeZone": null,
        }
      }
      isFullscreen={false}
      isOpen={true}
      onRequestClose={[Function]}
      role="dialog"
      rootSelector="#root"
      trapFocus={true}
      zIndex="6000"
    >
      <Portal
        isOpened={true}
      >
        <Portal
          containerInfo={
            <div>
              <div
                class="overlay layer-6000"
              />
              <div
                aria-label="Terra Modal"
                aria-modal="true"
                class="abstract-modal layer-6000"
                intl="[object Object]"
                role="dialog"
                tabindex="0"
              >
                <div
                  data-focus-guard="true"
                  style="width: 1px; height: 0px; padding: 0px; overflow: hidden; position: fixed; top: 1px; left: 1px;"
                  tabindex="0"
                />
                <div
                  class="modal-content-focus-trap-container"
                  data-focus-lock-disabled="false"
                >
                  <div
                    class="abstract-modal-container"
                    data-terra-abstract-modal-begin="true"
                    tabindex="-1"
                  >
                    <span
                      class="visually-hidden-text"
                    >
                      Terra.AbstractModal.BeginModalDialog
                    </span>
                    <div>
                      <h1>
                        Terra Modal
                      </h1>
                      <button
                        type="button"
                      >
                        Close Modal
                      </button>
                    </div>
                    <span
                      class="visually-hidden-text"
                    >
                      Terra.AbstractModal.EndModalDialog
                    </span>
                  </div>
                </div>
                <div
                  data-focus-guard="true"
                  style="width: 1px; height: 0px; padding: 0px; overflow: hidden; position: fixed; top: 1px; left: 1px;"
                  tabindex="0"
                />
              </div>
            </div>
          }
        >
          <ForwardRef
            aria-modal="true"
            ariaLabel="Terra Modal"
            classNameModal={null}
            classNameOverlay={null}
            closeOnOutsideClick={true}
            intl={
              Object {
                "defaultFormats": Object {},
                "defaultLocale": "en",
                "formatDate": [Function],
                "formatHTMLMessage": [Function],
                "formatMessage": [Function],
                "formatNumber": [Function],
                "formatPlural": [Function],
                "formatRelative": [Function],
                "formatTime": [Function],
                "formats": Object {},
                "formatters": Object {
                  "getDateTimeFormat": [Function],
                  "getMessageFormat": [Function],
                  "getNumberFormat": [Function],
                  "getPluralFormat": [Function],
                  "getRelativeFormat": [Function],
                },
                "locale": "en",
                "messages": null,
                "now": [Function],
                "onError": [Function],
                "textComponent": "span",
                "timeZone": null,
              }
            }
            isFullscreen={false}
            isScrollable={false}
            onKeyDown={[Function]}
            onRequestClose={[Function]}
            role="dialog"
            rootSelector="#root"
            trapFocus={true}
            zIndex="6000"
          >
            <ModalOverlay
              className={null}
              onClick={[Function]}
              zIndex="6000"
            >
              <div
                className="overlay layer-6000"
                onClick={[Function]}
              />
            </ModalOverlay>
            <div
              aria-label="Terra Modal"
              aria-modal="true"
              className="abstract-modal layer-6000"
              intl={
                Object {
                  "defaultFormats": Object {},
                  "defaultLocale": "en",
                  "formatDate": [Function],
                  "formatHTMLMessage": [Function],
                  "formatMessage": [Function],
                  "formatNumber": [Function],
                  "formatPlural": [Function],
                  "formatRelative": [Function],
                  "formatTime": [Function],
                  "formats": Object {},
                  "formatters": Object {
                    "getDateTimeFormat": [Function],
                    "getMessageFormat": [Function],
                    "getNumberFormat": [Function],
                    "getPluralFormat": [Function],
                    "getRelativeFormat": [Function],
                  },
                  "locale": "en",
                  "messages": null,
                  "now": [Function],
                  "onError": [Function],
                  "textComponent": "span",
                  "timeZone": null,
                }
              }
              onKeyDown={[Function]}
              role="dialog"
              tabIndex="0"
            >
              <FocusTrapWrapper
                trapFocus={true}
              >
                <ForwardRef(FocusLockUICombination)
                  as="div"
                  className="modal-content-focus-trap-container"
                >
                  <ForwardRef(FocusLockUI)
                    as="div"
                    autoFocus={true}
                    className="modal-content-focus-trap-container"
                    crossFrame={true}
                    disabled={false}
                    lockProps={Object {}}
                    noFocusGuards={false}
                    persistentFocus={false}
                    returnFocus={false}
                    sideCar={[Function]}
                  >
                    <div
                      data-focus-guard={true}
                      key="guard-first"
                      style={
                        Object {
                          "height": "0px",
                          "left": "1px",
                          "overflow": "hidden",
                          "padding": 0,
                          "position": "fixed",
                          "top": "1px",
                          "width": "1px",
                        }
                      }
                      tabIndex={0}
                    />
                    <SideEffect(FocusWatcher)
                      autoFocus={true}
                      crossFrame={true}
                      disabled={false}
                      id={Object {}}
                      observed={
                        <div
                          class="modal-content-focus-trap-container"
                          data-focus-lock-disabled="false"
                        >
                          <div
                            class="abstract-modal-container"
                            data-terra-abstract-modal-begin="true"
                            tabindex="-1"
                          >
                            <span
                              class="visually-hidden-text"
                            >
                              Terra.AbstractModal.BeginModalDialog
                            </span>
                            <div>
                              <h1>
                                Terra Modal
                              </h1>
                              <button
                                type="button"
                              >
                                Close Modal
                              </button>
                            </div>
                            <span
                              class="visually-hidden-text"
                            >
                              Terra.AbstractModal.EndModalDialog
                            </span>
                          </div>
                        </div>
                      }
                      onActivation={[Function]}
                      onDeactivation={[Function]}
                      persistentFocus={false}
                      returnFocus={[Function]}
                      shards={Array []}
                      sideCar={
                        Object {
                          "assignMedium": [Function],
                          "assignSyncMedium": [Function],
                          "options": Object {
                            "async": true,
                            "ssr": false,
                          },
                          "read": [Function],
                          "useMedium": [Function],
                        }
                      }
                    >
                      <FocusWatcher
                        autoFocus={true}
                        crossFrame={true}
                        disabled={false}
                        id={Object {}}
                        observed={
                          <div
                            class="modal-content-focus-trap-container"
                            data-focus-lock-disabled="false"
                          >
                            <div
                              class="abstract-modal-container"
                              data-terra-abstract-modal-begin="true"
                              tabindex="-1"
                            >
                              <span
                                class="visually-hidden-text"
                              >
                                Terra.AbstractModal.BeginModalDialog
                              </span>
                              <div>
                                <h1>
                                  Terra Modal
                                </h1>
                                <button
                                  type="button"
                                >
                                  Close Modal
                                </button>
                              </div>
                              <span
                                class="visually-hidden-text"
                              >
                                Terra.AbstractModal.EndModalDialog
                              </span>
                            </div>
                          </div>
                        }
                        onActivation={[Function]}
                        onDeactivation={[Function]}
                        persistentFocus={false}
                        returnFocus={[Function]}
                        shards={Array []}
                        sideCar={
                          Object {
                            "assignMedium": [Function],
                            "assignSyncMedium": [Function],
                            "options": Object {
                              "async": true,
                              "ssr": false,
                            },
                            "read": [Function],
                            "useMedium": [Function],
                          }
                        }
                      />
                    </SideEffect(FocusWatcher)>
                    <div
                      className="modal-content-focus-trap-container"
                      data-focus-lock-disabled={false}
                      onBlur={[Function]}
                      onFocus={[Function]}
                    >
                      <div
                        className="abstract-modal-container"
                        data-terra-abstract-modal-begin={true}
                        tabIndex="-1"
                      >
                        <FormattedMessage
                          id="Terra.AbstractModal.BeginModalDialog"
                          values={Object {}}
                        >
                          <VisuallyHiddenText
                            text="Terra.AbstractModal.BeginModalDialog"
                          >
                            <span
                              className="visually-hidden-text"
                            >
                              Terra.AbstractModal.BeginModalDialog
                            </span>
                          </VisuallyHiddenText>
                        </FormattedMessage>
                        <div>
                          <h1>
                            Terra Modal
                          </h1>
                          <button
                            onClick={[Function]}
                            type="button"
                          >
                            Close Modal
                          </button>
                        </div>
                        <FormattedMessage
                          id="Terra.AbstractModal.EndModalDialog"
                          values={Object {}}
                        >
                          <VisuallyHiddenText
                            text="Terra.AbstractModal.EndModalDialog"
                          >
                            <span
                              className="visually-hidden-text"
                            >
                              Terra.AbstractModal.EndModalDialog
                            </span>
                          </VisuallyHiddenText>
                        </FormattedMessage>
                      </div>
                    </div>
                    <div
                      data-focus-guard={true}
                      style={
                        Object {
                          "height": "0px",
                          "left": "1px",
                          "overflow": "hidden",
                          "padding": 0,
                          "position": "fixed",
                          "top": "1px",
                          "width": "1px",
                        }
                      }
                      tabIndex={0}
                    />
                  </ForwardRef(FocusLockUI)>
                </ForwardRef(FocusLockUICombination)>
              </FocusTrapWrapper>
            </div>
          </ForwardRef>
        </Portal>
      </Portal>
    </AbstractModal>
    <button
      onClick={[Function]}
      type="button"
    >
      Open Modal
    </button>
  </div>
</ModalExample>
`;

exports[`should render the correct snapshot for iPads 1`] = `
<ModalExample
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": null,
      "now": [Function],
      "onError": [Function],
      "textComponent": "span",
      "timeZone": null,
    }
  }
>
  <div>
    <AbstractModal
      ariaLabel="Terra Modal"
      classNameModal={null}
      classNameOverlay={null}
      closeOnEsc={true}
      closeOnOutsideClick={true}
      intl={
        Object {
          "defaultFormats": Object {},
          "defaultLocale": "en",
          "formatDate": [Function],
          "formatHTMLMessage": [Function],
          "formatMessage": [Function],
          "formatNumber": [Function],
          "formatPlural": [Function],
          "formatRelative": [Function],
          "formatTime": [Function],
          "formats": Object {},
          "formatters": Object {
            "getDateTimeFormat": [Function],
            "getMessageFormat": [Function],
            "getNumberFormat": [Function],
            "getPluralFormat": [Function],
            "getRelativeFormat": [Function],
          },
          "locale": "en",
          "messages": null,
          "now": [Function],
          "onError": [Function],
          "textComponent": "span",
          "timeZone": null,
        }
      }
      isFullscreen={false}
      isOpen={true}
      onRequestClose={[Function]}
      role="dialog"
      rootSelector="#root"
      trapFocus={false}
      zIndex="6000"
    >
      <Portal
        isOpened={true}
      >
        <Portal
          containerInfo={
            <div>
              <div
                class="overlay layer-6000"
              />
              <div
                aria-label="Terra Modal"
                aria-modal="true"
                class="abstract-modal layer-6000"
                intl="[object Object]"
                role="dialog"
                tabindex="-1"
              >
                <div
                  class="abstract-modal-container"
                  data-terra-abstract-modal-begin="true"
                  tabindex="-1"
                >
                  <span
                    class="visually-hidden-text"
                  >
                    Terra.AbstractModal.BeginModalDialog
                  </span>
                  <div>
                    <h1>
                      Terra Modal
                    </h1>
                    <button
                      type="button"
                    >
                      Close Modal
                    </button>
                  </div>
                  <span
                    class="visually-hidden-text"
                  >
                    Terra.AbstractModal.EndModalDialog
                  </span>
                </div>
              </div>
            </div>
          }
        >
          <ForwardRef
            aria-modal="true"
            ariaLabel="Terra Modal"
            classNameModal={null}
            classNameOverlay={null}
            closeOnOutsideClick={true}
            intl={
              Object {
                "defaultFormats": Object {},
                "defaultLocale": "en",
                "formatDate": [Function],
                "formatHTMLMessage": [Function],
                "formatMessage": [Function],
                "formatNumber": [Function],
                "formatPlural": [Function],
                "formatRelative": [Function],
                "formatTime": [Function],
                "formats": Object {},
                "formatters": Object {
                  "getDateTimeFormat": [Function],
                  "getMessageFormat": [Function],
                  "getNumberFormat": [Function],
                  "getPluralFormat": [Function],
                  "getRelativeFormat": [Function],
                },
                "locale": "en",
                "messages": null,
                "now": [Function],
                "onError": [Function],
                "textComponent": "span",
                "timeZone": null,
              }
            }
            isFullscreen={false}
            isScrollable={false}
            onKeyDown={[Function]}
            onRequestClose={[Function]}
            role="dialog"
            rootSelector="#root"
            trapFocus={false}
            zIndex="6000"
          >
            <ModalOverlay
              className={null}
              onClick={[Function]}
              zIndex="6000"
            >
              <div
                className="overlay layer-6000"
                onClick={[Function]}
              />
            </ModalOverlay>
            <div
              aria-label="Terra Modal"
              aria-modal="true"
              className="abstract-modal layer-6000"
              intl={
                Object {
                  "defaultFormats": Object {},
                  "defaultLocale": "en",
                  "formatDate": [Function],
                  "formatHTMLMessage": [Function],
                  "formatMessage": [Function],
                  "formatNumber": [Function],
                  "formatPlural": [Function],
                  "formatRelative": [Function],
                  "formatTime": [Function],
                  "formats": Object {},
                  "formatters": Object {
                    "getDateTimeFormat": [Function],
                    "getMessageFormat": [Function],
                    "getNumberFormat": [Function],
                    "getPluralFormat": [Function],
                    "getRelativeFormat": [Function],
                  },
                  "locale": "en",
                  "messages": null,
                  "now": [Function],
                  "onError": [Function],
                  "textComponent": "span",
                  "timeZone": null,
                }
              }
              onKeyDown={[Function]}
              role="dialog"
              tabIndex="-1"
            >
              <FocusTrapWrapper
                trapFocus={false}
              >
                <div
                  className="abstract-modal-container"
                  data-terra-abstract-modal-begin={true}
                  tabIndex="-1"
                >
                  <FormattedMessage
                    id="Terra.AbstractModal.BeginModalDialog"
                    values={Object {}}
                  >
                    <VisuallyHiddenText
                      text="Terra.AbstractModal.BeginModalDialog"
                    >
                      <span
                        className="visually-hidden-text"
                      >
                        Terra.AbstractModal.BeginModalDialog
                      </span>
                    </VisuallyHiddenText>
                  </FormattedMessage>
                  <div>
                    <h1>
                      Terra Modal
                    </h1>
                    <button
                      onClick={[Function]}
                      type="button"
                    >
                      Close Modal
                    </button>
                  </div>
                  <FormattedMessage
                    id="Terra.AbstractModal.EndModalDialog"
                    values={Object {}}
                  >
                    <VisuallyHiddenText
                      text="Terra.AbstractModal.EndModalDialog"
                    >
                      <span
                        className="visually-hidden-text"
                      >
                        Terra.AbstractModal.EndModalDialog
                      </span>
                    </VisuallyHiddenText>
                  </FormattedMessage>
                </div>
              </FocusTrapWrapper>
            </div>
          </ForwardRef>
        </Portal>
      </Portal>
    </AbstractModal>
    <button
      onClick={[Function]}
      type="button"
    >
      Open Modal
    </button>
  </div>
</ModalExample>
`;

exports[`should render the correct snapshot for iPhones 1`] = `
<ModalExample
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": null,
      "now": [Function],
      "onError": [Function],
      "textComponent": "span",
      "timeZone": null,
    }
  }
>
  <div>
    <AbstractModal
      ariaLabel="Terra Modal"
      classNameModal={null}
      classNameOverlay={null}
      closeOnEsc={true}
      closeOnOutsideClick={true}
      intl={
        Object {
          "defaultFormats": Object {},
          "defaultLocale": "en",
          "formatDate": [Function],
          "formatHTMLMessage": [Function],
          "formatMessage": [Function],
          "formatNumber": [Function],
          "formatPlural": [Function],
          "formatRelative": [Function],
          "formatTime": [Function],
          "formats": Object {},
          "formatters": Object {
            "getDateTimeFormat": [Function],
            "getMessageFormat": [Function],
            "getNumberFormat": [Function],
            "getPluralFormat": [Function],
            "getRelativeFormat": [Function],
          },
          "locale": "en",
          "messages": null,
          "now": [Function],
          "onError": [Function],
          "textComponent": "span",
          "timeZone": null,
        }
      }
      isFullscreen={false}
      isOpen={true}
      onRequestClose={[Function]}
      role="dialog"
      rootSelector="#root"
      trapFocus={false}
      zIndex="6000"
    >
      <Portal
        isOpened={true}
      >
        <Portal
          containerInfo={
            <div>
              <div
                class="overlay layer-6000"
              />
              <div
                aria-label="Terra Modal"
                aria-modal="true"
                class="abstract-modal layer-6000"
                intl="[object Object]"
                role="dialog"
                tabindex="-1"
              >
                <div
                  class="abstract-modal-container"
                  data-terra-abstract-modal-begin="true"
                  tabindex="-1"
                >
                  <span
                    class="visually-hidden-text"
                  >
                    Terra.AbstractModal.BeginModalDialog
                  </span>
                  <div>
                    <h1>
                      Terra Modal
                    </h1>
                    <button
                      type="button"
                    >
                      Close Modal
                    </button>
                  </div>
                  <span
                    class="visually-hidden-text"
                  >
                    Terra.AbstractModal.EndModalDialog
                  </span>
                </div>
              </div>
            </div>
          }
        >
          <ForwardRef
            aria-modal="true"
            ariaLabel="Terra Modal"
            classNameModal={null}
            classNameOverlay={null}
            closeOnOutsideClick={true}
            intl={
              Object {
                "defaultFormats": Object {},
                "defaultLocale": "en",
                "formatDate": [Function],
                "formatHTMLMessage": [Function],
                "formatMessage": [Function],
                "formatNumber": [Function],
                "formatPlural": [Function],
                "formatRelative": [Function],
                "formatTime": [Function],
                "formats": Object {},
                "formatters": Object {
                  "getDateTimeFormat": [Function],
                  "getMessageFormat": [Function],
                  "getNumberFormat": [Function],
                  "getPluralFormat": [Function],
                  "getRelativeFormat": [Function],
                },
                "locale": "en",
                "messages": null,
                "now": [Function],
                "onError": [Function],
                "textComponent": "span",
                "timeZone": null,
              }
            }
            isFullscreen={false}
            isScrollable={false}
            onKeyDown={[Function]}
            onRequestClose={[Function]}
            role="dialog"
            rootSelector="#root"
            trapFocus={false}
            zIndex="6000"
          >
            <ModalOverlay
              className={null}
              onClick={[Function]}
              zIndex="6000"
            >
              <div
                className="overlay layer-6000"
                onClick={[Function]}
              />
            </ModalOverlay>
            <div
              aria-label="Terra Modal"
              aria-modal="true"
              className="abstract-modal layer-6000"
              intl={
                Object {
                  "defaultFormats": Object {},
                  "defaultLocale": "en",
                  "formatDate": [Function],
                  "formatHTMLMessage": [Function],
                  "formatMessage": [Function],
                  "formatNumber": [Function],
                  "formatPlural": [Function],
                  "formatRelative": [Function],
                  "formatTime": [Function],
                  "formats": Object {},
                  "formatters": Object {
                    "getDateTimeFormat": [Function],
                    "getMessageFormat": [Function],
                    "getNumberFormat": [Function],
                    "getPluralFormat": [Function],
                    "getRelativeFormat": [Function],
                  },
                  "locale": "en",
                  "messages": null,
                  "now": [Function],
                  "onError": [Function],
                  "textComponent": "span",
                  "timeZone": null,
                }
              }
              onKeyDown={[Function]}
              role="dialog"
              tabIndex="-1"
            >
              <FocusTrapWrapper
                trapFocus={false}
              >
                <div
                  className="abstract-modal-container"
                  data-terra-abstract-modal-begin={true}
                  tabIndex="-1"
                >
                  <FormattedMessage
                    id="Terra.AbstractModal.BeginModalDialog"
                    values={Object {}}
                  >
                    <VisuallyHiddenText
                      text="Terra.AbstractModal.BeginModalDialog"
                    >
                      <span
                        className="visually-hidden-text"
                      >
                        Terra.AbstractModal.BeginModalDialog
                      </span>
                    </VisuallyHiddenText>
                  </FormattedMessage>
                  <div>
                    <h1>
                      Terra Modal
                    </h1>
                    <button
                      onClick={[Function]}
                      type="button"
                    >
                      Close Modal
                    </button>
                  </div>
                  <FormattedMessage
                    id="Terra.AbstractModal.EndModalDialog"
                    values={Object {}}
                  >
                    <VisuallyHiddenText
                      text="Terra.AbstractModal.EndModalDialog"
                    >
                      <span
                        className="visually-hidden-text"
                      >
                        Terra.AbstractModal.EndModalDialog
                      </span>
                    </VisuallyHiddenText>
                  </FormattedMessage>
                </div>
              </FocusTrapWrapper>
            </div>
          </ForwardRef>
        </Portal>
      </Portal>
    </AbstractModal>
    <button
      onClick={[Function]}
      type="button"
    >
      Open Modal
    </button>
  </div>
</ModalExample>
`;

exports[`should render the correct snapshot for iPods 1`] = `
<ModalExample
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": null,
      "now": [Function],
      "onError": [Function],
      "textComponent": "span",
      "timeZone": null,
    }
  }
>
  <div>
    <AbstractModal
      ariaLabel="Terra Modal"
      classNameModal={null}
      classNameOverlay={null}
      closeOnEsc={true}
      closeOnOutsideClick={true}
      intl={
        Object {
          "defaultFormats": Object {},
          "defaultLocale": "en",
          "formatDate": [Function],
          "formatHTMLMessage": [Function],
          "formatMessage": [Function],
          "formatNumber": [Function],
          "formatPlural": [Function],
          "formatRelative": [Function],
          "formatTime": [Function],
          "formats": Object {},
          "formatters": Object {
            "getDateTimeFormat": [Function],
            "getMessageFormat": [Function],
            "getNumberFormat": [Function],
            "getPluralFormat": [Function],
            "getRelativeFormat": [Function],
          },
          "locale": "en",
          "messages": null,
          "now": [Function],
          "onError": [Function],
          "textComponent": "span",
          "timeZone": null,
        }
      }
      isFullscreen={false}
      isOpen={true}
      onRequestClose={[Function]}
      role="dialog"
      rootSelector="#root"
      trapFocus={false}
      zIndex="6000"
    >
      <Portal
        isOpened={true}
      >
        <Portal
          containerInfo={
            <div>
              <div
                class="overlay layer-6000"
              />
              <div
                aria-label="Terra Modal"
                aria-modal="true"
                class="abstract-modal layer-6000"
                intl="[object Object]"
                role="dialog"
                tabindex="-1"
              >
                <div
                  class="abstract-modal-container"
                  data-terra-abstract-modal-begin="true"
                  tabindex="-1"
                >
                  <span
                    class="visually-hidden-text"
                  >
                    Terra.AbstractModal.BeginModalDialog
                  </span>
                  <div>
                    <h1>
                      Terra Modal
                    </h1>
                    <button
                      type="button"
                    >
                      Close Modal
                    </button>
                  </div>
                  <span
                    class="visually-hidden-text"
                  >
                    Terra.AbstractModal.EndModalDialog
                  </span>
                </div>
              </div>
            </div>
          }
        >
          <ForwardRef
            aria-modal="true"
            ariaLabel="Terra Modal"
            classNameModal={null}
            classNameOverlay={null}
            closeOnOutsideClick={true}
            intl={
              Object {
                "defaultFormats": Object {},
                "defaultLocale": "en",
                "formatDate": [Function],
                "formatHTMLMessage": [Function],
                "formatMessage": [Function],
                "formatNumber": [Function],
                "formatPlural": [Function],
                "formatRelative": [Function],
                "formatTime": [Function],
                "formats": Object {},
                "formatters": Object {
                  "getDateTimeFormat": [Function],
                  "getMessageFormat": [Function],
                  "getNumberFormat": [Function],
                  "getPluralFormat": [Function],
                  "getRelativeFormat": [Function],
                },
                "locale": "en",
                "messages": null,
                "now": [Function],
                "onError": [Function],
                "textComponent": "span",
                "timeZone": null,
              }
            }
            isFullscreen={false}
            isScrollable={false}
            onKeyDown={[Function]}
            onRequestClose={[Function]}
            role="dialog"
            rootSelector="#root"
            trapFocus={false}
            zIndex="6000"
          >
            <ModalOverlay
              className={null}
              onClick={[Function]}
              zIndex="6000"
            >
              <div
                className="overlay layer-6000"
                onClick={[Function]}
              />
            </ModalOverlay>
            <div
              aria-label="Terra Modal"
              aria-modal="true"
              className="abstract-modal layer-6000"
              intl={
                Object {
                  "defaultFormats": Object {},
                  "defaultLocale": "en",
                  "formatDate": [Function],
                  "formatHTMLMessage": [Function],
                  "formatMessage": [Function],
                  "formatNumber": [Function],
                  "formatPlural": [Function],
                  "formatRelative": [Function],
                  "formatTime": [Function],
                  "formats": Object {},
                  "formatters": Object {
                    "getDateTimeFormat": [Function],
                    "getMessageFormat": [Function],
                    "getNumberFormat": [Function],
                    "getPluralFormat": [Function],
                    "getRelativeFormat": [Function],
                  },
                  "locale": "en",
                  "messages": null,
                  "now": [Function],
                  "onError": [Function],
                  "textComponent": "span",
                  "timeZone": null,
                }
              }
              onKeyDown={[Function]}
              role="dialog"
              tabIndex="-1"
            >
              <FocusTrapWrapper
                trapFocus={false}
              >
                <div
                  className="abstract-modal-container"
                  data-terra-abstract-modal-begin={true}
                  tabIndex="-1"
                >
                  <FormattedMessage
                    id="Terra.AbstractModal.BeginModalDialog"
                    values={Object {}}
                  >
                    <VisuallyHiddenText
                      text="Terra.AbstractModal.BeginModalDialog"
                    >
                      <span
                        className="visually-hidden-text"
                      >
                        Terra.AbstractModal.BeginModalDialog
                      </span>
                    </VisuallyHiddenText>
                  </FormattedMessage>
                  <div>
                    <h1>
                      Terra Modal
                    </h1>
                    <button
                      onClick={[Function]}
                      type="button"
                    >
                      Close Modal
                    </button>
                  </div>
                  <FormattedMessage
                    id="Terra.AbstractModal.EndModalDialog"
                    values={Object {}}
                  >
                    <VisuallyHiddenText
                      text="Terra.AbstractModal.EndModalDialog"
                    >
                      <span
                        className="visually-hidden-text"
                      >
                        Terra.AbstractModal.EndModalDialog
                      </span>
                    </VisuallyHiddenText>
                  </FormattedMessage>
                </div>
              </FocusTrapWrapper>
            </div>
          </ForwardRef>
        </Portal>
      </Portal>
    </AbstractModal>
    <button
      onClick={[Function]}
      type="button"
    >
      Open Modal
    </button>
  </div>
</ModalExample>
`;

exports[`should shallow an open modal 1`] = `
<div>
  <AbstractModal
    ariaLabel="Terra Modal"
    classNameModal={null}
    classNameOverlay={null}
    closeOnEsc={true}
    closeOnOutsideClick={true}
    intl={
      Object {
        "defaultFormats": Object {},
        "defaultLocale": "en",
        "formatDate": [Function],
        "formatHTMLMessage": [Function],
        "formatMessage": [Function],
        "formatNumber": [Function],
        "formatPlural": [Function],
        "formatRelative": [Function],
        "formatTime": [Function],
        "formats": Object {},
        "formatters": Object {
          "getDateTimeFormat": [Function],
          "getMessageFormat": [Function],
          "getNumberFormat": [Function],
          "getPluralFormat": [Function],
          "getRelativeFormat": [Function],
        },
        "locale": "en",
        "messages": null,
        "now": [Function],
        "onError": [Function],
        "textComponent": "span",
        "timeZone": null,
      }
    }
    isFullscreen={false}
    isOpen={true}
    onRequestClose={[Function]}
    role="dialog"
    rootSelector="#root"
    trapFocus={false}
    zIndex="6000"
  >
    <div>
      <h1>
        Terra Modal
      </h1>
      <button
        onClick={[Function]}
        type="button"
      >
        Close Modal
      </button>
    </div>
  </AbstractModal>
  <button
    onClick={[Function]}
    type="button"
  >
    Open Modal
  </button>
</div>
`;

exports[`should shallow an open modal 6000 z-index 1`] = `
<div>
  <AbstractModal
    ariaLabel="Terra Modal"
    classNameModal={null}
    classNameOverlay={null}
    closeOnEsc={true}
    closeOnOutsideClick={true}
    intl={
      Object {
        "defaultFormats": Object {},
        "defaultLocale": "en",
        "formatDate": [Function],
        "formatHTMLMessage": [Function],
        "formatMessage": [Function],
        "formatNumber": [Function],
        "formatPlural": [Function],
        "formatRelative": [Function],
        "formatTime": [Function],
        "formats": Object {},
        "formatters": Object {
          "getDateTimeFormat": [Function],
          "getMessageFormat": [Function],
          "getNumberFormat": [Function],
          "getPluralFormat": [Function],
          "getRelativeFormat": [Function],
        },
        "locale": "en",
        "messages": null,
        "now": [Function],
        "onError": [Function],
        "textComponent": "span",
        "timeZone": null,
      }
    }
    isFullscreen={false}
    isOpen={true}
    onRequestClose={[Function]}
    role="dialog"
    rootSelector="#root"
    trapFocus={false}
    zIndex="6000"
  >
    <div>
      <h1>
        Terra Modal
      </h1>
      <button
        onClick={[Function]}
        type="button"
      >
        Close Modal
      </button>
    </div>
  </AbstractModal>
  <button
    onClick={[Function]}
    type="button"
  >
    Open Modal
  </button>
</div>
`;

exports[`should shallow an open modal 7000 z-index 1`] = `
<div>
  <AbstractModal
    ariaLabel="Terra Modal"
    classNameModal={null}
    classNameOverlay={null}
    closeOnEsc={true}
    closeOnOutsideClick={true}
    intl={
      Object {
        "defaultFormats": Object {},
        "defaultLocale": "en",
        "formatDate": [Function],
        "formatHTMLMessage": [Function],
        "formatMessage": [Function],
        "formatNumber": [Function],
        "formatPlural": [Function],
        "formatRelative": [Function],
        "formatTime": [Function],
        "formats": Object {},
        "formatters": Object {
          "getDateTimeFormat": [Function],
          "getMessageFormat": [Function],
          "getNumberFormat": [Function],
          "getPluralFormat": [Function],
          "getRelativeFormat": [Function],
        },
        "locale": "en",
        "messages": null,
        "now": [Function],
        "onError": [Function],
        "textComponent": "span",
        "timeZone": null,
      }
    }
    isFullscreen={false}
    isOpen={true}
    onRequestClose={[Function]}
    role="dialog"
    rootSelector="#root"
    trapFocus={false}
    zIndex="7000"
  >
    <div>
      <h1>
        Terra Modal
      </h1>
      <button
        onClick={[Function]}
        type="button"
      >
        Close Modal
      </button>
    </div>
  </AbstractModal>
  <button
    onClick={[Function]}
    type="button"
  >
    Open Modal
  </button>
</div>
`;

exports[`should shallow an open modal 8000 z-index 1`] = `
<div>
  <AbstractModal
    ariaLabel="Terra Modal"
    classNameModal={null}
    classNameOverlay={null}
    closeOnEsc={true}
    closeOnOutsideClick={true}
    intl={
      Object {
        "defaultFormats": Object {},
        "defaultLocale": "en",
        "formatDate": [Function],
        "formatHTMLMessage": [Function],
        "formatMessage": [Function],
        "formatNumber": [Function],
        "formatPlural": [Function],
        "formatRelative": [Function],
        "formatTime": [Function],
        "formats": Object {},
        "formatters": Object {
          "getDateTimeFormat": [Function],
          "getMessageFormat": [Function],
          "getNumberFormat": [Function],
          "getPluralFormat": [Function],
          "getRelativeFormat": [Function],
        },
        "locale": "en",
        "messages": null,
        "now": [Function],
        "onError": [Function],
        "textComponent": "span",
        "timeZone": null,
      }
    }
    isFullscreen={false}
    isOpen={true}
    onRequestClose={[Function]}
    role="dialog"
    rootSelector="#root"
    trapFocus={false}
    zIndex="8000"
  >
    <div>
      <h1>
        Terra Modal
      </h1>
      <button
        onClick={[Function]}
        type="button"
      >
        Close Modal
      </button>
    </div>
  </AbstractModal>
  <button
    onClick={[Function]}
    type="button"
  >
    Open Modal
  </button>
</div>
`;

exports[`should shallow an open modal 9000 z-index 1`] = `
<div>
  <AbstractModal
    ariaLabel="Terra Modal"
    classNameModal={null}
    classNameOverlay={null}
    closeOnEsc={true}
    closeOnOutsideClick={true}
    intl={
      Object {
        "defaultFormats": Object {},
        "defaultLocale": "en",
        "formatDate": [Function],
        "formatHTMLMessage": [Function],
        "formatMessage": [Function],
        "formatNumber": [Function],
        "formatPlural": [Function],
        "formatRelative": [Function],
        "formatTime": [Function],
        "formats": Object {},
        "formatters": Object {
          "getDateTimeFormat": [Function],
          "getMessageFormat": [Function],
          "getNumberFormat": [Function],
          "getPluralFormat": [Function],
          "getRelativeFormat": [Function],
        },
        "locale": "en",
        "messages": null,
        "now": [Function],
        "onError": [Function],
        "textComponent": "span",
        "timeZone": null,
      }
    }
    isFullscreen={false}
    isOpen={true}
    onRequestClose={[Function]}
    role="dialog"
    rootSelector="#root"
    trapFocus={false}
    zIndex="9000"
  >
    <div>
      <h1>
        Terra Modal
      </h1>
      <button
        onClick={[Function]}
        type="button"
      >
        Close Modal
      </button>
    </div>
  </AbstractModal>
  <button
    onClick={[Function]}
    type="button"
  >
    Open Modal
  </button>
</div>
`;
