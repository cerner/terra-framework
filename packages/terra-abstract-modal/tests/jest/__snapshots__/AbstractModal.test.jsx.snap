// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`should mount an open modal 1`] = `
<ModalExample
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": null,
      "now": [Function],
      "onError": [Function],
      "textComponent": "span",
      "timeZone": null,
    }
  }
>
  <div>
    <AbstractModal
      ariaLabel="Terra Modal"
      classNameModal={null}
      classNameOverlay={null}
      closeOnEsc={true}
      closeOnOutsideClick={true}
      intl={
        Object {
          "defaultFormats": Object {},
          "defaultLocale": "en",
          "formatDate": [Function],
          "formatHTMLMessage": [Function],
          "formatMessage": [Function],
          "formatNumber": [Function],
          "formatPlural": [Function],
          "formatRelative": [Function],
          "formatTime": [Function],
          "formats": Object {},
          "formatters": Object {
            "getDateTimeFormat": [Function],
            "getMessageFormat": [Function],
            "getNumberFormat": [Function],
            "getPluralFormat": [Function],
            "getRelativeFormat": [Function],
          },
          "locale": "en",
          "messages": null,
          "now": [Function],
          "onError": [Function],
          "textComponent": "span",
          "timeZone": null,
        }
      }
      isFullscreen={false}
      isOpen={true}
      onRequestClose={[Function]}
      role="dialog"
      rootSelector="#root"
      zIndex="6000"
    >
      <Portal
        isOpened={true}
      >
        <Portal
          containerInfo={
            <div>
              <div
                class="overlay layer-6000"
              />
              <div
                aria-label="Terra Modal"
                aria-modal="true"
                class="abstract-modal layer-6000"
                intl="[object Object]"
                role="dialog"
                tabindex="0"
              >
                <span
                  class="visually-hidden-text"
                  data-terra-abstract-modal-begin="true"
                  tabindex="-1"
                >
                  Terra.AbstractModal.BeginModalDialog
                </span>
                <div>
                  <h1>
                    Terra Modal
                  </h1>
                  <button
                    type="button"
                  >
                    Close Modal
                  </button>
                </div>
                <span
                  class="visually-hidden-text"
                >
                  Terra.AbstractModal.EndModalDialog
                </span>
              </div>
            </div>
          }
        >
          <ForwardRef
            aria-modal="true"
            ariaLabel="Terra Modal"
            classNameModal={null}
            classNameOverlay={null}
            closeOnOutsideClick={true}
            intl={
              Object {
                "defaultFormats": Object {},
                "defaultLocale": "en",
                "formatDate": [Function],
                "formatHTMLMessage": [Function],
                "formatMessage": [Function],
                "formatNumber": [Function],
                "formatPlural": [Function],
                "formatRelative": [Function],
                "formatTime": [Function],
                "formats": Object {},
                "formatters": Object {
                  "getDateTimeFormat": [Function],
                  "getMessageFormat": [Function],
                  "getNumberFormat": [Function],
                  "getPluralFormat": [Function],
                  "getRelativeFormat": [Function],
                },
                "locale": "en",
                "messages": null,
                "now": [Function],
                "onError": [Function],
                "textComponent": "span",
                "timeZone": null,
              }
            }
            isFullscreen={false}
            isScrollable={false}
            onRequestClose={[Function]}
            role="dialog"
            rootSelector="#root"
            zIndex="6000"
          >
            <ModalOverlay
              className={null}
              onClick={[Function]}
              zIndex="6000"
            >
              <div
                className="overlay layer-6000"
                onClick={[Function]}
              />
            </ModalOverlay>
            <div
              aria-label="Terra Modal"
              aria-modal="true"
              className="abstract-modal layer-6000"
              intl={
                Object {
                  "defaultFormats": Object {},
                  "defaultLocale": "en",
                  "formatDate": [Function],
                  "formatHTMLMessage": [Function],
                  "formatMessage": [Function],
                  "formatNumber": [Function],
                  "formatPlural": [Function],
                  "formatRelative": [Function],
                  "formatTime": [Function],
                  "formats": Object {},
                  "formatters": Object {
                    "getDateTimeFormat": [Function],
                    "getMessageFormat": [Function],
                    "getNumberFormat": [Function],
                    "getPluralFormat": [Function],
                    "getRelativeFormat": [Function],
                  },
                  "locale": "en",
                  "messages": null,
                  "now": [Function],
                  "onError": [Function],
                  "textComponent": "span",
                  "timeZone": null,
                }
              }
              role="dialog"
              tabIndex="0"
            >
              <FormattedMessage
                id="Terra.AbstractModal.BeginModalDialog"
                values={Object {}}
              >
                <VisuallyHiddenText
                  data-terra-abstract-modal-begin={true}
                  tabIndex="-1"
                  text="Terra.AbstractModal.BeginModalDialog"
                >
                  <span
                    className="visually-hidden-text"
                    data-terra-abstract-modal-begin={true}
                    tabIndex="-1"
                  >
                    Terra.AbstractModal.BeginModalDialog
                  </span>
                </VisuallyHiddenText>
              </FormattedMessage>
              <div>
                <h1>
                  Terra Modal
                </h1>
                <button
                  onClick={[Function]}
                  type="button"
                >
                  Close Modal
                </button>
              </div>
              <FormattedMessage
                id="Terra.AbstractModal.EndModalDialog"
                values={Object {}}
              >
                <VisuallyHiddenText
                  text="Terra.AbstractModal.EndModalDialog"
                >
                  <span
                    className="visually-hidden-text"
                  >
                    Terra.AbstractModal.EndModalDialog
                  </span>
                </VisuallyHiddenText>
              </FormattedMessage>
            </div>
          </ForwardRef>
        </Portal>
      </Portal>
    </AbstractModal>
    <button
      onClick={[Function]}
      type="button"
    >
      Open Modal
    </button>
  </div>
</ModalExample>
`;

exports[`should mount an open modal 7000 z-index 1`] = `
<ModalExample
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": null,
      "now": [Function],
      "onError": [Function],
      "textComponent": "span",
      "timeZone": null,
    }
  }
  zIndex="7000"
>
  <div>
    <AbstractModal
      ariaLabel="Terra Modal"
      classNameModal={null}
      classNameOverlay={null}
      closeOnEsc={true}
      closeOnOutsideClick={true}
      intl={
        Object {
          "defaultFormats": Object {},
          "defaultLocale": "en",
          "formatDate": [Function],
          "formatHTMLMessage": [Function],
          "formatMessage": [Function],
          "formatNumber": [Function],
          "formatPlural": [Function],
          "formatRelative": [Function],
          "formatTime": [Function],
          "formats": Object {},
          "formatters": Object {
            "getDateTimeFormat": [Function],
            "getMessageFormat": [Function],
            "getNumberFormat": [Function],
            "getPluralFormat": [Function],
            "getRelativeFormat": [Function],
          },
          "locale": "en",
          "messages": null,
          "now": [Function],
          "onError": [Function],
          "textComponent": "span",
          "timeZone": null,
        }
      }
      isFullscreen={false}
      isOpen={true}
      onRequestClose={[Function]}
      role="dialog"
      rootSelector="#root"
      zIndex="7000"
    >
      <Portal
        isOpened={true}
      >
        <Portal
          containerInfo={
            <div>
              <div
                class="overlay layer-7000"
              />
              <div
                aria-label="Terra Modal"
                aria-modal="true"
                class="abstract-modal layer-7000"
                intl="[object Object]"
                role="dialog"
                tabindex="0"
              >
                <span
                  class="visually-hidden-text"
                  data-terra-abstract-modal-begin="true"
                  tabindex="-1"
                >
                  Terra.AbstractModal.BeginModalDialog
                </span>
                <div>
                  <h1>
                    Terra Modal
                  </h1>
                  <button
                    type="button"
                  >
                    Close Modal
                  </button>
                </div>
                <span
                  class="visually-hidden-text"
                >
                  Terra.AbstractModal.EndModalDialog
                </span>
              </div>
            </div>
          }
        >
          <ForwardRef
            aria-modal="true"
            ariaLabel="Terra Modal"
            classNameModal={null}
            classNameOverlay={null}
            closeOnOutsideClick={true}
            intl={
              Object {
                "defaultFormats": Object {},
                "defaultLocale": "en",
                "formatDate": [Function],
                "formatHTMLMessage": [Function],
                "formatMessage": [Function],
                "formatNumber": [Function],
                "formatPlural": [Function],
                "formatRelative": [Function],
                "formatTime": [Function],
                "formats": Object {},
                "formatters": Object {
                  "getDateTimeFormat": [Function],
                  "getMessageFormat": [Function],
                  "getNumberFormat": [Function],
                  "getPluralFormat": [Function],
                  "getRelativeFormat": [Function],
                },
                "locale": "en",
                "messages": null,
                "now": [Function],
                "onError": [Function],
                "textComponent": "span",
                "timeZone": null,
              }
            }
            isFullscreen={false}
            isScrollable={false}
            onRequestClose={[Function]}
            role="dialog"
            rootSelector="#root"
            zIndex="7000"
          >
            <ModalOverlay
              className={null}
              onClick={[Function]}
              zIndex="7000"
            >
              <div
                className="overlay layer-7000"
                onClick={[Function]}
              />
            </ModalOverlay>
            <div
              aria-label="Terra Modal"
              aria-modal="true"
              className="abstract-modal layer-7000"
              intl={
                Object {
                  "defaultFormats": Object {},
                  "defaultLocale": "en",
                  "formatDate": [Function],
                  "formatHTMLMessage": [Function],
                  "formatMessage": [Function],
                  "formatNumber": [Function],
                  "formatPlural": [Function],
                  "formatRelative": [Function],
                  "formatTime": [Function],
                  "formats": Object {},
                  "formatters": Object {
                    "getDateTimeFormat": [Function],
                    "getMessageFormat": [Function],
                    "getNumberFormat": [Function],
                    "getPluralFormat": [Function],
                    "getRelativeFormat": [Function],
                  },
                  "locale": "en",
                  "messages": null,
                  "now": [Function],
                  "onError": [Function],
                  "textComponent": "span",
                  "timeZone": null,
                }
              }
              role="dialog"
              tabIndex="0"
            >
              <FormattedMessage
                id="Terra.AbstractModal.BeginModalDialog"
                values={Object {}}
              >
                <VisuallyHiddenText
                  data-terra-abstract-modal-begin={true}
                  tabIndex="-1"
                  text="Terra.AbstractModal.BeginModalDialog"
                >
                  <span
                    className="visually-hidden-text"
                    data-terra-abstract-modal-begin={true}
                    tabIndex="-1"
                  >
                    Terra.AbstractModal.BeginModalDialog
                  </span>
                </VisuallyHiddenText>
              </FormattedMessage>
              <div>
                <h1>
                  Terra Modal
                </h1>
                <button
                  onClick={[Function]}
                  type="button"
                >
                  Close Modal
                </button>
              </div>
              <FormattedMessage
                id="Terra.AbstractModal.EndModalDialog"
                values={Object {}}
              >
                <VisuallyHiddenText
                  text="Terra.AbstractModal.EndModalDialog"
                >
                  <span
                    className="visually-hidden-text"
                  >
                    Terra.AbstractModal.EndModalDialog
                  </span>
                </VisuallyHiddenText>
              </FormattedMessage>
            </div>
          </ForwardRef>
        </Portal>
      </Portal>
    </AbstractModal>
    <button
      onClick={[Function]}
      type="button"
    >
      Open Modal
    </button>
  </div>
</ModalExample>
`;

exports[`should mount an open modal 8000 z-index 1`] = `
<ModalExample
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": null,
      "now": [Function],
      "onError": [Function],
      "textComponent": "span",
      "timeZone": null,
    }
  }
  zIndex="8000"
>
  <div>
    <AbstractModal
      ariaLabel="Terra Modal"
      classNameModal={null}
      classNameOverlay={null}
      closeOnEsc={true}
      closeOnOutsideClick={true}
      intl={
        Object {
          "defaultFormats": Object {},
          "defaultLocale": "en",
          "formatDate": [Function],
          "formatHTMLMessage": [Function],
          "formatMessage": [Function],
          "formatNumber": [Function],
          "formatPlural": [Function],
          "formatRelative": [Function],
          "formatTime": [Function],
          "formats": Object {},
          "formatters": Object {
            "getDateTimeFormat": [Function],
            "getMessageFormat": [Function],
            "getNumberFormat": [Function],
            "getPluralFormat": [Function],
            "getRelativeFormat": [Function],
          },
          "locale": "en",
          "messages": null,
          "now": [Function],
          "onError": [Function],
          "textComponent": "span",
          "timeZone": null,
        }
      }
      isFullscreen={false}
      isOpen={true}
      onRequestClose={[Function]}
      role="dialog"
      rootSelector="#root"
      zIndex="8000"
    >
      <Portal
        isOpened={true}
      >
        <Portal
          containerInfo={
            <div>
              <div
                class="overlay layer-8000"
              />
              <div
                aria-label="Terra Modal"
                aria-modal="true"
                class="abstract-modal layer-8000"
                intl="[object Object]"
                role="dialog"
                tabindex="0"
              >
                <span
                  class="visually-hidden-text"
                  data-terra-abstract-modal-begin="true"
                  tabindex="-1"
                >
                  Terra.AbstractModal.BeginModalDialog
                </span>
                <div>
                  <h1>
                    Terra Modal
                  </h1>
                  <button
                    type="button"
                  >
                    Close Modal
                  </button>
                </div>
                <span
                  class="visually-hidden-text"
                >
                  Terra.AbstractModal.EndModalDialog
                </span>
              </div>
            </div>
          }
        >
          <ForwardRef
            aria-modal="true"
            ariaLabel="Terra Modal"
            classNameModal={null}
            classNameOverlay={null}
            closeOnOutsideClick={true}
            intl={
              Object {
                "defaultFormats": Object {},
                "defaultLocale": "en",
                "formatDate": [Function],
                "formatHTMLMessage": [Function],
                "formatMessage": [Function],
                "formatNumber": [Function],
                "formatPlural": [Function],
                "formatRelative": [Function],
                "formatTime": [Function],
                "formats": Object {},
                "formatters": Object {
                  "getDateTimeFormat": [Function],
                  "getMessageFormat": [Function],
                  "getNumberFormat": [Function],
                  "getPluralFormat": [Function],
                  "getRelativeFormat": [Function],
                },
                "locale": "en",
                "messages": null,
                "now": [Function],
                "onError": [Function],
                "textComponent": "span",
                "timeZone": null,
              }
            }
            isFullscreen={false}
            isScrollable={false}
            onRequestClose={[Function]}
            role="dialog"
            rootSelector="#root"
            zIndex="8000"
          >
            <ModalOverlay
              className={null}
              onClick={[Function]}
              zIndex="8000"
            >
              <div
                className="overlay layer-8000"
                onClick={[Function]}
              />
            </ModalOverlay>
            <div
              aria-label="Terra Modal"
              aria-modal="true"
              className="abstract-modal layer-8000"
              intl={
                Object {
                  "defaultFormats": Object {},
                  "defaultLocale": "en",
                  "formatDate": [Function],
                  "formatHTMLMessage": [Function],
                  "formatMessage": [Function],
                  "formatNumber": [Function],
                  "formatPlural": [Function],
                  "formatRelative": [Function],
                  "formatTime": [Function],
                  "formats": Object {},
                  "formatters": Object {
                    "getDateTimeFormat": [Function],
                    "getMessageFormat": [Function],
                    "getNumberFormat": [Function],
                    "getPluralFormat": [Function],
                    "getRelativeFormat": [Function],
                  },
                  "locale": "en",
                  "messages": null,
                  "now": [Function],
                  "onError": [Function],
                  "textComponent": "span",
                  "timeZone": null,
                }
              }
              role="dialog"
              tabIndex="0"
            >
              <FormattedMessage
                id="Terra.AbstractModal.BeginModalDialog"
                values={Object {}}
              >
                <VisuallyHiddenText
                  data-terra-abstract-modal-begin={true}
                  tabIndex="-1"
                  text="Terra.AbstractModal.BeginModalDialog"
                >
                  <span
                    className="visually-hidden-text"
                    data-terra-abstract-modal-begin={true}
                    tabIndex="-1"
                  >
                    Terra.AbstractModal.BeginModalDialog
                  </span>
                </VisuallyHiddenText>
              </FormattedMessage>
              <div>
                <h1>
                  Terra Modal
                </h1>
                <button
                  onClick={[Function]}
                  type="button"
                >
                  Close Modal
                </button>
              </div>
              <FormattedMessage
                id="Terra.AbstractModal.EndModalDialog"
                values={Object {}}
              >
                <VisuallyHiddenText
                  text="Terra.AbstractModal.EndModalDialog"
                >
                  <span
                    className="visually-hidden-text"
                  >
                    Terra.AbstractModal.EndModalDialog
                  </span>
                </VisuallyHiddenText>
              </FormattedMessage>
            </div>
          </ForwardRef>
        </Portal>
      </Portal>
    </AbstractModal>
    <button
      onClick={[Function]}
      type="button"
    >
      Open Modal
    </button>
  </div>
</ModalExample>
`;

exports[`should mount an open modal 9000 z-index 1`] = `
<ModalExample
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": null,
      "now": [Function],
      "onError": [Function],
      "textComponent": "span",
      "timeZone": null,
    }
  }
  zIndex="9000"
>
  <div>
    <AbstractModal
      ariaLabel="Terra Modal"
      classNameModal={null}
      classNameOverlay={null}
      closeOnEsc={true}
      closeOnOutsideClick={true}
      intl={
        Object {
          "defaultFormats": Object {},
          "defaultLocale": "en",
          "formatDate": [Function],
          "formatHTMLMessage": [Function],
          "formatMessage": [Function],
          "formatNumber": [Function],
          "formatPlural": [Function],
          "formatRelative": [Function],
          "formatTime": [Function],
          "formats": Object {},
          "formatters": Object {
            "getDateTimeFormat": [Function],
            "getMessageFormat": [Function],
            "getNumberFormat": [Function],
            "getPluralFormat": [Function],
            "getRelativeFormat": [Function],
          },
          "locale": "en",
          "messages": null,
          "now": [Function],
          "onError": [Function],
          "textComponent": "span",
          "timeZone": null,
        }
      }
      isFullscreen={false}
      isOpen={true}
      onRequestClose={[Function]}
      role="dialog"
      rootSelector="#root"
      zIndex="9000"
    >
      <Portal
        isOpened={true}
      >
        <Portal
          containerInfo={
            <div>
              <div
                class="overlay layer-9000"
              />
              <div
                aria-label="Terra Modal"
                aria-modal="true"
                class="abstract-modal layer-9000"
                intl="[object Object]"
                role="dialog"
                tabindex="0"
              >
                <span
                  class="visually-hidden-text"
                  data-terra-abstract-modal-begin="true"
                  tabindex="-1"
                >
                  Terra.AbstractModal.BeginModalDialog
                </span>
                <div>
                  <h1>
                    Terra Modal
                  </h1>
                  <button
                    type="button"
                  >
                    Close Modal
                  </button>
                </div>
                <span
                  class="visually-hidden-text"
                >
                  Terra.AbstractModal.EndModalDialog
                </span>
              </div>
            </div>
          }
        >
          <ForwardRef
            aria-modal="true"
            ariaLabel="Terra Modal"
            classNameModal={null}
            classNameOverlay={null}
            closeOnOutsideClick={true}
            intl={
              Object {
                "defaultFormats": Object {},
                "defaultLocale": "en",
                "formatDate": [Function],
                "formatHTMLMessage": [Function],
                "formatMessage": [Function],
                "formatNumber": [Function],
                "formatPlural": [Function],
                "formatRelative": [Function],
                "formatTime": [Function],
                "formats": Object {},
                "formatters": Object {
                  "getDateTimeFormat": [Function],
                  "getMessageFormat": [Function],
                  "getNumberFormat": [Function],
                  "getPluralFormat": [Function],
                  "getRelativeFormat": [Function],
                },
                "locale": "en",
                "messages": null,
                "now": [Function],
                "onError": [Function],
                "textComponent": "span",
                "timeZone": null,
              }
            }
            isFullscreen={false}
            isScrollable={false}
            onRequestClose={[Function]}
            role="dialog"
            rootSelector="#root"
            zIndex="9000"
          >
            <ModalOverlay
              className={null}
              onClick={[Function]}
              zIndex="9000"
            >
              <div
                className="overlay layer-9000"
                onClick={[Function]}
              />
            </ModalOverlay>
            <div
              aria-label="Terra Modal"
              aria-modal="true"
              className="abstract-modal layer-9000"
              intl={
                Object {
                  "defaultFormats": Object {},
                  "defaultLocale": "en",
                  "formatDate": [Function],
                  "formatHTMLMessage": [Function],
                  "formatMessage": [Function],
                  "formatNumber": [Function],
                  "formatPlural": [Function],
                  "formatRelative": [Function],
                  "formatTime": [Function],
                  "formats": Object {},
                  "formatters": Object {
                    "getDateTimeFormat": [Function],
                    "getMessageFormat": [Function],
                    "getNumberFormat": [Function],
                    "getPluralFormat": [Function],
                    "getRelativeFormat": [Function],
                  },
                  "locale": "en",
                  "messages": null,
                  "now": [Function],
                  "onError": [Function],
                  "textComponent": "span",
                  "timeZone": null,
                }
              }
              role="dialog"
              tabIndex="0"
            >
              <FormattedMessage
                id="Terra.AbstractModal.BeginModalDialog"
                values={Object {}}
              >
                <VisuallyHiddenText
                  data-terra-abstract-modal-begin={true}
                  tabIndex="-1"
                  text="Terra.AbstractModal.BeginModalDialog"
                >
                  <span
                    className="visually-hidden-text"
                    data-terra-abstract-modal-begin={true}
                    tabIndex="-1"
                  >
                    Terra.AbstractModal.BeginModalDialog
                  </span>
                </VisuallyHiddenText>
              </FormattedMessage>
              <div>
                <h1>
                  Terra Modal
                </h1>
                <button
                  onClick={[Function]}
                  type="button"
                >
                  Close Modal
                </button>
              </div>
              <FormattedMessage
                id="Terra.AbstractModal.EndModalDialog"
                values={Object {}}
              >
                <VisuallyHiddenText
                  text="Terra.AbstractModal.EndModalDialog"
                >
                  <span
                    className="visually-hidden-text"
                  >
                    Terra.AbstractModal.EndModalDialog
                  </span>
                </VisuallyHiddenText>
              </FormattedMessage>
            </div>
          </ForwardRef>
        </Portal>
      </Portal>
    </AbstractModal>
    <button
      onClick={[Function]}
      type="button"
    >
      Open Modal
    </button>
  </div>
</ModalExample>
`;

exports[`should mount an open modal set to fullscreen 1`] = `
<ModalExample
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": null,
      "now": [Function],
      "onError": [Function],
      "textComponent": "span",
      "timeZone": null,
    }
  }
  isFullscreen={true}
>
  <div>
    <AbstractModal
      ariaLabel="Terra Modal"
      classNameModal={null}
      classNameOverlay={null}
      closeOnEsc={true}
      closeOnOutsideClick={true}
      intl={
        Object {
          "defaultFormats": Object {},
          "defaultLocale": "en",
          "formatDate": [Function],
          "formatHTMLMessage": [Function],
          "formatMessage": [Function],
          "formatNumber": [Function],
          "formatPlural": [Function],
          "formatRelative": [Function],
          "formatTime": [Function],
          "formats": Object {},
          "formatters": Object {
            "getDateTimeFormat": [Function],
            "getMessageFormat": [Function],
            "getNumberFormat": [Function],
            "getPluralFormat": [Function],
            "getRelativeFormat": [Function],
          },
          "locale": "en",
          "messages": null,
          "now": [Function],
          "onError": [Function],
          "textComponent": "span",
          "timeZone": null,
        }
      }
      isFullscreen={true}
      isOpen={true}
      onRequestClose={[Function]}
      role="dialog"
      rootSelector="#root"
      zIndex="6000"
    >
      <Portal
        isOpened={true}
      >
        <Portal
          containerInfo={
            <div>
              <div
                class="overlay layer-6000"
              />
              <div
                aria-label="Terra Modal"
                aria-modal="true"
                class="abstract-modal is-fullscreen layer-6000"
                intl="[object Object]"
                role="dialog"
                tabindex="0"
              >
                <span
                  class="visually-hidden-text"
                  data-terra-abstract-modal-begin="true"
                  tabindex="-1"
                >
                  Terra.AbstractModal.BeginModalDialog
                </span>
                <div>
                  <h1>
                    Terra Modal
                  </h1>
                  <button
                    type="button"
                  >
                    Close Modal
                  </button>
                </div>
                <span
                  class="visually-hidden-text"
                >
                  Terra.AbstractModal.EndModalDialog
                </span>
              </div>
            </div>
          }
        >
          <ForwardRef
            aria-modal="true"
            ariaLabel="Terra Modal"
            classNameModal={null}
            classNameOverlay={null}
            closeOnOutsideClick={true}
            intl={
              Object {
                "defaultFormats": Object {},
                "defaultLocale": "en",
                "formatDate": [Function],
                "formatHTMLMessage": [Function],
                "formatMessage": [Function],
                "formatNumber": [Function],
                "formatPlural": [Function],
                "formatRelative": [Function],
                "formatTime": [Function],
                "formats": Object {},
                "formatters": Object {
                  "getDateTimeFormat": [Function],
                  "getMessageFormat": [Function],
                  "getNumberFormat": [Function],
                  "getPluralFormat": [Function],
                  "getRelativeFormat": [Function],
                },
                "locale": "en",
                "messages": null,
                "now": [Function],
                "onError": [Function],
                "textComponent": "span",
                "timeZone": null,
              }
            }
            isFullscreen={true}
            isScrollable={false}
            onRequestClose={[Function]}
            role="dialog"
            rootSelector="#root"
            zIndex="6000"
          >
            <ModalOverlay
              className={null}
              onClick={[Function]}
              zIndex="6000"
            >
              <div
                className="overlay layer-6000"
                onClick={[Function]}
              />
            </ModalOverlay>
            <div
              aria-label="Terra Modal"
              aria-modal="true"
              className="abstract-modal is-fullscreen layer-6000"
              intl={
                Object {
                  "defaultFormats": Object {},
                  "defaultLocale": "en",
                  "formatDate": [Function],
                  "formatHTMLMessage": [Function],
                  "formatMessage": [Function],
                  "formatNumber": [Function],
                  "formatPlural": [Function],
                  "formatRelative": [Function],
                  "formatTime": [Function],
                  "formats": Object {},
                  "formatters": Object {
                    "getDateTimeFormat": [Function],
                    "getMessageFormat": [Function],
                    "getNumberFormat": [Function],
                    "getPluralFormat": [Function],
                    "getRelativeFormat": [Function],
                  },
                  "locale": "en",
                  "messages": null,
                  "now": [Function],
                  "onError": [Function],
                  "textComponent": "span",
                  "timeZone": null,
                }
              }
              role="dialog"
              tabIndex="0"
            >
              <FormattedMessage
                id="Terra.AbstractModal.BeginModalDialog"
                values={Object {}}
              >
                <VisuallyHiddenText
                  data-terra-abstract-modal-begin={true}
                  tabIndex="-1"
                  text="Terra.AbstractModal.BeginModalDialog"
                >
                  <span
                    className="visually-hidden-text"
                    data-terra-abstract-modal-begin={true}
                    tabIndex="-1"
                  >
                    Terra.AbstractModal.BeginModalDialog
                  </span>
                </VisuallyHiddenText>
              </FormattedMessage>
              <div>
                <h1>
                  Terra Modal
                </h1>
                <button
                  onClick={[Function]}
                  type="button"
                >
                  Close Modal
                </button>
              </div>
              <FormattedMessage
                id="Terra.AbstractModal.EndModalDialog"
                values={Object {}}
              >
                <VisuallyHiddenText
                  text="Terra.AbstractModal.EndModalDialog"
                >
                  <span
                    className="visually-hidden-text"
                  >
                    Terra.AbstractModal.EndModalDialog
                  </span>
                </VisuallyHiddenText>
              </FormattedMessage>
            </div>
          </ForwardRef>
        </Portal>
      </Portal>
    </AbstractModal>
    <button
      onClick={[Function]}
      type="button"
    >
      Open Modal
    </button>
  </div>
</ModalExample>
`;

exports[`should mount an open modal with custom props 1`] = `
<ModalExample
  id="custom-props"
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": null,
      "now": [Function],
      "onError": [Function],
      "textComponent": "span",
      "timeZone": null,
    }
  }
>
  <div>
    <AbstractModal
      ariaLabel="Terra Modal"
      classNameModal={null}
      classNameOverlay={null}
      closeOnEsc={true}
      closeOnOutsideClick={true}
      id="custom-props"
      intl={
        Object {
          "defaultFormats": Object {},
          "defaultLocale": "en",
          "formatDate": [Function],
          "formatHTMLMessage": [Function],
          "formatMessage": [Function],
          "formatNumber": [Function],
          "formatPlural": [Function],
          "formatRelative": [Function],
          "formatTime": [Function],
          "formats": Object {},
          "formatters": Object {
            "getDateTimeFormat": [Function],
            "getMessageFormat": [Function],
            "getNumberFormat": [Function],
            "getPluralFormat": [Function],
            "getRelativeFormat": [Function],
          },
          "locale": "en",
          "messages": null,
          "now": [Function],
          "onError": [Function],
          "textComponent": "span",
          "timeZone": null,
        }
      }
      isFullscreen={false}
      isOpen={true}
      onRequestClose={[Function]}
      role="dialog"
      rootSelector="#root"
      zIndex="6000"
    >
      <Portal
        isOpened={true}
      >
        <Portal
          containerInfo={
            <div>
              <div
                class="overlay layer-6000"
              />
              <div
                aria-label="Terra Modal"
                aria-modal="true"
                class="abstract-modal layer-6000"
                id="custom-props"
                intl="[object Object]"
                role="dialog"
                tabindex="0"
              >
                <span
                  class="visually-hidden-text"
                  data-terra-abstract-modal-begin="true"
                  tabindex="-1"
                >
                  Terra.AbstractModal.BeginModalDialog
                </span>
                <div>
                  <h1>
                    Terra Modal
                  </h1>
                  <button
                    type="button"
                  >
                    Close Modal
                  </button>
                </div>
                <span
                  class="visually-hidden-text"
                >
                  Terra.AbstractModal.EndModalDialog
                </span>
              </div>
            </div>
          }
        >
          <ForwardRef
            aria-modal="true"
            ariaLabel="Terra Modal"
            classNameModal={null}
            classNameOverlay={null}
            closeOnOutsideClick={true}
            id="custom-props"
            intl={
              Object {
                "defaultFormats": Object {},
                "defaultLocale": "en",
                "formatDate": [Function],
                "formatHTMLMessage": [Function],
                "formatMessage": [Function],
                "formatNumber": [Function],
                "formatPlural": [Function],
                "formatRelative": [Function],
                "formatTime": [Function],
                "formats": Object {},
                "formatters": Object {
                  "getDateTimeFormat": [Function],
                  "getMessageFormat": [Function],
                  "getNumberFormat": [Function],
                  "getPluralFormat": [Function],
                  "getRelativeFormat": [Function],
                },
                "locale": "en",
                "messages": null,
                "now": [Function],
                "onError": [Function],
                "textComponent": "span",
                "timeZone": null,
              }
            }
            isFullscreen={false}
            isScrollable={false}
            onRequestClose={[Function]}
            role="dialog"
            rootSelector="#root"
            zIndex="6000"
          >
            <ModalOverlay
              className={null}
              onClick={[Function]}
              zIndex="6000"
            >
              <div
                className="overlay layer-6000"
                onClick={[Function]}
              />
            </ModalOverlay>
            <div
              aria-label="Terra Modal"
              aria-modal="true"
              className="abstract-modal layer-6000"
              id="custom-props"
              intl={
                Object {
                  "defaultFormats": Object {},
                  "defaultLocale": "en",
                  "formatDate": [Function],
                  "formatHTMLMessage": [Function],
                  "formatMessage": [Function],
                  "formatNumber": [Function],
                  "formatPlural": [Function],
                  "formatRelative": [Function],
                  "formatTime": [Function],
                  "formats": Object {},
                  "formatters": Object {
                    "getDateTimeFormat": [Function],
                    "getMessageFormat": [Function],
                    "getNumberFormat": [Function],
                    "getPluralFormat": [Function],
                    "getRelativeFormat": [Function],
                  },
                  "locale": "en",
                  "messages": null,
                  "now": [Function],
                  "onError": [Function],
                  "textComponent": "span",
                  "timeZone": null,
                }
              }
              role="dialog"
              tabIndex="0"
            >
              <FormattedMessage
                id="Terra.AbstractModal.BeginModalDialog"
                values={Object {}}
              >
                <VisuallyHiddenText
                  data-terra-abstract-modal-begin={true}
                  tabIndex="-1"
                  text="Terra.AbstractModal.BeginModalDialog"
                >
                  <span
                    className="visually-hidden-text"
                    data-terra-abstract-modal-begin={true}
                    tabIndex="-1"
                  >
                    Terra.AbstractModal.BeginModalDialog
                  </span>
                </VisuallyHiddenText>
              </FormattedMessage>
              <div>
                <h1>
                  Terra Modal
                </h1>
                <button
                  onClick={[Function]}
                  type="button"
                >
                  Close Modal
                </button>
              </div>
              <FormattedMessage
                id="Terra.AbstractModal.EndModalDialog"
                values={Object {}}
              >
                <VisuallyHiddenText
                  text="Terra.AbstractModal.EndModalDialog"
                >
                  <span
                    className="visually-hidden-text"
                  >
                    Terra.AbstractModal.EndModalDialog
                  </span>
                </VisuallyHiddenText>
              </FormattedMessage>
            </div>
          </ForwardRef>
        </Portal>
      </Portal>
    </AbstractModal>
    <button
      onClick={[Function]}
      type="button"
    >
      Open Modal
    </button>
  </div>
</ModalExample>
`;

exports[`should mount an open modal with modal class name 1`] = `
<ModalExample
  classNameModal="modal-custom-class"
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": null,
      "now": [Function],
      "onError": [Function],
      "textComponent": "span",
      "timeZone": null,
    }
  }
>
  <div>
    <AbstractModal
      ariaLabel="Terra Modal"
      classNameModal="modal-custom-class"
      classNameOverlay={null}
      closeOnEsc={true}
      closeOnOutsideClick={true}
      intl={
        Object {
          "defaultFormats": Object {},
          "defaultLocale": "en",
          "formatDate": [Function],
          "formatHTMLMessage": [Function],
          "formatMessage": [Function],
          "formatNumber": [Function],
          "formatPlural": [Function],
          "formatRelative": [Function],
          "formatTime": [Function],
          "formats": Object {},
          "formatters": Object {
            "getDateTimeFormat": [Function],
            "getMessageFormat": [Function],
            "getNumberFormat": [Function],
            "getPluralFormat": [Function],
            "getRelativeFormat": [Function],
          },
          "locale": "en",
          "messages": null,
          "now": [Function],
          "onError": [Function],
          "textComponent": "span",
          "timeZone": null,
        }
      }
      isFullscreen={false}
      isOpen={true}
      onRequestClose={[Function]}
      role="dialog"
      rootSelector="#root"
      zIndex="6000"
    >
      <Portal
        isOpened={true}
      >
        <Portal
          containerInfo={
            <div>
              <div
                class="overlay layer-6000"
              />
              <div
                aria-label="Terra Modal"
                aria-modal="true"
                class="abstract-modal layer-6000 modal-custom-class"
                intl="[object Object]"
                role="dialog"
                tabindex="0"
              >
                <span
                  class="visually-hidden-text"
                  data-terra-abstract-modal-begin="true"
                  tabindex="-1"
                >
                  Terra.AbstractModal.BeginModalDialog
                </span>
                <div>
                  <h1>
                    Terra Modal
                  </h1>
                  <button
                    type="button"
                  >
                    Close Modal
                  </button>
                </div>
                <span
                  class="visually-hidden-text"
                >
                  Terra.AbstractModal.EndModalDialog
                </span>
              </div>
            </div>
          }
        >
          <ForwardRef
            aria-modal="true"
            ariaLabel="Terra Modal"
            classNameModal="modal-custom-class"
            classNameOverlay={null}
            closeOnOutsideClick={true}
            intl={
              Object {
                "defaultFormats": Object {},
                "defaultLocale": "en",
                "formatDate": [Function],
                "formatHTMLMessage": [Function],
                "formatMessage": [Function],
                "formatNumber": [Function],
                "formatPlural": [Function],
                "formatRelative": [Function],
                "formatTime": [Function],
                "formats": Object {},
                "formatters": Object {
                  "getDateTimeFormat": [Function],
                  "getMessageFormat": [Function],
                  "getNumberFormat": [Function],
                  "getPluralFormat": [Function],
                  "getRelativeFormat": [Function],
                },
                "locale": "en",
                "messages": null,
                "now": [Function],
                "onError": [Function],
                "textComponent": "span",
                "timeZone": null,
              }
            }
            isFullscreen={false}
            isScrollable={false}
            onRequestClose={[Function]}
            role="dialog"
            rootSelector="#root"
            zIndex="6000"
          >
            <ModalOverlay
              className={null}
              onClick={[Function]}
              zIndex="6000"
            >
              <div
                className="overlay layer-6000"
                onClick={[Function]}
              />
            </ModalOverlay>
            <div
              aria-label="Terra Modal"
              aria-modal="true"
              className="abstract-modal layer-6000 modal-custom-class"
              intl={
                Object {
                  "defaultFormats": Object {},
                  "defaultLocale": "en",
                  "formatDate": [Function],
                  "formatHTMLMessage": [Function],
                  "formatMessage": [Function],
                  "formatNumber": [Function],
                  "formatPlural": [Function],
                  "formatRelative": [Function],
                  "formatTime": [Function],
                  "formats": Object {},
                  "formatters": Object {
                    "getDateTimeFormat": [Function],
                    "getMessageFormat": [Function],
                    "getNumberFormat": [Function],
                    "getPluralFormat": [Function],
                    "getRelativeFormat": [Function],
                  },
                  "locale": "en",
                  "messages": null,
                  "now": [Function],
                  "onError": [Function],
                  "textComponent": "span",
                  "timeZone": null,
                }
              }
              role="dialog"
              tabIndex="0"
            >
              <FormattedMessage
                id="Terra.AbstractModal.BeginModalDialog"
                values={Object {}}
              >
                <VisuallyHiddenText
                  data-terra-abstract-modal-begin={true}
                  tabIndex="-1"
                  text="Terra.AbstractModal.BeginModalDialog"
                >
                  <span
                    className="visually-hidden-text"
                    data-terra-abstract-modal-begin={true}
                    tabIndex="-1"
                  >
                    Terra.AbstractModal.BeginModalDialog
                  </span>
                </VisuallyHiddenText>
              </FormattedMessage>
              <div>
                <h1>
                  Terra Modal
                </h1>
                <button
                  onClick={[Function]}
                  type="button"
                >
                  Close Modal
                </button>
              </div>
              <FormattedMessage
                id="Terra.AbstractModal.EndModalDialog"
                values={Object {}}
              >
                <VisuallyHiddenText
                  text="Terra.AbstractModal.EndModalDialog"
                >
                  <span
                    className="visually-hidden-text"
                  >
                    Terra.AbstractModal.EndModalDialog
                  </span>
                </VisuallyHiddenText>
              </FormattedMessage>
            </div>
          </ForwardRef>
        </Portal>
      </Portal>
    </AbstractModal>
    <button
      onClick={[Function]}
      type="button"
    >
      Open Modal
    </button>
  </div>
</ModalExample>
`;

exports[`should mount an open modal with overlay class name 1`] = `
<ModalExample
  classNameOverlay="overlay-custom-class"
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": null,
      "now": [Function],
      "onError": [Function],
      "textComponent": "span",
      "timeZone": null,
    }
  }
>
  <div>
    <AbstractModal
      ariaLabel="Terra Modal"
      classNameModal={null}
      classNameOverlay="overlay-custom-class"
      closeOnEsc={true}
      closeOnOutsideClick={true}
      intl={
        Object {
          "defaultFormats": Object {},
          "defaultLocale": "en",
          "formatDate": [Function],
          "formatHTMLMessage": [Function],
          "formatMessage": [Function],
          "formatNumber": [Function],
          "formatPlural": [Function],
          "formatRelative": [Function],
          "formatTime": [Function],
          "formats": Object {},
          "formatters": Object {
            "getDateTimeFormat": [Function],
            "getMessageFormat": [Function],
            "getNumberFormat": [Function],
            "getPluralFormat": [Function],
            "getRelativeFormat": [Function],
          },
          "locale": "en",
          "messages": null,
          "now": [Function],
          "onError": [Function],
          "textComponent": "span",
          "timeZone": null,
        }
      }
      isFullscreen={false}
      isOpen={true}
      onRequestClose={[Function]}
      role="dialog"
      rootSelector="#root"
      zIndex="6000"
    >
      <Portal
        isOpened={true}
      >
        <Portal
          containerInfo={
            <div>
              <div
                class="overlay layer-6000 overlay-custom-class"
              />
              <div
                aria-label="Terra Modal"
                aria-modal="true"
                class="abstract-modal layer-6000"
                intl="[object Object]"
                role="dialog"
                tabindex="0"
              >
                <span
                  class="visually-hidden-text"
                  data-terra-abstract-modal-begin="true"
                  tabindex="-1"
                >
                  Terra.AbstractModal.BeginModalDialog
                </span>
                <div>
                  <h1>
                    Terra Modal
                  </h1>
                  <button
                    type="button"
                  >
                    Close Modal
                  </button>
                </div>
                <span
                  class="visually-hidden-text"
                >
                  Terra.AbstractModal.EndModalDialog
                </span>
              </div>
            </div>
          }
        >
          <ForwardRef
            aria-modal="true"
            ariaLabel="Terra Modal"
            classNameModal={null}
            classNameOverlay="overlay-custom-class"
            closeOnOutsideClick={true}
            intl={
              Object {
                "defaultFormats": Object {},
                "defaultLocale": "en",
                "formatDate": [Function],
                "formatHTMLMessage": [Function],
                "formatMessage": [Function],
                "formatNumber": [Function],
                "formatPlural": [Function],
                "formatRelative": [Function],
                "formatTime": [Function],
                "formats": Object {},
                "formatters": Object {
                  "getDateTimeFormat": [Function],
                  "getMessageFormat": [Function],
                  "getNumberFormat": [Function],
                  "getPluralFormat": [Function],
                  "getRelativeFormat": [Function],
                },
                "locale": "en",
                "messages": null,
                "now": [Function],
                "onError": [Function],
                "textComponent": "span",
                "timeZone": null,
              }
            }
            isFullscreen={false}
            isScrollable={false}
            onRequestClose={[Function]}
            role="dialog"
            rootSelector="#root"
            zIndex="6000"
          >
            <ModalOverlay
              className="overlay-custom-class"
              onClick={[Function]}
              zIndex="6000"
            >
              <div
                className="overlay layer-6000 overlay-custom-class"
                onClick={[Function]}
              />
            </ModalOverlay>
            <div
              aria-label="Terra Modal"
              aria-modal="true"
              className="abstract-modal layer-6000"
              intl={
                Object {
                  "defaultFormats": Object {},
                  "defaultLocale": "en",
                  "formatDate": [Function],
                  "formatHTMLMessage": [Function],
                  "formatMessage": [Function],
                  "formatNumber": [Function],
                  "formatPlural": [Function],
                  "formatRelative": [Function],
                  "formatTime": [Function],
                  "formats": Object {},
                  "formatters": Object {
                    "getDateTimeFormat": [Function],
                    "getMessageFormat": [Function],
                    "getNumberFormat": [Function],
                    "getPluralFormat": [Function],
                    "getRelativeFormat": [Function],
                  },
                  "locale": "en",
                  "messages": null,
                  "now": [Function],
                  "onError": [Function],
                  "textComponent": "span",
                  "timeZone": null,
                }
              }
              role="dialog"
              tabIndex="0"
            >
              <FormattedMessage
                id="Terra.AbstractModal.BeginModalDialog"
                values={Object {}}
              >
                <VisuallyHiddenText
                  data-terra-abstract-modal-begin={true}
                  tabIndex="-1"
                  text="Terra.AbstractModal.BeginModalDialog"
                >
                  <span
                    className="visually-hidden-text"
                    data-terra-abstract-modal-begin={true}
                    tabIndex="-1"
                  >
                    Terra.AbstractModal.BeginModalDialog
                  </span>
                </VisuallyHiddenText>
              </FormattedMessage>
              <div>
                <h1>
                  Terra Modal
                </h1>
                <button
                  onClick={[Function]}
                  type="button"
                >
                  Close Modal
                </button>
              </div>
              <FormattedMessage
                id="Terra.AbstractModal.EndModalDialog"
                values={Object {}}
              >
                <VisuallyHiddenText
                  text="Terra.AbstractModal.EndModalDialog"
                >
                  <span
                    className="visually-hidden-text"
                  >
                    Terra.AbstractModal.EndModalDialog
                  </span>
                </VisuallyHiddenText>
              </FormattedMessage>
            </div>
          </ForwardRef>
        </Portal>
      </Portal>
    </AbstractModal>
    <button
      onClick={[Function]}
      type="button"
    >
      Open Modal
    </button>
  </div>
</ModalExample>
`;

exports[`should mount an open modal with role 1`] = `
<ModalExample
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": null,
      "now": [Function],
      "onError": [Function],
      "textComponent": "span",
      "timeZone": null,
    }
  }
  role="alertdialog"
>
  <div>
    <AbstractModal
      ariaLabel="Terra Modal"
      classNameModal={null}
      classNameOverlay={null}
      closeOnEsc={true}
      closeOnOutsideClick={true}
      intl={
        Object {
          "defaultFormats": Object {},
          "defaultLocale": "en",
          "formatDate": [Function],
          "formatHTMLMessage": [Function],
          "formatMessage": [Function],
          "formatNumber": [Function],
          "formatPlural": [Function],
          "formatRelative": [Function],
          "formatTime": [Function],
          "formats": Object {},
          "formatters": Object {
            "getDateTimeFormat": [Function],
            "getMessageFormat": [Function],
            "getNumberFormat": [Function],
            "getPluralFormat": [Function],
            "getRelativeFormat": [Function],
          },
          "locale": "en",
          "messages": null,
          "now": [Function],
          "onError": [Function],
          "textComponent": "span",
          "timeZone": null,
        }
      }
      isFullscreen={false}
      isOpen={true}
      onRequestClose={[Function]}
      role="alertdialog"
      rootSelector="#root"
      zIndex="6000"
    >
      <Portal
        isOpened={true}
      >
        <Portal
          containerInfo={
            <div>
              <div
                class="overlay layer-6000"
              />
              <div
                aria-label="Terra Modal"
                aria-modal="true"
                class="abstract-modal layer-6000"
                intl="[object Object]"
                role="alertdialog"
                tabindex="0"
              >
                <span
                  class="visually-hidden-text"
                  data-terra-abstract-modal-begin="true"
                  tabindex="-1"
                >
                  Terra.AbstractModal.BeginModalDialog
                </span>
                <div>
                  <h1>
                    Terra Modal
                  </h1>
                  <button
                    type="button"
                  >
                    Close Modal
                  </button>
                </div>
                <span
                  class="visually-hidden-text"
                >
                  Terra.AbstractModal.EndModalDialog
                </span>
              </div>
            </div>
          }
        >
          <ForwardRef
            aria-modal="true"
            ariaLabel="Terra Modal"
            classNameModal={null}
            classNameOverlay={null}
            closeOnOutsideClick={true}
            intl={
              Object {
                "defaultFormats": Object {},
                "defaultLocale": "en",
                "formatDate": [Function],
                "formatHTMLMessage": [Function],
                "formatMessage": [Function],
                "formatNumber": [Function],
                "formatPlural": [Function],
                "formatRelative": [Function],
                "formatTime": [Function],
                "formats": Object {},
                "formatters": Object {
                  "getDateTimeFormat": [Function],
                  "getMessageFormat": [Function],
                  "getNumberFormat": [Function],
                  "getPluralFormat": [Function],
                  "getRelativeFormat": [Function],
                },
                "locale": "en",
                "messages": null,
                "now": [Function],
                "onError": [Function],
                "textComponent": "span",
                "timeZone": null,
              }
            }
            isFullscreen={false}
            isScrollable={false}
            onRequestClose={[Function]}
            role="alertdialog"
            rootSelector="#root"
            zIndex="6000"
          >
            <ModalOverlay
              className={null}
              onClick={[Function]}
              zIndex="6000"
            >
              <div
                className="overlay layer-6000"
                onClick={[Function]}
              />
            </ModalOverlay>
            <div
              aria-label="Terra Modal"
              aria-modal="true"
              className="abstract-modal layer-6000"
              intl={
                Object {
                  "defaultFormats": Object {},
                  "defaultLocale": "en",
                  "formatDate": [Function],
                  "formatHTMLMessage": [Function],
                  "formatMessage": [Function],
                  "formatNumber": [Function],
                  "formatPlural": [Function],
                  "formatRelative": [Function],
                  "formatTime": [Function],
                  "formats": Object {},
                  "formatters": Object {
                    "getDateTimeFormat": [Function],
                    "getMessageFormat": [Function],
                    "getNumberFormat": [Function],
                    "getPluralFormat": [Function],
                    "getRelativeFormat": [Function],
                  },
                  "locale": "en",
                  "messages": null,
                  "now": [Function],
                  "onError": [Function],
                  "textComponent": "span",
                  "timeZone": null,
                }
              }
              role="alertdialog"
              tabIndex="0"
            >
              <FormattedMessage
                id="Terra.AbstractModal.BeginModalDialog"
                values={Object {}}
              >
                <VisuallyHiddenText
                  data-terra-abstract-modal-begin={true}
                  tabIndex="-1"
                  text="Terra.AbstractModal.BeginModalDialog"
                >
                  <span
                    className="visually-hidden-text"
                    data-terra-abstract-modal-begin={true}
                    tabIndex="-1"
                  >
                    Terra.AbstractModal.BeginModalDialog
                  </span>
                </VisuallyHiddenText>
              </FormattedMessage>
              <div>
                <h1>
                  Terra Modal
                </h1>
                <button
                  onClick={[Function]}
                  type="button"
                >
                  Close Modal
                </button>
              </div>
              <FormattedMessage
                id="Terra.AbstractModal.EndModalDialog"
                values={Object {}}
              >
                <VisuallyHiddenText
                  text="Terra.AbstractModal.EndModalDialog"
                >
                  <span
                    className="visually-hidden-text"
                  >
                    Terra.AbstractModal.EndModalDialog
                  </span>
                </VisuallyHiddenText>
              </FormattedMessage>
            </div>
          </ForwardRef>
        </Portal>
      </Portal>
    </AbstractModal>
    <button
      onClick={[Function]}
      type="button"
    >
      Open Modal
    </button>
  </div>
</ModalExample>
`;

exports[`should render the correct snapshot for iPads 1`] = `
<ModalExample
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": null,
      "now": [Function],
      "onError": [Function],
      "textComponent": "span",
      "timeZone": null,
    }
  }
>
  <div>
    <AbstractModal
      ariaLabel="Terra Modal"
      classNameModal={null}
      classNameOverlay={null}
      closeOnEsc={true}
      closeOnOutsideClick={true}
      intl={
        Object {
          "defaultFormats": Object {},
          "defaultLocale": "en",
          "formatDate": [Function],
          "formatHTMLMessage": [Function],
          "formatMessage": [Function],
          "formatNumber": [Function],
          "formatPlural": [Function],
          "formatRelative": [Function],
          "formatTime": [Function],
          "formats": Object {},
          "formatters": Object {
            "getDateTimeFormat": [Function],
            "getMessageFormat": [Function],
            "getNumberFormat": [Function],
            "getPluralFormat": [Function],
            "getRelativeFormat": [Function],
          },
          "locale": "en",
          "messages": null,
          "now": [Function],
          "onError": [Function],
          "textComponent": "span",
          "timeZone": null,
        }
      }
      isFullscreen={false}
      isOpen={true}
      onRequestClose={[Function]}
      role="dialog"
      rootSelector="#root"
      zIndex="6000"
    >
      <Portal
        isOpened={true}
      >
        <Portal
          containerInfo={
            <div>
              <div
                class="overlay layer-6000"
              />
              <div
                aria-label="Terra Modal"
                aria-modal="true"
                class="abstract-modal layer-6000"
                intl="[object Object]"
                role="dialog"
                tabindex="-1"
              >
                <span
                  class="visually-hidden-text"
                  data-terra-abstract-modal-begin="true"
                  tabindex="-1"
                >
                  Terra.AbstractModal.BeginModalDialog
                </span>
                <div>
                  <h1>
                    Terra Modal
                  </h1>
                  <button
                    type="button"
                  >
                    Close Modal
                  </button>
                </div>
                <span
                  class="visually-hidden-text"
                >
                  Terra.AbstractModal.EndModalDialog
                </span>
              </div>
            </div>
          }
        >
          <ForwardRef
            aria-modal="true"
            ariaLabel="Terra Modal"
            classNameModal={null}
            classNameOverlay={null}
            closeOnOutsideClick={true}
            intl={
              Object {
                "defaultFormats": Object {},
                "defaultLocale": "en",
                "formatDate": [Function],
                "formatHTMLMessage": [Function],
                "formatMessage": [Function],
                "formatNumber": [Function],
                "formatPlural": [Function],
                "formatRelative": [Function],
                "formatTime": [Function],
                "formats": Object {},
                "formatters": Object {
                  "getDateTimeFormat": [Function],
                  "getMessageFormat": [Function],
                  "getNumberFormat": [Function],
                  "getPluralFormat": [Function],
                  "getRelativeFormat": [Function],
                },
                "locale": "en",
                "messages": null,
                "now": [Function],
                "onError": [Function],
                "textComponent": "span",
                "timeZone": null,
              }
            }
            isFullscreen={false}
            isScrollable={false}
            onRequestClose={[Function]}
            role="dialog"
            rootSelector="#root"
            zIndex="6000"
          >
            <ModalOverlay
              className={null}
              onClick={[Function]}
              zIndex="6000"
            >
              <div
                className="overlay layer-6000"
                onClick={[Function]}
              />
            </ModalOverlay>
            <div
              aria-label="Terra Modal"
              aria-modal="true"
              className="abstract-modal layer-6000"
              intl={
                Object {
                  "defaultFormats": Object {},
                  "defaultLocale": "en",
                  "formatDate": [Function],
                  "formatHTMLMessage": [Function],
                  "formatMessage": [Function],
                  "formatNumber": [Function],
                  "formatPlural": [Function],
                  "formatRelative": [Function],
                  "formatTime": [Function],
                  "formats": Object {},
                  "formatters": Object {
                    "getDateTimeFormat": [Function],
                    "getMessageFormat": [Function],
                    "getNumberFormat": [Function],
                    "getPluralFormat": [Function],
                    "getRelativeFormat": [Function],
                  },
                  "locale": "en",
                  "messages": null,
                  "now": [Function],
                  "onError": [Function],
                  "textComponent": "span",
                  "timeZone": null,
                }
              }
              role="dialog"
              tabIndex="-1"
            >
              <FormattedMessage
                id="Terra.AbstractModal.BeginModalDialog"
                values={Object {}}
              >
                <VisuallyHiddenText
                  data-terra-abstract-modal-begin={true}
                  tabIndex="-1"
                  text="Terra.AbstractModal.BeginModalDialog"
                >
                  <span
                    className="visually-hidden-text"
                    data-terra-abstract-modal-begin={true}
                    tabIndex="-1"
                  >
                    Terra.AbstractModal.BeginModalDialog
                  </span>
                </VisuallyHiddenText>
              </FormattedMessage>
              <div>
                <h1>
                  Terra Modal
                </h1>
                <button
                  onClick={[Function]}
                  type="button"
                >
                  Close Modal
                </button>
              </div>
              <FormattedMessage
                id="Terra.AbstractModal.EndModalDialog"
                values={Object {}}
              >
                <VisuallyHiddenText
                  text="Terra.AbstractModal.EndModalDialog"
                >
                  <span
                    className="visually-hidden-text"
                  >
                    Terra.AbstractModal.EndModalDialog
                  </span>
                </VisuallyHiddenText>
              </FormattedMessage>
            </div>
          </ForwardRef>
        </Portal>
      </Portal>
    </AbstractModal>
    <button
      onClick={[Function]}
      type="button"
    >
      Open Modal
    </button>
  </div>
</ModalExample>
`;

exports[`should render the correct snapshot for iPhones 1`] = `
<ModalExample
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": null,
      "now": [Function],
      "onError": [Function],
      "textComponent": "span",
      "timeZone": null,
    }
  }
>
  <div>
    <AbstractModal
      ariaLabel="Terra Modal"
      classNameModal={null}
      classNameOverlay={null}
      closeOnEsc={true}
      closeOnOutsideClick={true}
      intl={
        Object {
          "defaultFormats": Object {},
          "defaultLocale": "en",
          "formatDate": [Function],
          "formatHTMLMessage": [Function],
          "formatMessage": [Function],
          "formatNumber": [Function],
          "formatPlural": [Function],
          "formatRelative": [Function],
          "formatTime": [Function],
          "formats": Object {},
          "formatters": Object {
            "getDateTimeFormat": [Function],
            "getMessageFormat": [Function],
            "getNumberFormat": [Function],
            "getPluralFormat": [Function],
            "getRelativeFormat": [Function],
          },
          "locale": "en",
          "messages": null,
          "now": [Function],
          "onError": [Function],
          "textComponent": "span",
          "timeZone": null,
        }
      }
      isFullscreen={false}
      isOpen={true}
      onRequestClose={[Function]}
      role="dialog"
      rootSelector="#root"
      zIndex="6000"
    >
      <Portal
        isOpened={true}
      >
        <Portal
          containerInfo={
            <div>
              <div
                class="overlay layer-6000"
              />
              <div
                aria-label="Terra Modal"
                aria-modal="true"
                class="abstract-modal layer-6000"
                intl="[object Object]"
                role="dialog"
                tabindex="-1"
              >
                <span
                  class="visually-hidden-text"
                  data-terra-abstract-modal-begin="true"
                  tabindex="-1"
                >
                  Terra.AbstractModal.BeginModalDialog
                </span>
                <div>
                  <h1>
                    Terra Modal
                  </h1>
                  <button
                    type="button"
                  >
                    Close Modal
                  </button>
                </div>
                <span
                  class="visually-hidden-text"
                >
                  Terra.AbstractModal.EndModalDialog
                </span>
              </div>
            </div>
          }
        >
          <ForwardRef
            aria-modal="true"
            ariaLabel="Terra Modal"
            classNameModal={null}
            classNameOverlay={null}
            closeOnOutsideClick={true}
            intl={
              Object {
                "defaultFormats": Object {},
                "defaultLocale": "en",
                "formatDate": [Function],
                "formatHTMLMessage": [Function],
                "formatMessage": [Function],
                "formatNumber": [Function],
                "formatPlural": [Function],
                "formatRelative": [Function],
                "formatTime": [Function],
                "formats": Object {},
                "formatters": Object {
                  "getDateTimeFormat": [Function],
                  "getMessageFormat": [Function],
                  "getNumberFormat": [Function],
                  "getPluralFormat": [Function],
                  "getRelativeFormat": [Function],
                },
                "locale": "en",
                "messages": null,
                "now": [Function],
                "onError": [Function],
                "textComponent": "span",
                "timeZone": null,
              }
            }
            isFullscreen={false}
            isScrollable={false}
            onRequestClose={[Function]}
            role="dialog"
            rootSelector="#root"
            zIndex="6000"
          >
            <ModalOverlay
              className={null}
              onClick={[Function]}
              zIndex="6000"
            >
              <div
                className="overlay layer-6000"
                onClick={[Function]}
              />
            </ModalOverlay>
            <div
              aria-label="Terra Modal"
              aria-modal="true"
              className="abstract-modal layer-6000"
              intl={
                Object {
                  "defaultFormats": Object {},
                  "defaultLocale": "en",
                  "formatDate": [Function],
                  "formatHTMLMessage": [Function],
                  "formatMessage": [Function],
                  "formatNumber": [Function],
                  "formatPlural": [Function],
                  "formatRelative": [Function],
                  "formatTime": [Function],
                  "formats": Object {},
                  "formatters": Object {
                    "getDateTimeFormat": [Function],
                    "getMessageFormat": [Function],
                    "getNumberFormat": [Function],
                    "getPluralFormat": [Function],
                    "getRelativeFormat": [Function],
                  },
                  "locale": "en",
                  "messages": null,
                  "now": [Function],
                  "onError": [Function],
                  "textComponent": "span",
                  "timeZone": null,
                }
              }
              role="dialog"
              tabIndex="-1"
            >
              <FormattedMessage
                id="Terra.AbstractModal.BeginModalDialog"
                values={Object {}}
              >
                <VisuallyHiddenText
                  data-terra-abstract-modal-begin={true}
                  tabIndex="-1"
                  text="Terra.AbstractModal.BeginModalDialog"
                >
                  <span
                    className="visually-hidden-text"
                    data-terra-abstract-modal-begin={true}
                    tabIndex="-1"
                  >
                    Terra.AbstractModal.BeginModalDialog
                  </span>
                </VisuallyHiddenText>
              </FormattedMessage>
              <div>
                <h1>
                  Terra Modal
                </h1>
                <button
                  onClick={[Function]}
                  type="button"
                >
                  Close Modal
                </button>
              </div>
              <FormattedMessage
                id="Terra.AbstractModal.EndModalDialog"
                values={Object {}}
              >
                <VisuallyHiddenText
                  text="Terra.AbstractModal.EndModalDialog"
                >
                  <span
                    className="visually-hidden-text"
                  >
                    Terra.AbstractModal.EndModalDialog
                  </span>
                </VisuallyHiddenText>
              </FormattedMessage>
            </div>
          </ForwardRef>
        </Portal>
      </Portal>
    </AbstractModal>
    <button
      onClick={[Function]}
      type="button"
    >
      Open Modal
    </button>
  </div>
</ModalExample>
`;

exports[`should render the correct snapshot for iPods 1`] = `
<ModalExample
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": null,
      "now": [Function],
      "onError": [Function],
      "textComponent": "span",
      "timeZone": null,
    }
  }
>
  <div>
    <AbstractModal
      ariaLabel="Terra Modal"
      classNameModal={null}
      classNameOverlay={null}
      closeOnEsc={true}
      closeOnOutsideClick={true}
      intl={
        Object {
          "defaultFormats": Object {},
          "defaultLocale": "en",
          "formatDate": [Function],
          "formatHTMLMessage": [Function],
          "formatMessage": [Function],
          "formatNumber": [Function],
          "formatPlural": [Function],
          "formatRelative": [Function],
          "formatTime": [Function],
          "formats": Object {},
          "formatters": Object {
            "getDateTimeFormat": [Function],
            "getMessageFormat": [Function],
            "getNumberFormat": [Function],
            "getPluralFormat": [Function],
            "getRelativeFormat": [Function],
          },
          "locale": "en",
          "messages": null,
          "now": [Function],
          "onError": [Function],
          "textComponent": "span",
          "timeZone": null,
        }
      }
      isFullscreen={false}
      isOpen={true}
      onRequestClose={[Function]}
      role="dialog"
      rootSelector="#root"
      zIndex="6000"
    >
      <Portal
        isOpened={true}
      >
        <Portal
          containerInfo={
            <div>
              <div
                class="overlay layer-6000"
              />
              <div
                aria-label="Terra Modal"
                aria-modal="true"
                class="abstract-modal layer-6000"
                intl="[object Object]"
                role="dialog"
                tabindex="-1"
              >
                <span
                  class="visually-hidden-text"
                  data-terra-abstract-modal-begin="true"
                  tabindex="-1"
                >
                  Terra.AbstractModal.BeginModalDialog
                </span>
                <div>
                  <h1>
                    Terra Modal
                  </h1>
                  <button
                    type="button"
                  >
                    Close Modal
                  </button>
                </div>
                <span
                  class="visually-hidden-text"
                >
                  Terra.AbstractModal.EndModalDialog
                </span>
              </div>
            </div>
          }
        >
          <ForwardRef
            aria-modal="true"
            ariaLabel="Terra Modal"
            classNameModal={null}
            classNameOverlay={null}
            closeOnOutsideClick={true}
            intl={
              Object {
                "defaultFormats": Object {},
                "defaultLocale": "en",
                "formatDate": [Function],
                "formatHTMLMessage": [Function],
                "formatMessage": [Function],
                "formatNumber": [Function],
                "formatPlural": [Function],
                "formatRelative": [Function],
                "formatTime": [Function],
                "formats": Object {},
                "formatters": Object {
                  "getDateTimeFormat": [Function],
                  "getMessageFormat": [Function],
                  "getNumberFormat": [Function],
                  "getPluralFormat": [Function],
                  "getRelativeFormat": [Function],
                },
                "locale": "en",
                "messages": null,
                "now": [Function],
                "onError": [Function],
                "textComponent": "span",
                "timeZone": null,
              }
            }
            isFullscreen={false}
            isScrollable={false}
            onRequestClose={[Function]}
            role="dialog"
            rootSelector="#root"
            zIndex="6000"
          >
            <ModalOverlay
              className={null}
              onClick={[Function]}
              zIndex="6000"
            >
              <div
                className="overlay layer-6000"
                onClick={[Function]}
              />
            </ModalOverlay>
            <div
              aria-label="Terra Modal"
              aria-modal="true"
              className="abstract-modal layer-6000"
              intl={
                Object {
                  "defaultFormats": Object {},
                  "defaultLocale": "en",
                  "formatDate": [Function],
                  "formatHTMLMessage": [Function],
                  "formatMessage": [Function],
                  "formatNumber": [Function],
                  "formatPlural": [Function],
                  "formatRelative": [Function],
                  "formatTime": [Function],
                  "formats": Object {},
                  "formatters": Object {
                    "getDateTimeFormat": [Function],
                    "getMessageFormat": [Function],
                    "getNumberFormat": [Function],
                    "getPluralFormat": [Function],
                    "getRelativeFormat": [Function],
                  },
                  "locale": "en",
                  "messages": null,
                  "now": [Function],
                  "onError": [Function],
                  "textComponent": "span",
                  "timeZone": null,
                }
              }
              role="dialog"
              tabIndex="-1"
            >
              <FormattedMessage
                id="Terra.AbstractModal.BeginModalDialog"
                values={Object {}}
              >
                <VisuallyHiddenText
                  data-terra-abstract-modal-begin={true}
                  tabIndex="-1"
                  text="Terra.AbstractModal.BeginModalDialog"
                >
                  <span
                    className="visually-hidden-text"
                    data-terra-abstract-modal-begin={true}
                    tabIndex="-1"
                  >
                    Terra.AbstractModal.BeginModalDialog
                  </span>
                </VisuallyHiddenText>
              </FormattedMessage>
              <div>
                <h1>
                  Terra Modal
                </h1>
                <button
                  onClick={[Function]}
                  type="button"
                >
                  Close Modal
                </button>
              </div>
              <FormattedMessage
                id="Terra.AbstractModal.EndModalDialog"
                values={Object {}}
              >
                <VisuallyHiddenText
                  text="Terra.AbstractModal.EndModalDialog"
                >
                  <span
                    className="visually-hidden-text"
                  >
                    Terra.AbstractModal.EndModalDialog
                  </span>
                </VisuallyHiddenText>
              </FormattedMessage>
            </div>
          </ForwardRef>
        </Portal>
      </Portal>
    </AbstractModal>
    <button
      onClick={[Function]}
      type="button"
    >
      Open Modal
    </button>
  </div>
</ModalExample>
`;

exports[`should shallow an open modal 1`] = `
<div>
  <AbstractModal
    ariaLabel="Terra Modal"
    classNameModal={null}
    classNameOverlay={null}
    closeOnEsc={true}
    closeOnOutsideClick={true}
    intl={
      Object {
        "defaultFormats": Object {},
        "defaultLocale": "en",
        "formatDate": [Function],
        "formatHTMLMessage": [Function],
        "formatMessage": [Function],
        "formatNumber": [Function],
        "formatPlural": [Function],
        "formatRelative": [Function],
        "formatTime": [Function],
        "formats": Object {},
        "formatters": Object {
          "getDateTimeFormat": [Function],
          "getMessageFormat": [Function],
          "getNumberFormat": [Function],
          "getPluralFormat": [Function],
          "getRelativeFormat": [Function],
        },
        "locale": "en",
        "messages": null,
        "now": [Function],
        "onError": [Function],
        "textComponent": "span",
        "timeZone": null,
      }
    }
    isFullscreen={false}
    isOpen={true}
    onRequestClose={[Function]}
    role="dialog"
    rootSelector="#root"
    zIndex="6000"
  >
    <div>
      <h1>
        Terra Modal
      </h1>
      <button
        onClick={[Function]}
        type="button"
      >
        Close Modal
      </button>
    </div>
  </AbstractModal>
  <button
    onClick={[Function]}
    type="button"
  >
    Open Modal
  </button>
</div>
`;

exports[`should shallow an open modal 6000 z-index 1`] = `
<div>
  <AbstractModal
    ariaLabel="Terra Modal"
    classNameModal={null}
    classNameOverlay={null}
    closeOnEsc={true}
    closeOnOutsideClick={true}
    intl={
      Object {
        "defaultFormats": Object {},
        "defaultLocale": "en",
        "formatDate": [Function],
        "formatHTMLMessage": [Function],
        "formatMessage": [Function],
        "formatNumber": [Function],
        "formatPlural": [Function],
        "formatRelative": [Function],
        "formatTime": [Function],
        "formats": Object {},
        "formatters": Object {
          "getDateTimeFormat": [Function],
          "getMessageFormat": [Function],
          "getNumberFormat": [Function],
          "getPluralFormat": [Function],
          "getRelativeFormat": [Function],
        },
        "locale": "en",
        "messages": null,
        "now": [Function],
        "onError": [Function],
        "textComponent": "span",
        "timeZone": null,
      }
    }
    isFullscreen={false}
    isOpen={true}
    onRequestClose={[Function]}
    role="dialog"
    rootSelector="#root"
    zIndex="6000"
  >
    <div>
      <h1>
        Terra Modal
      </h1>
      <button
        onClick={[Function]}
        type="button"
      >
        Close Modal
      </button>
    </div>
  </AbstractModal>
  <button
    onClick={[Function]}
    type="button"
  >
    Open Modal
  </button>
</div>
`;

exports[`should shallow an open modal 7000 z-index 1`] = `
<div>
  <AbstractModal
    ariaLabel="Terra Modal"
    classNameModal={null}
    classNameOverlay={null}
    closeOnEsc={true}
    closeOnOutsideClick={true}
    intl={
      Object {
        "defaultFormats": Object {},
        "defaultLocale": "en",
        "formatDate": [Function],
        "formatHTMLMessage": [Function],
        "formatMessage": [Function],
        "formatNumber": [Function],
        "formatPlural": [Function],
        "formatRelative": [Function],
        "formatTime": [Function],
        "formats": Object {},
        "formatters": Object {
          "getDateTimeFormat": [Function],
          "getMessageFormat": [Function],
          "getNumberFormat": [Function],
          "getPluralFormat": [Function],
          "getRelativeFormat": [Function],
        },
        "locale": "en",
        "messages": null,
        "now": [Function],
        "onError": [Function],
        "textComponent": "span",
        "timeZone": null,
      }
    }
    isFullscreen={false}
    isOpen={true}
    onRequestClose={[Function]}
    role="dialog"
    rootSelector="#root"
    zIndex="7000"
  >
    <div>
      <h1>
        Terra Modal
      </h1>
      <button
        onClick={[Function]}
        type="button"
      >
        Close Modal
      </button>
    </div>
  </AbstractModal>
  <button
    onClick={[Function]}
    type="button"
  >
    Open Modal
  </button>
</div>
`;

exports[`should shallow an open modal 8000 z-index 1`] = `
<div>
  <AbstractModal
    ariaLabel="Terra Modal"
    classNameModal={null}
    classNameOverlay={null}
    closeOnEsc={true}
    closeOnOutsideClick={true}
    intl={
      Object {
        "defaultFormats": Object {},
        "defaultLocale": "en",
        "formatDate": [Function],
        "formatHTMLMessage": [Function],
        "formatMessage": [Function],
        "formatNumber": [Function],
        "formatPlural": [Function],
        "formatRelative": [Function],
        "formatTime": [Function],
        "formats": Object {},
        "formatters": Object {
          "getDateTimeFormat": [Function],
          "getMessageFormat": [Function],
          "getNumberFormat": [Function],
          "getPluralFormat": [Function],
          "getRelativeFormat": [Function],
        },
        "locale": "en",
        "messages": null,
        "now": [Function],
        "onError": [Function],
        "textComponent": "span",
        "timeZone": null,
      }
    }
    isFullscreen={false}
    isOpen={true}
    onRequestClose={[Function]}
    role="dialog"
    rootSelector="#root"
    zIndex="8000"
  >
    <div>
      <h1>
        Terra Modal
      </h1>
      <button
        onClick={[Function]}
        type="button"
      >
        Close Modal
      </button>
    </div>
  </AbstractModal>
  <button
    onClick={[Function]}
    type="button"
  >
    Open Modal
  </button>
</div>
`;

exports[`should shallow an open modal 9000 z-index 1`] = `
<div>
  <AbstractModal
    ariaLabel="Terra Modal"
    classNameModal={null}
    classNameOverlay={null}
    closeOnEsc={true}
    closeOnOutsideClick={true}
    intl={
      Object {
        "defaultFormats": Object {},
        "defaultLocale": "en",
        "formatDate": [Function],
        "formatHTMLMessage": [Function],
        "formatMessage": [Function],
        "formatNumber": [Function],
        "formatPlural": [Function],
        "formatRelative": [Function],
        "formatTime": [Function],
        "formats": Object {},
        "formatters": Object {
          "getDateTimeFormat": [Function],
          "getMessageFormat": [Function],
          "getNumberFormat": [Function],
          "getPluralFormat": [Function],
          "getRelativeFormat": [Function],
        },
        "locale": "en",
        "messages": null,
        "now": [Function],
        "onError": [Function],
        "textComponent": "span",
        "timeZone": null,
      }
    }
    isFullscreen={false}
    isOpen={true}
    onRequestClose={[Function]}
    role="dialog"
    rootSelector="#root"
    zIndex="9000"
  >
    <div>
      <h1>
        Terra Modal
      </h1>
      <button
        onClick={[Function]}
        type="button"
      >
        Close Modal
      </button>
    </div>
  </AbstractModal>
  <button
    onClick={[Function]}
    type="button"
  >
    Open Modal
  </button>
</div>
`;
