// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Layout correctly applies the theme context className 1`] = `
<ThemeContextProvider
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": null,
      "now": [Function],
      "onError": [Function],
      "textComponent": "span",
      "timeZone": null,
    }
  }
  theme={
    Object {
      "className": "orion-fusion-theme",
    }
  }
>
  <InjectIntl(NavigationSideMenu)
    menuItems={
      Array [
        Object {
          "childKeys": Array [
            "test1",
            "test2",
            "test3",
            "test4",
          ],
          "key": "menu",
          "text": "Test Menu",
        },
        Object {
          "key": "test1",
          "text": "Test Menu 1",
        },
        Object {
          "key": "test2",
          "text": "Test Menu 2",
        },
        Object {
          "key": "test3",
          "text": "Test Menu 3",
        },
        Object {
          "key": "test4",
          "text": "Test Menu 4",
        },
      ]
    }
    onChange={[Function]}
    routingStackBack={[Function]}
    selectedMenuKey="menu"
  >
    <NavigationSideMenu
      intl={
        Object {
          "defaultFormats": Object {},
          "defaultLocale": "en",
          "formatDate": [Function],
          "formatHTMLMessage": [Function],
          "formatMessage": [Function],
          "formatNumber": [Function],
          "formatPlural": [Function],
          "formatRelative": [Function],
          "formatTime": [Function],
          "formats": Object {},
          "formatters": Object {
            "getDateTimeFormat": [Function],
            "getMessageFormat": [Function],
            "getNumberFormat": [Function],
            "getPluralFormat": [Function],
            "getRelativeFormat": [Function],
          },
          "locale": "en",
          "messages": null,
          "now": [Function],
          "onError": [Function],
          "textComponent": "span",
          "timeZone": null,
        }
      }
      menuItems={
        Array [
          Object {
            "childKeys": Array [
              "test1",
              "test2",
              "test3",
              "test4",
            ],
            "key": "menu",
            "text": "Test Menu",
          },
          Object {
            "key": "test1",
            "text": "Test Menu 1",
          },
          Object {
            "key": "test2",
            "text": "Test Menu 2",
          },
          Object {
            "key": "test3",
            "text": "Test Menu 3",
          },
          Object {
            "key": "test4",
            "text": "Test Menu 4",
          },
        ]
      }
      onChange={[Function]}
      routingStackBack={[Function]}
      selectedMenuKey="menu"
      variant="nav-side-menu"
    >
      <VisuallyHiddenText
        aria-atomic="true"
        aria-live="assertive"
        aria-relevant="additions text"
        refCallback={[Function]}
      >
        <span
          aria-atomic="true"
          aria-live="assertive"
          aria-relevant="additions text"
          className="visually-hidden-text"
        />
      </VisuallyHiddenText>
      <ContentContainer
        className="side-menu-content-container orion-fusion-theme"
        fill={false}
        intl={
          Object {
            "defaultFormats": Object {},
            "defaultLocale": "en",
            "formatDate": [Function],
            "formatHTMLMessage": [Function],
            "formatMessage": [Function],
            "formatNumber": [Function],
            "formatPlural": [Function],
            "formatRelative": [Function],
            "formatTime": [Function],
            "formats": Object {},
            "formatters": Object {
              "getDateTimeFormat": [Function],
              "getMessageFormat": [Function],
              "getNumberFormat": [Function],
              "getPluralFormat": [Function],
              "getRelativeFormat": [Function],
            },
            "locale": "en",
            "messages": null,
            "now": [Function],
            "onError": [Function],
            "textComponent": "span",
            "timeZone": null,
          }
        }
        setFocusOnContainer={false}
      >
        <div
          className="content-container-static side-menu-content-container orion-fusion-theme"
          intl={
            Object {
              "defaultFormats": Object {},
              "defaultLocale": "en",
              "formatDate": [Function],
              "formatHTMLMessage": [Function],
              "formatMessage": [Function],
              "formatNumber": [Function],
              "formatPlural": [Function],
              "formatRelative": [Function],
              "formatTime": [Function],
              "formats": Object {},
              "formatters": Object {
                "getDateTimeFormat": [Function],
                "getMessageFormat": [Function],
                "getNumberFormat": [Function],
                "getPluralFormat": [Function],
                "getRelativeFormat": [Function],
              },
              "locale": "en",
              "messages": null,
              "now": [Function],
              "onError": [Function],
              "textComponent": "span",
              "timeZone": null,
            }
          }
        >
          <div
            className="main"
          >
            <Scroll
              className="normalizer orion-fusion-theme"
            >
              <div
                className="scroll normalizer orion-fusion-theme"
              >
                <nav
                  role="navigation"
                >
                  <ul
                    className="side-menu-list"
                    role="menu"
                  >
                    <li
                      className="orion-fusion-theme"
                      role="none"
                    >
                      <div
                        className="side-navigation-menu"
                        data-navigation-side-menu={true}
                        onClick={[Function]}
                        onKeyDown={[Function]}
                        role="menuitem"
                        tabIndex="0"
                        type="button"
                      >
                        <span
                          className="header-icon back"
                        />
                        <h1
                          className="title"
                        >
                          Test Menu
                        </h1>
                      </div>
                    </li>
                    <InjectIntl(MenuItem)
                      data-menu-item="test1"
                      isSelected={false}
                      key="test1"
                      onClick={[Function]}
                      onKeyDown={[Function]}
                      tabIndex="-1"
                      text="Test Menu 1"
                      variant="nav-side-menu"
                    >
                      <MenuItem
                        data-menu-item="test1"
                        intl={
                          Object {
                            "defaultFormats": Object {},
                            "defaultLocale": "en",
                            "formatDate": [Function],
                            "formatHTMLMessage": [Function],
                            "formatMessage": [Function],
                            "formatNumber": [Function],
                            "formatPlural": [Function],
                            "formatRelative": [Function],
                            "formatTime": [Function],
                            "formats": Object {},
                            "formatters": Object {
                              "getDateTimeFormat": [Function],
                              "getMessageFormat": [Function],
                              "getNumberFormat": [Function],
                              "getPluralFormat": [Function],
                              "getRelativeFormat": [Function],
                            },
                            "locale": "en",
                            "messages": null,
                            "now": [Function],
                            "onError": [Function],
                            "textComponent": "span",
                            "timeZone": null,
                          }
                        }
                        isSelected={false}
                        onClick={[Function]}
                        onKeyDown={[Function]}
                        tabIndex="-1"
                        text="Test Menu 1"
                        variant="nav-side-menu"
                      >
                        <li
                          className="list-item"
                          role="none"
                        >
                          <div
                            className="menu-item orion-fusion-theme"
                            data-menu-item="test1"
                            onClick={[Function]}
                            onKeyDown={[Function]}
                            role="menuitem"
                            tabIndex="-1"
                          >
                            <div
                              className="title"
                            >
                              Test Menu 1
                            </div>
                          </div>
                        </li>
                      </MenuItem>
                    </InjectIntl(MenuItem)>
                    <InjectIntl(MenuItem)
                      data-menu-item="test2"
                      isSelected={false}
                      key="test2"
                      onClick={[Function]}
                      onKeyDown={[Function]}
                      tabIndex="-1"
                      text="Test Menu 2"
                      variant="nav-side-menu"
                    >
                      <MenuItem
                        data-menu-item="test2"
                        intl={
                          Object {
                            "defaultFormats": Object {},
                            "defaultLocale": "en",
                            "formatDate": [Function],
                            "formatHTMLMessage": [Function],
                            "formatMessage": [Function],
                            "formatNumber": [Function],
                            "formatPlural": [Function],
                            "formatRelative": [Function],
                            "formatTime": [Function],
                            "formats": Object {},
                            "formatters": Object {
                              "getDateTimeFormat": [Function],
                              "getMessageFormat": [Function],
                              "getNumberFormat": [Function],
                              "getPluralFormat": [Function],
                              "getRelativeFormat": [Function],
                            },
                            "locale": "en",
                            "messages": null,
                            "now": [Function],
                            "onError": [Function],
                            "textComponent": "span",
                            "timeZone": null,
                          }
                        }
                        isSelected={false}
                        onClick={[Function]}
                        onKeyDown={[Function]}
                        tabIndex="-1"
                        text="Test Menu 2"
                        variant="nav-side-menu"
                      >
                        <li
                          className="list-item"
                          role="none"
                        >
                          <div
                            className="menu-item orion-fusion-theme"
                            data-menu-item="test2"
                            onClick={[Function]}
                            onKeyDown={[Function]}
                            role="menuitem"
                            tabIndex="-1"
                          >
                            <div
                              className="title"
                            >
                              Test Menu 2
                            </div>
                          </div>
                        </li>
                      </MenuItem>
                    </InjectIntl(MenuItem)>
                    <InjectIntl(MenuItem)
                      data-menu-item="test3"
                      isSelected={false}
                      key="test3"
                      onClick={[Function]}
                      onKeyDown={[Function]}
                      tabIndex="-1"
                      text="Test Menu 3"
                      variant="nav-side-menu"
                    >
                      <MenuItem
                        data-menu-item="test3"
                        intl={
                          Object {
                            "defaultFormats": Object {},
                            "defaultLocale": "en",
                            "formatDate": [Function],
                            "formatHTMLMessage": [Function],
                            "formatMessage": [Function],
                            "formatNumber": [Function],
                            "formatPlural": [Function],
                            "formatRelative": [Function],
                            "formatTime": [Function],
                            "formats": Object {},
                            "formatters": Object {
                              "getDateTimeFormat": [Function],
                              "getMessageFormat": [Function],
                              "getNumberFormat": [Function],
                              "getPluralFormat": [Function],
                              "getRelativeFormat": [Function],
                            },
                            "locale": "en",
                            "messages": null,
                            "now": [Function],
                            "onError": [Function],
                            "textComponent": "span",
                            "timeZone": null,
                          }
                        }
                        isSelected={false}
                        onClick={[Function]}
                        onKeyDown={[Function]}
                        tabIndex="-1"
                        text="Test Menu 3"
                        variant="nav-side-menu"
                      >
                        <li
                          className="list-item"
                          role="none"
                        >
                          <div
                            className="menu-item orion-fusion-theme"
                            data-menu-item="test3"
                            onClick={[Function]}
                            onKeyDown={[Function]}
                            role="menuitem"
                            tabIndex="-1"
                          >
                            <div
                              className="title"
                            >
                              Test Menu 3
                            </div>
                          </div>
                        </li>
                      </MenuItem>
                    </InjectIntl(MenuItem)>
                    <InjectIntl(MenuItem)
                      data-menu-item="test4"
                      isSelected={false}
                      key="test4"
                      onClick={[Function]}
                      onKeyDown={[Function]}
                      tabIndex="-1"
                      text="Test Menu 4"
                      variant="nav-side-menu"
                    >
                      <MenuItem
                        data-menu-item="test4"
                        intl={
                          Object {
                            "defaultFormats": Object {},
                            "defaultLocale": "en",
                            "formatDate": [Function],
                            "formatHTMLMessage": [Function],
                            "formatMessage": [Function],
                            "formatNumber": [Function],
                            "formatPlural": [Function],
                            "formatRelative": [Function],
                            "formatTime": [Function],
                            "formats": Object {},
                            "formatters": Object {
                              "getDateTimeFormat": [Function],
                              "getMessageFormat": [Function],
                              "getNumberFormat": [Function],
                              "getPluralFormat": [Function],
                              "getRelativeFormat": [Function],
                            },
                            "locale": "en",
                            "messages": null,
                            "now": [Function],
                            "onError": [Function],
                            "textComponent": "span",
                            "timeZone": null,
                          }
                        }
                        isSelected={false}
                        onClick={[Function]}
                        onKeyDown={[Function]}
                        tabIndex="-1"
                        text="Test Menu 4"
                        variant="nav-side-menu"
                      >
                        <li
                          className="list-item"
                          role="none"
                        >
                          <div
                            className="menu-item orion-fusion-theme"
                            data-menu-item="test4"
                            onClick={[Function]}
                            onKeyDown={[Function]}
                            role="menuitem"
                            tabIndex="-1"
                          >
                            <div
                              className="title"
                            >
                              Test Menu 4
                            </div>
                          </div>
                        </li>
                      </MenuItem>
                    </InjectIntl(MenuItem)>
                  </ul>
                </nav>
              </div>
            </Scroll>
          </div>
        </div>
      </ContentContainer>
    </NavigationSideMenu>
  </InjectIntl(NavigationSideMenu)>
</ThemeContextProvider>
`;

exports[`Layout should render a NavigationSideMenu with a toolbar 1`] = `
<NavigationSideMenu
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": null,
      "now": [Function],
      "onError": [Function],
      "textComponent": "span",
      "timeZone": null,
    }
  }
  menuItems={Array []}
  onChange={[MockFunction]}
  routingStackBack={[MockFunction]}
  selectedMenuKey=""
  toolbar={
    <div>
      Toolbar
    </div>
  }
  variant="nav-side-menu"
/>
`;

exports[`Layout should render a NavigationSideMenu with ariaLabel 1`] = `
<InjectIntl(NavigationSideMenu)
  ariaLabel="Sub Menu List"
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": null,
      "now": [Function],
      "onError": [Function],
      "textComponent": "span",
      "timeZone": null,
    }
  }
  menuItems={
    Array [
      Object {
        "childKeys": Array [
          "test1",
          "test2",
          "test3",
          "test4",
        ],
        "key": "menu",
        "text": "Test Menu",
      },
      Object {
        "key": "test1",
        "text": "Test Menu 1",
      },
      Object {
        "key": "test2",
        "text": "Test Menu 2",
      },
      Object {
        "key": "test3",
        "text": "Test Menu 3",
      },
      Object {
        "key": "test4",
        "text": "Test Menu 4",
      },
    ]
  }
  onChange={[Function]}
  routingStackBack={[Function]}
  selectedMenuKey="menu"
>
  <NavigationSideMenu
    ariaLabel="Sub Menu List"
    intl={
      Object {
        "defaultFormats": Object {},
        "defaultLocale": "en",
        "formatDate": [Function],
        "formatHTMLMessage": [Function],
        "formatMessage": [Function],
        "formatNumber": [Function],
        "formatPlural": [Function],
        "formatRelative": [Function],
        "formatTime": [Function],
        "formats": Object {},
        "formatters": Object {
          "getDateTimeFormat": [Function],
          "getMessageFormat": [Function],
          "getNumberFormat": [Function],
          "getPluralFormat": [Function],
          "getRelativeFormat": [Function],
        },
        "locale": "en",
        "messages": null,
        "now": [Function],
        "onError": [Function],
        "textComponent": "span",
        "timeZone": null,
      }
    }
    menuItems={
      Array [
        Object {
          "childKeys": Array [
            "test1",
            "test2",
            "test3",
            "test4",
          ],
          "key": "menu",
          "text": "Test Menu",
        },
        Object {
          "key": "test1",
          "text": "Test Menu 1",
        },
        Object {
          "key": "test2",
          "text": "Test Menu 2",
        },
        Object {
          "key": "test3",
          "text": "Test Menu 3",
        },
        Object {
          "key": "test4",
          "text": "Test Menu 4",
        },
      ]
    }
    onChange={[Function]}
    routingStackBack={[Function]}
    selectedMenuKey="menu"
    variant="nav-side-menu"
  >
    <VisuallyHiddenText
      aria-atomic="true"
      aria-live="assertive"
      aria-relevant="additions text"
      refCallback={[Function]}
    >
      <span
        aria-atomic="true"
        aria-live="assertive"
        aria-relevant="additions text"
        className="visually-hidden-text"
      />
    </VisuallyHiddenText>
    <ContentContainer
      ariaLabel="Sub Menu List"
      className="side-menu-content-container"
      fill={false}
      intl={
        Object {
          "defaultFormats": Object {},
          "defaultLocale": "en",
          "formatDate": [Function],
          "formatHTMLMessage": [Function],
          "formatMessage": [Function],
          "formatNumber": [Function],
          "formatPlural": [Function],
          "formatRelative": [Function],
          "formatTime": [Function],
          "formats": Object {},
          "formatters": Object {
            "getDateTimeFormat": [Function],
            "getMessageFormat": [Function],
            "getNumberFormat": [Function],
            "getPluralFormat": [Function],
            "getRelativeFormat": [Function],
          },
          "locale": "en",
          "messages": null,
          "now": [Function],
          "onError": [Function],
          "textComponent": "span",
          "timeZone": null,
        }
      }
      setFocusOnContainer={false}
    >
      <div
        ariaLabel="Sub Menu List"
        className="content-container-static side-menu-content-container"
        intl={
          Object {
            "defaultFormats": Object {},
            "defaultLocale": "en",
            "formatDate": [Function],
            "formatHTMLMessage": [Function],
            "formatMessage": [Function],
            "formatNumber": [Function],
            "formatPlural": [Function],
            "formatRelative": [Function],
            "formatTime": [Function],
            "formats": Object {},
            "formatters": Object {
              "getDateTimeFormat": [Function],
              "getMessageFormat": [Function],
              "getNumberFormat": [Function],
              "getPluralFormat": [Function],
              "getRelativeFormat": [Function],
            },
            "locale": "en",
            "messages": null,
            "now": [Function],
            "onError": [Function],
            "textComponent": "span",
            "timeZone": null,
          }
        }
      >
        <div
          className="main"
        >
          <Scroll
            className="normalizer"
          >
            <div
              className="scroll normalizer"
            >
              <nav
                aria-label="Sub Menu List"
                role="navigation"
              >
                <ul
                  className="side-menu-list"
                  role="menu"
                >
                  <li
                    className=""
                    role="none"
                  >
                    <div
                      className="side-navigation-menu"
                      data-navigation-side-menu={true}
                      onClick={[Function]}
                      onKeyDown={[Function]}
                      role="menuitem"
                      tabIndex="0"
                      type="button"
                    >
                      <span
                        className="header-icon back"
                      />
                      <h1
                        className="title"
                      >
                        Test Menu
                      </h1>
                    </div>
                  </li>
                  <InjectIntl(MenuItem)
                    data-menu-item="test1"
                    isSelected={false}
                    key="test1"
                    onClick={[Function]}
                    onKeyDown={[Function]}
                    tabIndex="-1"
                    text="Test Menu 1"
                    variant="nav-side-menu"
                  >
                    <MenuItem
                      data-menu-item="test1"
                      intl={
                        Object {
                          "defaultFormats": Object {},
                          "defaultLocale": "en",
                          "formatDate": [Function],
                          "formatHTMLMessage": [Function],
                          "formatMessage": [Function],
                          "formatNumber": [Function],
                          "formatPlural": [Function],
                          "formatRelative": [Function],
                          "formatTime": [Function],
                          "formats": Object {},
                          "formatters": Object {
                            "getDateTimeFormat": [Function],
                            "getMessageFormat": [Function],
                            "getNumberFormat": [Function],
                            "getPluralFormat": [Function],
                            "getRelativeFormat": [Function],
                          },
                          "locale": "en",
                          "messages": null,
                          "now": [Function],
                          "onError": [Function],
                          "textComponent": "span",
                          "timeZone": null,
                        }
                      }
                      isSelected={false}
                      onClick={[Function]}
                      onKeyDown={[Function]}
                      tabIndex="-1"
                      text="Test Menu 1"
                      variant="nav-side-menu"
                    >
                      <li
                        className="list-item"
                        role="none"
                      >
                        <div
                          className="menu-item"
                          data-menu-item="test1"
                          onClick={[Function]}
                          onKeyDown={[Function]}
                          role="menuitem"
                          tabIndex="-1"
                        >
                          <div
                            className="title"
                          >
                            Test Menu 1
                          </div>
                        </div>
                      </li>
                    </MenuItem>
                  </InjectIntl(MenuItem)>
                  <InjectIntl(MenuItem)
                    data-menu-item="test2"
                    isSelected={false}
                    key="test2"
                    onClick={[Function]}
                    onKeyDown={[Function]}
                    tabIndex="-1"
                    text="Test Menu 2"
                    variant="nav-side-menu"
                  >
                    <MenuItem
                      data-menu-item="test2"
                      intl={
                        Object {
                          "defaultFormats": Object {},
                          "defaultLocale": "en",
                          "formatDate": [Function],
                          "formatHTMLMessage": [Function],
                          "formatMessage": [Function],
                          "formatNumber": [Function],
                          "formatPlural": [Function],
                          "formatRelative": [Function],
                          "formatTime": [Function],
                          "formats": Object {},
                          "formatters": Object {
                            "getDateTimeFormat": [Function],
                            "getMessageFormat": [Function],
                            "getNumberFormat": [Function],
                            "getPluralFormat": [Function],
                            "getRelativeFormat": [Function],
                          },
                          "locale": "en",
                          "messages": null,
                          "now": [Function],
                          "onError": [Function],
                          "textComponent": "span",
                          "timeZone": null,
                        }
                      }
                      isSelected={false}
                      onClick={[Function]}
                      onKeyDown={[Function]}
                      tabIndex="-1"
                      text="Test Menu 2"
                      variant="nav-side-menu"
                    >
                      <li
                        className="list-item"
                        role="none"
                      >
                        <div
                          className="menu-item"
                          data-menu-item="test2"
                          onClick={[Function]}
                          onKeyDown={[Function]}
                          role="menuitem"
                          tabIndex="-1"
                        >
                          <div
                            className="title"
                          >
                            Test Menu 2
                          </div>
                        </div>
                      </li>
                    </MenuItem>
                  </InjectIntl(MenuItem)>
                  <InjectIntl(MenuItem)
                    data-menu-item="test3"
                    isSelected={false}
                    key="test3"
                    onClick={[Function]}
                    onKeyDown={[Function]}
                    tabIndex="-1"
                    text="Test Menu 3"
                    variant="nav-side-menu"
                  >
                    <MenuItem
                      data-menu-item="test3"
                      intl={
                        Object {
                          "defaultFormats": Object {},
                          "defaultLocale": "en",
                          "formatDate": [Function],
                          "formatHTMLMessage": [Function],
                          "formatMessage": [Function],
                          "formatNumber": [Function],
                          "formatPlural": [Function],
                          "formatRelative": [Function],
                          "formatTime": [Function],
                          "formats": Object {},
                          "formatters": Object {
                            "getDateTimeFormat": [Function],
                            "getMessageFormat": [Function],
                            "getNumberFormat": [Function],
                            "getPluralFormat": [Function],
                            "getRelativeFormat": [Function],
                          },
                          "locale": "en",
                          "messages": null,
                          "now": [Function],
                          "onError": [Function],
                          "textComponent": "span",
                          "timeZone": null,
                        }
                      }
                      isSelected={false}
                      onClick={[Function]}
                      onKeyDown={[Function]}
                      tabIndex="-1"
                      text="Test Menu 3"
                      variant="nav-side-menu"
                    >
                      <li
                        className="list-item"
                        role="none"
                      >
                        <div
                          className="menu-item"
                          data-menu-item="test3"
                          onClick={[Function]}
                          onKeyDown={[Function]}
                          role="menuitem"
                          tabIndex="-1"
                        >
                          <div
                            className="title"
                          >
                            Test Menu 3
                          </div>
                        </div>
                      </li>
                    </MenuItem>
                  </InjectIntl(MenuItem)>
                  <InjectIntl(MenuItem)
                    data-menu-item="test4"
                    isSelected={false}
                    key="test4"
                    onClick={[Function]}
                    onKeyDown={[Function]}
                    tabIndex="-1"
                    text="Test Menu 4"
                    variant="nav-side-menu"
                  >
                    <MenuItem
                      data-menu-item="test4"
                      intl={
                        Object {
                          "defaultFormats": Object {},
                          "defaultLocale": "en",
                          "formatDate": [Function],
                          "formatHTMLMessage": [Function],
                          "formatMessage": [Function],
                          "formatNumber": [Function],
                          "formatPlural": [Function],
                          "formatRelative": [Function],
                          "formatTime": [Function],
                          "formats": Object {},
                          "formatters": Object {
                            "getDateTimeFormat": [Function],
                            "getMessageFormat": [Function],
                            "getNumberFormat": [Function],
                            "getPluralFormat": [Function],
                            "getRelativeFormat": [Function],
                          },
                          "locale": "en",
                          "messages": null,
                          "now": [Function],
                          "onError": [Function],
                          "textComponent": "span",
                          "timeZone": null,
                        }
                      }
                      isSelected={false}
                      onClick={[Function]}
                      onKeyDown={[Function]}
                      tabIndex="-1"
                      text="Test Menu 4"
                      variant="nav-side-menu"
                    >
                      <li
                        className="list-item"
                        role="none"
                      >
                        <div
                          className="menu-item"
                          data-menu-item="test4"
                          onClick={[Function]}
                          onKeyDown={[Function]}
                          role="menuitem"
                          tabIndex="-1"
                        >
                          <div
                            className="title"
                          >
                            Test Menu 4
                          </div>
                        </div>
                      </li>
                    </MenuItem>
                  </InjectIntl(MenuItem)>
                </ul>
              </nav>
            </div>
          </Scroll>
        </div>
      </div>
    </ContentContainer>
  </NavigationSideMenu>
</InjectIntl(NavigationSideMenu)>
`;

exports[`Layout should render a NavigationSideMenu with default props 1`] = `
<NavigationSideMenu
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": null,
      "now": [Function],
      "onError": [Function],
      "textComponent": "span",
      "timeZone": null,
    }
  }
  menuItems={Array []}
  onChange={[Function]}
  routingStackBack={[Function]}
  selectedMenuKey=""
  variant="nav-side-menu"
/>
`;

exports[`Layout should render a NavigationSideMenu with selectedKey 1`] = `
<NavigationSideMenu
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": null,
      "now": [Function],
      "onError": [Function],
      "textComponent": "span",
      "timeZone": null,
    }
  }
  menuItems={
    Array [
      Object {
        "childKeys": Array [
          "test1",
          "test2",
          "test3",
          "test4",
        ],
        "key": "menu",
        "text": "Test Menu",
      },
      Object {
        "key": "test1",
        "text": "Test Menu 1",
      },
      Object {
        "key": "test2",
        "text": "Test Menu 2",
      },
      Object {
        "key": "test3",
        "text": "Test Menu 3",
      },
      Object {
        "key": "test4",
        "text": "Test Menu 4",
      },
    ]
  }
  onChange={[Function]}
  routingStackBack={[Function]}
  selectedMenuKey="menu"
  variant="nav-side-menu"
/>
`;
