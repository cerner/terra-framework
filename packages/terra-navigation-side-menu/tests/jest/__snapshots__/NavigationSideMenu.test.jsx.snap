// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Layout correctly applies the theme context className 1`] = `
<ThemeContextProvider
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": null,
      "now": [Function],
      "onError": [Function],
      "textComponent": "span",
      "timeZone": null,
    }
  }
  theme={
    Object {
      "className": "orion-fusion-theme",
    }
  }
>
  <InjectIntl(NavigationSideMenu)
    menuItems={
      Array [
        Object {
          "childKeys": Array [
            "test1",
            "test2",
            "test3",
            "test4",
          ],
          "key": "menu",
          "text": "Test Menu",
        },
        Object {
          "key": "test1",
          "text": "Test Menu 1",
        },
        Object {
          "key": "test2",
          "text": "Test Menu 2",
        },
        Object {
          "key": "test3",
          "text": "Test Menu 3",
        },
        Object {
          "key": "test4",
          "text": "Test Menu 4",
        },
      ]
    }
    onChange={[Function]}
    routingStackBack={[Function]}
    selectedMenuKey="menu"
  >
    <NavigationSideMenu
      intl={
        Object {
          "defaultFormats": Object {},
          "defaultLocale": "en",
          "formatDate": [Function],
          "formatHTMLMessage": [Function],
          "formatMessage": [Function],
          "formatNumber": [Function],
          "formatPlural": [Function],
          "formatRelative": [Function],
          "formatTime": [Function],
          "formats": Object {},
          "formatters": Object {
            "getDateTimeFormat": [Function],
            "getMessageFormat": [Function],
            "getNumberFormat": [Function],
            "getPluralFormat": [Function],
            "getRelativeFormat": [Function],
          },
          "locale": "en",
          "messages": null,
          "now": [Function],
          "onError": [Function],
          "textComponent": "span",
          "timeZone": null,
        }
      }
      menuItems={
        Array [
          Object {
            "childKeys": Array [
              "test1",
              "test2",
              "test3",
              "test4",
            ],
            "key": "menu",
            "text": "Test Menu",
          },
          Object {
            "key": "test1",
            "text": "Test Menu 1",
          },
          Object {
            "key": "test2",
            "text": "Test Menu 2",
          },
          Object {
            "key": "test3",
            "text": "Test Menu 3",
          },
          Object {
            "key": "test4",
            "text": "Test Menu 4",
          },
        ]
      }
      onChange={[Function]}
      routingStackBack={[Function]}
      selectedMenuKey="menu"
    >
      <VisuallyHiddenText
        aria-atomic="true"
        aria-live="assertive"
        aria-relevant="additions text"
        refCallback={[Function]}
      >
        <span
          aria-atomic="true"
          aria-live="assertive"
          aria-relevant="additions text"
          className="visually-hidden-text"
        />
      </VisuallyHiddenText>
      <ContentContainer
        className="side-menu-content-container orion-fusion-theme"
        fill={true}
        header={
          <React.Fragment>
            <InjectIntl(ActionHeader)
              className="side-menu-action-header"
              data-navigation-side-menu-action-header={true}
              onBack={[Function]}
              title="Test Menu"
            />
          </React.Fragment>
        }
        intl={
          Object {
            "defaultFormats": Object {},
            "defaultLocale": "en",
            "formatDate": [Function],
            "formatHTMLMessage": [Function],
            "formatMessage": [Function],
            "formatNumber": [Function],
            "formatPlural": [Function],
            "formatRelative": [Function],
            "formatTime": [Function],
            "formats": Object {},
            "formatters": Object {
              "getDateTimeFormat": [Function],
              "getMessageFormat": [Function],
              "getNumberFormat": [Function],
              "getPluralFormat": [Function],
              "getRelativeFormat": [Function],
            },
            "locale": "en",
            "messages": null,
            "now": [Function],
            "onError": [Function],
            "textComponent": "span",
            "timeZone": null,
          }
        }
      >
        <div
          className="content-container-fill side-menu-content-container orion-fusion-theme"
          intl={
            Object {
              "defaultFormats": Object {},
              "defaultLocale": "en",
              "formatDate": [Function],
              "formatHTMLMessage": [Function],
              "formatMessage": [Function],
              "formatNumber": [Function],
              "formatPlural": [Function],
              "formatRelative": [Function],
              "formatTime": [Function],
              "formats": Object {},
              "formatters": Object {
                "getDateTimeFormat": [Function],
                "getMessageFormat": [Function],
                "getNumberFormat": [Function],
                "getPluralFormat": [Function],
                "getRelativeFormat": [Function],
              },
              "locale": "en",
              "messages": null,
              "now": [Function],
              "onError": [Function],
              "textComponent": "span",
              "timeZone": null,
            }
          }
        >
          <div
            className="header"
          >
            <InjectIntl(ActionHeader)
              className="side-menu-action-header"
              data-navigation-side-menu-action-header={true}
              onBack={[Function]}
              title="Test Menu"
            >
              <ActionHeader
                className="side-menu-action-header"
                data-navigation-side-menu-action-header={true}
                intl={
                  Object {
                    "defaultFormats": Object {},
                    "defaultLocale": "en",
                    "formatDate": [Function],
                    "formatHTMLMessage": [Function],
                    "formatMessage": [Function],
                    "formatNumber": [Function],
                    "formatPlural": [Function],
                    "formatRelative": [Function],
                    "formatTime": [Function],
                    "formats": Object {},
                    "formatters": Object {
                      "getDateTimeFormat": [Function],
                      "getMessageFormat": [Function],
                      "getNumberFormat": [Function],
                      "getPluralFormat": [Function],
                      "getRelativeFormat": [Function],
                    },
                    "locale": "en",
                    "messages": null,
                    "now": [Function],
                    "onError": [Function],
                    "textComponent": "span",
                    "timeZone": null,
                  }
                }
                level={1}
                onBack={[Function]}
                title="Test Menu"
              >
                <ActionHeaderContainer
                  className="side-menu-action-header"
                  data-navigation-side-menu-action-header={true}
                  endContent={null}
                  level={1}
                  startContent={
                    <div
                      className="left-buttons orion-fusion-theme"
                    >
                      <Button
                        className="header-button back-button"
                        data-terra-action-header="back-button"
                        icon={
                          <span
                            className="header-icon back"
                          />
                        }
                        isBlock={false}
                        isCompact={false}
                        isDisabled={false}
                        isIconOnly={true}
                        isReversed={false}
                        onClick={[Function]}
                        text="Terra.actionHeader.back"
                        type="button"
                        variant="utility"
                      />
                    </div>
                  }
                  title="Test Menu"
                >
                  <div
                    className="flex-header orion-fusion-theme side-menu-action-header"
                    data-navigation-side-menu-action-header={true}
                  >
                    <div
                      className="flex-end"
                    >
                      <div
                        className="left-buttons orion-fusion-theme"
                      >
                        <Button
                          className="header-button back-button"
                          data-terra-action-header="back-button"
                          icon={
                            <span
                              className="header-icon back"
                            />
                          }
                          isBlock={false}
                          isCompact={false}
                          isDisabled={false}
                          isIconOnly={true}
                          isReversed={false}
                          onClick={[Function]}
                          text="Terra.actionHeader.back"
                          type="button"
                          variant="utility"
                        >
                          <button
                            aria-disabled={false}
                            aria-label="Terra.actionHeader.back"
                            className="button utility orion-fusion-theme header-button back-button"
                            data-terra-action-header="back-button"
                            disabled={false}
                            onBlur={[Function]}
                            onClick={[Function]}
                            onFocus={[Function]}
                            onKeyDown={[Function]}
                            onKeyUp={[Function]}
                            onMouseDown={[Function]}
                            title="Terra.actionHeader.back"
                            type="button"
                          >
                            <span
                              className="button-label icon-only"
                            >
                              <span
                                className="icon"
                              >
                                <span
                                  className="header-icon back icon-svg"
                                />
                              </span>
                            </span>
                          </button>
                        </Button>
                      </div>
                    </div>
                    <div
                      className="flex-fill"
                    >
                      <div
                        className="title-container"
                      >
                        <h1
                          className="title"
                        >
                          Test Menu
                        </h1>
                      </div>
                    </div>
                  </div>
                </ActionHeaderContainer>
              </ActionHeader>
            </InjectIntl(ActionHeader)>
          </div>
          <div
            className="main"
          >
            <Scroll
              className="normalizer"
            >
              <div
                className="scroll normalizer"
              >
                <nav
                  role="navigation"
                >
                  <ul
                    className="side-menu-list"
                    role="menu"
                  >
                    <InjectIntl(MenuItem)
                      data-menu-item="test1"
                      isSelected={false}
                      key="test1"
                      onClick={[Function]}
                      onKeyDown={[Function]}
                      text="Test Menu 1"
                    >
                      <MenuItem
                        data-menu-item="test1"
                        intl={
                          Object {
                            "defaultFormats": Object {},
                            "defaultLocale": "en",
                            "formatDate": [Function],
                            "formatHTMLMessage": [Function],
                            "formatMessage": [Function],
                            "formatNumber": [Function],
                            "formatPlural": [Function],
                            "formatRelative": [Function],
                            "formatTime": [Function],
                            "formats": Object {},
                            "formatters": Object {
                              "getDateTimeFormat": [Function],
                              "getMessageFormat": [Function],
                              "getNumberFormat": [Function],
                              "getPluralFormat": [Function],
                              "getRelativeFormat": [Function],
                            },
                            "locale": "en",
                            "messages": null,
                            "now": [Function],
                            "onError": [Function],
                            "textComponent": "span",
                            "timeZone": null,
                          }
                        }
                        isSelected={false}
                        onClick={[Function]}
                        onKeyDown={[Function]}
                        text="Test Menu 1"
                      >
                        <li
                          className="list-item"
                          role="none"
                        >
                          <div
                            className="menu-item orion-fusion-theme"
                            data-menu-item="test1"
                            onBlur={[Function]}
                            onClick={[Function]}
                            onKeyDown={[Function]}
                            onKeyUp={[Function]}
                            role="menuitem"
                            tabIndex="0"
                          >
                            <div
                              className="title"
                            >
                              Test Menu 1
                            </div>
                          </div>
                        </li>
                      </MenuItem>
                    </InjectIntl(MenuItem)>
                    <InjectIntl(MenuItem)
                      data-menu-item="test2"
                      isSelected={false}
                      key="test2"
                      onClick={[Function]}
                      onKeyDown={[Function]}
                      text="Test Menu 2"
                    >
                      <MenuItem
                        data-menu-item="test2"
                        intl={
                          Object {
                            "defaultFormats": Object {},
                            "defaultLocale": "en",
                            "formatDate": [Function],
                            "formatHTMLMessage": [Function],
                            "formatMessage": [Function],
                            "formatNumber": [Function],
                            "formatPlural": [Function],
                            "formatRelative": [Function],
                            "formatTime": [Function],
                            "formats": Object {},
                            "formatters": Object {
                              "getDateTimeFormat": [Function],
                              "getMessageFormat": [Function],
                              "getNumberFormat": [Function],
                              "getPluralFormat": [Function],
                              "getRelativeFormat": [Function],
                            },
                            "locale": "en",
                            "messages": null,
                            "now": [Function],
                            "onError": [Function],
                            "textComponent": "span",
                            "timeZone": null,
                          }
                        }
                        isSelected={false}
                        onClick={[Function]}
                        onKeyDown={[Function]}
                        text="Test Menu 2"
                      >
                        <li
                          className="list-item"
                          role="none"
                        >
                          <div
                            className="menu-item orion-fusion-theme"
                            data-menu-item="test2"
                            onBlur={[Function]}
                            onClick={[Function]}
                            onKeyDown={[Function]}
                            onKeyUp={[Function]}
                            role="menuitem"
                            tabIndex="0"
                          >
                            <div
                              className="title"
                            >
                              Test Menu 2
                            </div>
                          </div>
                        </li>
                      </MenuItem>
                    </InjectIntl(MenuItem)>
                    <InjectIntl(MenuItem)
                      data-menu-item="test3"
                      isSelected={false}
                      key="test3"
                      onClick={[Function]}
                      onKeyDown={[Function]}
                      text="Test Menu 3"
                    >
                      <MenuItem
                        data-menu-item="test3"
                        intl={
                          Object {
                            "defaultFormats": Object {},
                            "defaultLocale": "en",
                            "formatDate": [Function],
                            "formatHTMLMessage": [Function],
                            "formatMessage": [Function],
                            "formatNumber": [Function],
                            "formatPlural": [Function],
                            "formatRelative": [Function],
                            "formatTime": [Function],
                            "formats": Object {},
                            "formatters": Object {
                              "getDateTimeFormat": [Function],
                              "getMessageFormat": [Function],
                              "getNumberFormat": [Function],
                              "getPluralFormat": [Function],
                              "getRelativeFormat": [Function],
                            },
                            "locale": "en",
                            "messages": null,
                            "now": [Function],
                            "onError": [Function],
                            "textComponent": "span",
                            "timeZone": null,
                          }
                        }
                        isSelected={false}
                        onClick={[Function]}
                        onKeyDown={[Function]}
                        text="Test Menu 3"
                      >
                        <li
                          className="list-item"
                          role="none"
                        >
                          <div
                            className="menu-item orion-fusion-theme"
                            data-menu-item="test3"
                            onBlur={[Function]}
                            onClick={[Function]}
                            onKeyDown={[Function]}
                            onKeyUp={[Function]}
                            role="menuitem"
                            tabIndex="0"
                          >
                            <div
                              className="title"
                            >
                              Test Menu 3
                            </div>
                          </div>
                        </li>
                      </MenuItem>
                    </InjectIntl(MenuItem)>
                    <InjectIntl(MenuItem)
                      data-menu-item="test4"
                      isSelected={false}
                      key="test4"
                      onClick={[Function]}
                      onKeyDown={[Function]}
                      text="Test Menu 4"
                    >
                      <MenuItem
                        data-menu-item="test4"
                        intl={
                          Object {
                            "defaultFormats": Object {},
                            "defaultLocale": "en",
                            "formatDate": [Function],
                            "formatHTMLMessage": [Function],
                            "formatMessage": [Function],
                            "formatNumber": [Function],
                            "formatPlural": [Function],
                            "formatRelative": [Function],
                            "formatTime": [Function],
                            "formats": Object {},
                            "formatters": Object {
                              "getDateTimeFormat": [Function],
                              "getMessageFormat": [Function],
                              "getNumberFormat": [Function],
                              "getPluralFormat": [Function],
                              "getRelativeFormat": [Function],
                            },
                            "locale": "en",
                            "messages": null,
                            "now": [Function],
                            "onError": [Function],
                            "textComponent": "span",
                            "timeZone": null,
                          }
                        }
                        isSelected={false}
                        onClick={[Function]}
                        onKeyDown={[Function]}
                        text="Test Menu 4"
                      >
                        <li
                          className="list-item"
                          role="none"
                        >
                          <div
                            className="menu-item orion-fusion-theme"
                            data-menu-item="test4"
                            onBlur={[Function]}
                            onClick={[Function]}
                            onKeyDown={[Function]}
                            onKeyUp={[Function]}
                            role="menuitem"
                            tabIndex="0"
                          >
                            <div
                              className="title"
                            >
                              Test Menu 4
                            </div>
                          </div>
                        </li>
                      </MenuItem>
                    </InjectIntl(MenuItem)>
                  </ul>
                </nav>
              </div>
            </Scroll>
          </div>
        </div>
      </ContentContainer>
    </NavigationSideMenu>
  </InjectIntl(NavigationSideMenu)>
</ThemeContextProvider>
`;

exports[`Layout should render a NavigationSideMenu with a toolbar 1`] = `
<NavigationSideMenu
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": null,
      "now": [Function],
      "onError": [Function],
      "textComponent": "span",
      "timeZone": null,
    }
  }
  menuItems={Array []}
  onChange={[MockFunction]}
  routingStackBack={[MockFunction]}
  selectedMenuKey=""
  toolbar={
    <div>
      Toolbar
    </div>
  }
/>
`;

exports[`Layout should render a NavigationSideMenu with default props 1`] = `
<NavigationSideMenu
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": null,
      "now": [Function],
      "onError": [Function],
      "textComponent": "span",
      "timeZone": null,
    }
  }
  menuItems={Array []}
  onChange={[Function]}
  routingStackBack={[Function]}
  selectedMenuKey=""
/>
`;

exports[`Layout should render a NavigationSideMenu with selectedKey 1`] = `
<NavigationSideMenu
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": null,
      "now": [Function],
      "onError": [Function],
      "textComponent": "span",
      "timeZone": null,
    }
  }
  menuItems={
    Array [
      Object {
        "childKeys": Array [
          "test1",
          "test2",
          "test3",
          "test4",
        ],
        "key": "menu",
        "text": "Test Menu",
      },
      Object {
        "key": "test1",
        "text": "Test Menu 1",
      },
      Object {
        "key": "test2",
        "text": "Test Menu 2",
      },
      Object {
        "key": "test3",
        "text": "Test Menu 3",
      },
      Object {
        "key": "test4",
        "text": "Test Menu 4",
      },
    ]
  }
  onChange={[Function]}
  routingStackBack={[Function]}
  selectedMenuKey="menu"
/>
`;
