// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Layout should render a NavigationSideMenu with a toolbar 1`] = `
<NavigationSideMenu
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": null,
      "now": [Function],
      "onError": [Function],
      "textComponent": "span",
      "timeZone": null,
    }
  }
  menuItems={Array []}
  onChange={[MockFunction]}
  routingStackBack={[MockFunction]}
  selectedMenuKey=""
  toolbar={
    <div>
      Toolbar
    </div>
  }
/>
`;

exports[`Layout should render a NavigationSideMenu with default props 1`] = `
<NavigationSideMenu
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": null,
      "now": [Function],
      "onError": [Function],
      "textComponent": "span",
      "timeZone": null,
    }
  }
  menuItems={Array []}
  onChange={[Function]}
  routingStackBack={[Function]}
  selectedMenuKey=""
/>
`;

exports[`Layout should render a NavigationSideMenu with selectedKey 1`] = `
<NavigationSideMenu
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": null,
      "now": [Function],
      "onError": [Function],
      "textComponent": "span",
      "timeZone": null,
    }
  }
  menuItems={
    Array [
      Object {
        "childKeys": Array [
          "test1",
          "test2",
          "test3",
          "test4",
        ],
        "key": "menu",
        "text": "Test Menu",
      },
      Object {
        "key": "test1",
        "text": "Test Menu 1",
      },
      Object {
        "key": "test2",
        "text": "Test Menu 2",
      },
      Object {
        "key": "test3",
        "text": "Test Menu 3",
      },
      Object {
        "key": "test4",
        "text": "Test Menu 4",
      },
    ]
  }
  onChange={[Function]}
  routingStackBack={[Function]}
  selectedMenuKey="menu"
/>
`;
