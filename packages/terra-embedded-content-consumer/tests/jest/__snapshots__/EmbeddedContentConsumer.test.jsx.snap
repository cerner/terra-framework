// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`sets appropriate config option when resizeConfig.scrolling is false 1`] = `
<div>
  <EmbeddedContentConsumer
    options={
      Object {
        "resizeConfig": Object {
          "scrolling": false,
        },
      }
    }
    src="https://www.google.com/"
  />
</div>
`;

exports[`sets appropriate config option when resizeConfig.scrolling is true 1`] = `
<div>
  <EmbeddedContentConsumer
    options={
      Object {
        "resizeConfig": Object {
          "scrolling": true,
        },
      }
    }
    src="https://www.google.com/"
  />
</div>
`;

exports[`should render the embedded content consumer container 1`] = `<div />`;
exports[`EmbeddedContentConsumer should render the embedded content consumer container 1`] = `
<div>
  <EmbeddedContentConsumer
    src="/terra-framework/#/raw/provider/cerner-terra-framework-docs/embedded-content-consumer/providers/basic-provider"
  />
</div>
`;

exports[`EmbeddedContentConsumer should render the embedded content consumer with custom class names 1`] = `
<div>
  <EmbeddedContentConsumer
    className="container"
    src="https://www.cdc.gov/"
  />
</div>
`;

exports[`EmbeddedContentConsumer should render the embedded content consumer with title prop 1`] = `
<div>
  <EmbeddedContentConsumer
    src="https://www.cdc.gov/"
    title="title for the frame content"
  />
</div>
`;

exports[`EmbeddedContentConsumer should render the embedded content consumer with title prop and options prop 1`] = `
<div>
  <EmbeddedContentConsumer
    options={
      Object {
        "iframeAttrs": Object {
          "title": "title of content set from options.iframeAttrs",
        },
      }
    }
    src="https://www.cdc.gov/"
    title="title that will be used for the frame content"
  />
</div>
`;

exports[`EmbeddedContentConsumer should set title using value from title prop into the frame 1`] = `
<div>
  <EmbeddedContentConsumer
    src="https://www.cdc.gov/"
    title="title for the frame content"
  />
</div>
`;

exports[`should render the embedded content consumer with options attributes 1`] = `
<div>
  <EmbeddedContentConsumer
    options={
      Object {
        "iframeAttrs": Object {
          "height": "100px",
          "srcdoc": "<p><b>Inline HTML Content</b></p><p>This is an inline html content that can be used to render the content into the frame.</p>",
          "title": "inline html content",
          "width": "100%",
        },
      }
    }
  />
</div>
`;
