"use strict";(self.webpackChunkterra_framework=self.webpackChunkterra_framework||[]).push([[73503],{73503:function(e,l,t){t.r(l),t.d(l,{default:function(){return Q}});var a=t(87462),n=t(44925),r=t(67294),i=t(81254),o=t(67547),s=t(34261),d=t(86009),m=t(19594),p=["components"],c={};function u(e){var l=e.components,t=(0,n.Z)(e,p);return(0,i.mdx)("wrapper",(0,a.Z)({},c,t,{components:l,mdxType:"MDXLayout"}),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-jsx"},"import React, { useState } from 'react';\nimport classNamesBind from 'classnames/bind';\nimport { Button as DocsButton, Placeholder } from '@cerner/terra-docs';\nimport Button from 'terra-button';\nimport FilterPills, { Pill } from '@cerner/terra-pills';\nimport Text from 'terra-text';\nimport ThemeContext from 'terra-theme-context';\nimport Toolbar from 'terra-toolbar';\nimport styles from './FilterPillsCommon.module.scss';\n\nconst cx = classNamesBind.bind(styles);\n\nconst AppliedFiltersExample = () => {\n  const theme = React.useContext(ThemeContext);\n\n  const pillsData = [];\n  for (let pillCount = 1; pillCount < 11; pillCount += 1) {\n    const pillData = {\n      label: `Selection ${pillCount}`,\n      labelCategory: 'Category',\n      id: `terra-filter-pills-category-selection-${pillCount}`,\n    };\n    pillsData.push(pillData);\n  }\n  const [pills, setPills] = useState(pillsData);\n  const isResetButtonDisabled = (pills.length === pillsData.length);\n\n  const handleOnRemove = (id, metaData) => {\n    const pillsArray = pills;\n    pillsArray.splice(metaData.index, 1);\n    setPills([...pillsArray]);\n  };\n\n  const appliedFiltersLabel = 'Applied Filters:';\n  const appliedFiltersLabelId = 'terra-filter-pills-example-applied-filters-label';\n\n  return (\n    <>\n      <div className={cx(['terra-filter-pills-doc-example-applied-filters', theme.className])}>\n        <Toolbar className={cx('terra-filter-pills-doc-example-applied-filters-toolbar')}>\n          <div className={cx('toolbar-flex-container')}>\n            <div className={cx('toolbar-flex-item-start')}>\n              <Text\n                id={appliedFiltersLabelId}\n                className={cx('applied-filters-label')}\n              >\n                {appliedFiltersLabel}\n              </Text>\n            </div>\n            <div className={cx('toolbar-flex-item-fill')}>\n              <FilterPills\n                ariaLabel={appliedFiltersLabel}\n                ariaLabelledBy={appliedFiltersLabelId}\n                isCollapsible\n                onRemove={handleOnRemove}\n              >\n                {pills.map((pill, index) => (\n                  <Pill\n                    label={pill.label}\n                    labelCategory={pill.labelCategory}\n                    id={pill.id}\n                    key={pill.id}\n                    metaData={{ index }}\n                  />\n                ))}\n              </FilterPills>\n            </div>\n            <div className={cx('toolbar-flex-item-end')}>\n              <Button\n                text=\"Clear All Filters\"\n                aria-label=\"Clear All Applied Filters\"\n                variant=\"de-emphasis\"\n                onClick={() => setPills([])}\n              />\n            </div>\n          </div>\n        </Toolbar>\n        <div className={cx('applied-filters-content-panel')}>\n          <Placeholder title=\"Filtered Content Goes Here\" />\n        </div>\n      </div>\n      <DocsButton\n        aria-disabled={isResetButtonDisabled}\n        className={cx(['terra-docs-example-reset-button', { 'is-disabled': isResetButtonDisabled }, theme.className])}\n        disabled={isResetButtonDisabled}\n        onClick={() => setPills(pillsData)}\n      >\n        Reset Example\n      </DocsButton>\n    </>\n  );\n};\n\nAppliedFiltersExample.contextType = ThemeContext;\n\nexport default AppliedFiltersExample;\n\n")))}u.isMDXComponent=!0;var x=t(49271),f=["components"],b={};function h(e){var l=e.components,t=(0,n.Z)(e,f);return(0,i.mdx)("wrapper",(0,a.Z)({},b,t,{components:l,mdxType:"MDXLayout"}),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-scss"},"// Themes\n@import '../../../theme/clinical-lowlight-theme/FilterPills.module';\n@import '../../../theme/orion-fusion-theme/FilterPills.module';\n\n:local {\n  // Terra Docs Example Reset Button\n  .terra-docs-example-reset-button {\n    margin-bottom: var(--terra-framework-docs-example-reset-button-margin-bottom, -2.42857rem);\n    margin-top: 1.42857rem;\n    position: relative;\n\n    &.is-disabled {\n      cursor: default;\n      opacity: 0.3;\n      pointer-events: none;\n    }\n  }\n\n  // Applied Filters Toolbar Example\n  .terra-filter-pills-doc-example-applied-filters {\n    border: var(--terra-framework-docs-filter-pills-doc-example-applied-filters-border, 1px solid #d3d4d5);\n    margin: 0;\n    padding: 0;\n\n    .applied-filters-content-panel {\n      background-color: var(--terra-framework-docs-filter-pills-doc-example-applied-filters-content-panel-background-color, #f4f4f4);\n      margin: 0;\n      padding: var(--terra-framework-docs-filter-pills-doc-example-applied-filters-content-panel-padding, 0);\n    }\n\n    .applied-filters-label {\n      color: var(--terra-framework-docs-filter-pills-doc-example-applied-filters-label-color, #4d5153);\n      display: inline-block;\n      font-size: var(--terra-framework-docs-filter-pills-doc-example-applied-filters-label-font-size, 0.92857rem);\n      font-weight: var(--terra-framework-docs-filter-pills-doc-example-applied-filters-label-font-weight, 400);\n      vertical-align: top;\n    }\n  }\n  \n  .terra-filter-pills-doc-example-applied-filters-toolbar {\n    padding-bottom: var(--terra-framework-docs-filter-pills-doc-example-applied-filters-toolbar-padding-bottom, 0.42857rem);\n    padding-left: var(--terra-framework-docs-filter-pills-doc-example-applied-filters-toolbar-padding-left, 0.71429rem);\n    padding-right: var(--terra-framework-docs-filter-pills-doc-example-applied-filters-toolbar-padding-right, 0.35714rem);\n    padding-top: var(--terra-framework-docs-filter-pills-doc-example-applied-filters-toolbar-padding-top, 0.42857rem);\n\n    > [class*='Toolbar-module__item___'] {\n      display: block;\n      margin: 0;\n      padding: 0;\n      width: 100%;\n    }\n\n    .toolbar-flex-container {\n      display: flex;\n      margin: 0;\n      min-width: 100%;\n      padding: 0;\n      width: 100%;\n    }\n\n    .toolbar-flex-item-start,\n    .toolbar-flex-item-fill,\n    .toolbar-flex-item-end {\n      margin: 0;\n      padding: 0;\n    }\n\n    .toolbar-flex-item-start {\n      flex: 0 0 auto;\n      margin-right: var(--terra-framework-docs-filter-pills-doc-example-applied-filters-flex-item-start-margin-right, 0.57143rem);\n      padding-top: var(--terra-framework-docs-filter-pills-doc-example-applied-filters-flex-item-start-padding-top, 0.5rem);\n      vertical-align: top;\n    }\n\n    .toolbar-flex-item-fill {\n      flex: 1 1 auto;\n      min-width: 3rem;\n      vertical-align: top;\n    }\n\n    .toolbar-flex-item-end {\n      flex: 0 0 auto;\n      margin-left: var(--terra-framework-docs-filter-pills-doc-example-applied-filters-flex-item-end-margin-left, 0);\n      padding-top: var(--terra-framework-docs-filter-pills-doc-example-applied-filters-flex-item-end-padding-top, 0.10714rem);\n      vertical-align: top;\n    }\n  }\n\n\n\n  // Truncated Label Example\n  .terra-filter-pills-doc-example-truncated-label-container {\n    background-color: var(--terra-framework-docs-filter-pills-doc-example-truncated-label-container-background-color, #f4f4f4);\n    border: var(--terra-framework-docs-filter-pills-doc-example-truncated-label-container-border, 2px dashed #d1d1d1);\n    border-bottom: 0 none;\n    border-top: 0 none;\n    box-sizing: content-box;\n    max-width: 20rem;\n    min-height: var(--terra-framework-docs-filter-pills-doc-example-truncated-label-container-min-height, 2.28571rem);\n    padding: var(--terra-framework-docs-filter-pills-doc-example-truncated-label-container-padding, 0.71428rem 0.21428rem 0.71428rem 0.21428rem);\n    width: 100%;\n  }\n\n  // Search Terms Example (has Visible Label)\n  .terra-filter-pills-doc-example-search-terms {\n    background-color: var(--terra-framework-docs-filter-pills-doc-example-search-terms-background-color, #ecf3ff);\n    box-sizing: border-box;\n    min-height: var(--terra-framework-docs-filter-pills-doc-example-search-terms-min-height, 7.5rem);\n    padding: var(--terra-framework-docs-filter-pills-doc-example-search-terms-padding, 0.71428rem 0.85714rem);\n\n    .search-terms-label {\n      color: var(--terra-framework-docs-filter-pills-doc-example-search-terms-label-color, #1a2f4b);\n      display: block;\n      font-size: var(--terra-framework-docs-filter-pills-doc-example-search-terms-label-font-size, 1.07142rem);\n      font-weight: var(--terra-framework-docs-filter-pills-doc-example-search-terms-label-font-weight, 500);\n      padding-bottom: var(--terra-framework-docs-filter-pills-doc-example-search-terms-label-padding-bottom, 0.21428rem);\n      padding-left: var(--terra-framework-docs-filter-pills-doc-example-search-terms-label-padding-left, 0.14285rem);\n    }\n  }\n} \n\n")))}h.isMDXComponent=!0;var y=function(e){var l=e.title,t=e.description,a=e.isExpanded;return r.createElement(x.Z,{title:l||"Applied Filters Example",description:t,example:r.createElement(m.Z,null),exampleCssSrc:r.createElement(h,null),exampleSrc:r.createElement(u,null),isExpanded:a})},g=t(26561),v=["components"],C={};function w(e){var l=e.components,t=(0,n.Z)(e,v);return(0,i.mdx)("wrapper",(0,a.Z)({},C,t,{components:l,mdxType:"MDXLayout"}),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-jsx"},"import React, { useState } from 'react';\nimport classNamesBind from 'classnames/bind';\nimport { Button as DocsButton } from '@cerner/terra-docs';\nimport FilterPills, { Pill } from '@cerner/terra-pills';\nimport ThemeContext from 'terra-theme-context';\nimport styles from './FilterPillsCommon.module.scss';\n\nconst cx = classNamesBind.bind(styles);\n\nconst BasicLabelExample = () => {\n  const theme = React.useContext(ThemeContext);\n\n  const pillsData = [\n    {\n      label: 'Asthma',\n      id: 'terra-filter-pills-asthma',\n    },\n    {\n      label: 'Bronchitis',\n      id: 'terra-filter-pills-bronchitis',\n    },\n    {\n      label: 'Fibro',\n      id: 'terra-filter-pills-fibro',\n    },\n  ];\n  const [pills, setPills] = useState(pillsData);\n  const isResetButtonDisabled = (pills.length === pillsData.length);\n\n  const handleOnRemove = (id, metaData) => {\n    const pillsArray = pills;\n    pillsArray.splice(metaData.index, 1);\n    setPills([...pillsArray]);\n  };\n\n  return (\n    <>\n      <FilterPills\n        ariaLabel=\"Demonstration example of Filter Pills with basic labels\"\n        onRemove={handleOnRemove}\n      >\n        {pills.map((pill, index) => (\n          <Pill\n            label={pill.label}\n            labelCategory={pill.labelCategory}\n            id={pill.id}\n            key={pill.id}\n            metaData={{ index }}\n          />\n        ))}\n      </FilterPills>\n      <DocsButton\n        aria-disabled={isResetButtonDisabled}\n        className={cx(['terra-docs-example-reset-button', { 'is-disabled': isResetButtonDisabled }, theme.className])}\n        disabled={isResetButtonDisabled}\n        onClick={() => setPills(pillsData)}\n      >\n        Reset Example\n      </DocsButton>\n    </>\n  );\n};\n\nBasicLabelExample.contextType = ThemeContext;\n\nexport default BasicLabelExample;\n\n")))}w.isMDXComponent=!0;var N=function(e){var l=e.title,t=e.description,a=e.isExpanded;return r.createElement(x.Z,{title:l||"Basic Label Example",description:t,example:r.createElement(g.Z,null),exampleCssSrc:r.createElement(h,null),exampleSrc:r.createElement(w,null),isExpanded:a})},T=t(64964),P=["components"],D={};function _(e){var l=e.components,t=(0,n.Z)(e,P);return(0,i.mdx)("wrapper",(0,a.Z)({},D,t,{components:l,mdxType:"MDXLayout"}),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-jsx"},"import React, { useState } from 'react';\nimport classNamesBind from 'classnames/bind';\nimport { Button as DocsButton } from '@cerner/terra-docs';\nimport FilterPills, { Pill } from '@cerner/terra-pills';\nimport ThemeContext from 'terra-theme-context';\nimport styles from './FilterPillsCommon.module.scss';\n\nconst cx = classNamesBind.bind(styles);\n\nconst CategoryLabelExample = () => {\n  const theme = React.useContext(ThemeContext);\n\n  const pillsData = [\n    {\n      label: 'Asthma',\n      labelCategory: 'Respiratory',\n      id: 'terra-filter-pills-respiratory-asthma',\n    },\n    {\n      label: 'Bronchitis',\n      labelCategory: 'Respiratory',\n      id: 'terra-filter-pills-respiratory-bronchitis',\n    },\n    {\n      label: 'Fibro',\n      labelCategory: 'Respiratory',\n      id: 'terra-filter-pills-respiratory-fibro',\n    },\n  ];\n  const [pills, setPills] = useState(pillsData);\n  const isResetButtonDisabled = (pills.length === pillsData.length);\n\n  const handleOnRemove = (id, metaData) => {\n    const pillsArray = pills;\n    pillsArray.splice(metaData.index, 1);\n    setPills([...pillsArray]);\n  };\n\n  return (\n    <>\n      <FilterPills\n        ariaLabel=\"Demonstration example of Filter Pills with category labels\"\n        onRemove={handleOnRemove}\n      >\n        {pills.map((pill, index) => (\n          <Pill\n            label={pill.label}\n            labelCategory={pill.labelCategory}\n            id={pill.id}\n            key={pill.id}\n            metaData={{ index }}\n          />\n        ))}\n      </FilterPills>\n      <DocsButton\n        aria-disabled={isResetButtonDisabled}\n        className={cx(['terra-docs-example-reset-button', { 'is-disabled': isResetButtonDisabled }, theme.className])}\n        disabled={isResetButtonDisabled}\n        onClick={() => setPills(pillsData)}\n      >\n        Reset Example\n      </DocsButton>\n    </>\n  );\n};\n\nCategoryLabelExample.contextType = ThemeContext;\n\nexport default CategoryLabelExample;\n\n")))}_.isMDXComponent=!0;var k=function(e){var l=e.title,t=e.description,a=e.isExpanded;return r.createElement(x.Z,{title:l||"Category Label Example",description:t,example:r.createElement(T.Z,null),exampleCssSrc:r.createElement(h,null),exampleSrc:r.createElement(_,null),isExpanded:a})},R=t(68157),E=["components"],F={};function L(e){var l=e.components,t=(0,n.Z)(e,E);return(0,i.mdx)("wrapper",(0,a.Z)({},F,t,{components:l,mdxType:"MDXLayout"}),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-jsx"},"import React, { useState } from 'react';\nimport classNamesBind from 'classnames/bind';\nimport { Button as DocsButton } from '@cerner/terra-docs';\nimport FilterPills, { Pill } from '@cerner/terra-pills';\nimport ThemeContext from 'terra-theme-context';\nimport styles from './FilterPillsCommon.module.scss';\n\nconst cx = classNamesBind.bind(styles);\n\nconst FilterPillsWithLongLabel = () => {\n  const theme = React.useContext(ThemeContext);\n\n  const pillsData = [\n    {\n      label: 'Chronic Obstructive Pulmonary Disease (COPD)',\n      labelCategory: 'Respiratory',\n      id: 'terra-filter-pills-respiratory-copd',\n    },\n  ];\n  const [pills, setPills] = useState(pillsData);\n  const isResetButtonDisabled = (pills.length === pillsData.length);\n\n  const handleOnRemove = (id, metaData) => {\n    const pillsArray = pills;\n    pillsArray.splice(metaData.index, 1);\n    setPills([...pillsArray]);\n  };\n\n  return (\n    <>\n      <div className={cx(['terra-filter-pills-doc-example-truncated-label-container', theme.className])}>\n        <FilterPills\n          ariaLabel=\"Demonstration example of a Filter Pill with a long label\"\n          onRemove={handleOnRemove}\n        >\n          {pills.map((pill, index) => (\n            <Pill\n              label={pill.label}\n              labelCategory={pill.labelCategory}\n              id={pill.id}\n              key={pill.id}\n              metaData={{ index }}\n            />\n          ))}\n        </FilterPills>\n      </div>\n      <DocsButton\n        aria-disabled={isResetButtonDisabled}\n        className={cx(['terra-docs-example-reset-button', { 'is-disabled': isResetButtonDisabled }, theme.className])}\n        disabled={isResetButtonDisabled}\n        onClick={() => setPills(pillsData)}\n      >\n        Reset Example\n      </DocsButton>\n    </>\n  );\n};\n\nFilterPillsWithLongLabel.contextType = ThemeContext;\n\nexport default FilterPillsWithLongLabel;\n\n")))}L.isMDXComponent=!0;var B=function(e){var l=e.title,t=e.description,a=e.isExpanded;return r.createElement(x.Z,{title:l||"Truncated Label Example",description:t,example:r.createElement(R.Z,null),exampleCssSrc:r.createElement(h,null),exampleSrc:r.createElement(L,null),isExpanded:a})},O=t(15495),S=["components"],W={};function j(e){var l=e.components,t=(0,n.Z)(e,S);return(0,i.mdx)("wrapper",(0,a.Z)({},W,t,{components:l,mdxType:"MDXLayout"}),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-jsx"},"import React, { useState } from 'react';\nimport classNamesBind from 'classnames/bind';\nimport { Button as DocsButton } from '@cerner/terra-docs';\nimport FilterPills, { Pill } from '@cerner/terra-pills';\nimport Text from 'terra-text';\nimport ThemeContext from 'terra-theme-context';\nimport styles from './FilterPillsCommon.module.scss';\n\nconst cx = classNamesBind.bind(styles);\n\nconst VisibleLabelExample = () => {\n  const theme = React.useContext(ThemeContext);\n\n  const pillsData = [\n    {\n      label: 'Asthma',\n      labelCategory: 'Respiratory',\n      id: 'terra-filter-pills-respiratory-asthma',\n    },\n    {\n      label: 'Bronchitis',\n      labelCategory: 'Respiratory',\n      id: 'terra-filter-pills-respiratory-bronchitis',\n    },\n    {\n      label: 'Fibro',\n      labelCategory: 'Respiratory',\n      id: 'terra-filter-pills-respiratory-fibro',\n    },\n  ];\n  const [pills, setPills] = useState(pillsData);\n  const isResetButtonDisabled = (pills.length === pillsData.length);\n\n  const handleOnRemove = (id, metaData) => {\n    const pillsArray = pills;\n    pillsArray.splice(metaData.index, 1);\n    setPills([...pillsArray]);\n  };\n\n  const patientEducationSearchTermsLabel = 'Patient Education Search Terms:';\n  const patientEducationSearchTermsLabelId = 'terra-filter-pills-example-patient-education-search-terms-label';\n\n  return (\n    <>\n      <div className={cx(['terra-filter-pills-doc-example-search-terms', theme.className])}>\n        <Text\n          id={patientEducationSearchTermsLabelId}\n          className={cx('search-terms-label')}\n        >\n          {patientEducationSearchTermsLabel}\n        </Text>\n        <FilterPills\n          ariaLabelledBy={patientEducationSearchTermsLabelId}\n          ariaLabel={patientEducationSearchTermsLabel}\n          onRemove={handleOnRemove}\n        >\n          {pills.map((pill, index) => (\n            <Pill\n              label={pill.label}\n              labelCategory={pill.labelCategory}\n              id={pill.id}\n              key={pill.id}\n              metaData={{ index }}\n            />\n          ))}\n        </FilterPills>\n      </div>\n      <DocsButton\n        aria-disabled={isResetButtonDisabled}\n        className={cx(['terra-docs-example-reset-button', { 'is-disabled': isResetButtonDisabled }, theme.className])}\n        disabled={isResetButtonDisabled}\n        onClick={() => setPills(pillsData)}\n      >\n        Reset Example\n      </DocsButton>\n    </>\n  );\n};\n\nVisibleLabelExample.contextType = ThemeContext;\n\nexport default VisibleLabelExample;\n\n")))}j.isMDXComponent=!0;var A=function(e){var l=e.title,t=e.description,a=e.isExpanded;return r.createElement(x.Z,{title:l||"Visible Label Example",description:t,example:r.createElement(O.Z,null),exampleCssSrc:r.createElement(h,null),exampleSrc:r.createElement(j,null),isExpanded:a})},Z=t(78530),M=["components"],q={},X="wrapper";function I(e){var l=e.components,t=(0,n.Z)(e,M);return(0,i.mdx)(X,(0,a.Z)({},q,t,{components:l,mdxType:"MDXLayout"}),(0,i.mdx)(Z.ZP,{mdxType:"PropsTable"},(0,i.mdx)(Z.X2,{key:"ROW1",mdxType:"Row"},(0,i.mdx)(Z.O,{mdxType:"PropNameCell"},"ariaLabel"),(0,i.mdx)(Z.Di,{mdxType:"TypeCell"},(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-javascript"},"string\n"))),(0,i.mdx)(Z.dS,{isRequired:!0,mdxType:"RequiredCell"}),(0,i.mdx)(Z.mW,{mdxType:"DefaultValueCell"},(0,i.mdx)("p",null,"none")),(0,i.mdx)(Z.Ex,{mdxType:"DescriptionCell"},(0,i.mdx)("p",null,"The string that labels the collection of pills, used in cases where the text label is not visible on\nthe screen and required for minimum accessibility standards. Providing this prop adds the ",(0,i.mdx)("inlineCode",{parentName:"p"},"aria-label"),"\nattribute to the Pill List container element. (Required)"))),(0,i.mdx)(Z.X2,{key:"ROW2",mdxType:"Row"},(0,i.mdx)(Z.O,{mdxType:"PropNameCell"},"ariaLabelledBy"),(0,i.mdx)(Z.Di,{mdxType:"TypeCell"},(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-javascript"},"string\n"))),(0,i.mdx)(Z.dS,{isRequired:!1,mdxType:"RequiredCell"}),(0,i.mdx)(Z.mW,{mdxType:"DefaultValueCell"},(0,i.mdx)("p",null,"none")),(0,i.mdx)(Z.Ex,{mdxType:"DescriptionCell"},(0,i.mdx)("p",null,"If a visible text label is used with the collection of pills, provide a string of the ID for the html\nelement containing the visible text label. Supplying the 'ariaLabelledBy' prop will override the 'ariaLabel'\nprop and adds the ",(0,i.mdx)("inlineCode",{parentName:"p"},"aria-labelledby")," attribute instead to the Pill List container element."),(0,i.mdx)("p",null,(0,i.mdx)("img",{parentName:"p",src:"https://badgen.net/badge/UX/Accessibility/blue",alt:"IMPORTANT"})," For best practices, ensure the visible text\nin the html element ",(0,i.mdx)("inlineCode",{parentName:"p"},"id")," provided to the Pill List ",(0,i.mdx)("inlineCode",{parentName:"p"},"ariaLabelledby")," prop matches the text provided to the\n",(0,i.mdx)("inlineCode",{parentName:"p"},"ariaLabel")," prop, for consistency in the case of fallback or errors."))),(0,i.mdx)(Z.X2,{key:"ROW3",mdxType:"Row"},(0,i.mdx)(Z.O,{mdxType:"PropNameCell"},"ariaDescribedBy"),(0,i.mdx)(Z.Di,{mdxType:"TypeCell"},(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-javascript"},"string\n"))),(0,i.mdx)(Z.dS,{isRequired:!1,mdxType:"RequiredCell"}),(0,i.mdx)(Z.mW,{mdxType:"DefaultValueCell"},(0,i.mdx)("p",null,"none")),(0,i.mdx)(Z.Ex,{mdxType:"DescriptionCell"},(0,i.mdx)("p",null,"If additional visible information text is used, provide a string containing the IDs for html elements that\nhelp describe the intent of the group of pills."))),(0,i.mdx)(Z.X2,{key:"ROW4",mdxType:"Row"},(0,i.mdx)(Z.O,{mdxType:"PropNameCell"},"isCollapsible"),(0,i.mdx)(Z.Di,{mdxType:"TypeCell"},(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-javascript"},"bool\n"))),(0,i.mdx)(Z.dS,{isRequired:!1,mdxType:"RequiredCell"}),(0,i.mdx)(Z.mW,{mdxType:"DefaultValueCell"},(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-javascript"},"false\n"))),(0,i.mdx)(Z.Ex,{mdxType:"DescriptionCell"},(0,i.mdx)("p",null,"Indicates if the Pills container is rolled up or not."))),(0,i.mdx)(Z.X2,{key:"ROW5",mdxType:"Row"},(0,i.mdx)(Z.O,{mdxType:"PropNameCell"},"onRemove"),(0,i.mdx)(Z.Di,{mdxType:"TypeCell"},(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-javascript"},"func\n"))),(0,i.mdx)(Z.dS,{isRequired:!1,mdxType:"RequiredCell"}),(0,i.mdx)(Z.mW,{mdxType:"DefaultValueCell"},(0,i.mdx)("p",null,"none")),(0,i.mdx)(Z.Ex,{mdxType:"DescriptionCell"},(0,i.mdx)("p",null,"Callback function to remove a pill, returns 'id' and 'metadata'.")))))}I.isMDXComponent=!0;var V=["components"],U={},z="wrapper";function H(e){var l=e.components,t=(0,n.Z)(e,V);return(0,i.mdx)(z,(0,a.Z)({},U,t,{components:l,mdxType:"MDXLayout"}),(0,i.mdx)(Z.ZP,{mdxType:"PropsTable"},(0,i.mdx)(Z.X2,{key:"ROW1",mdxType:"Row"},(0,i.mdx)(Z.O,{mdxType:"PropNameCell"},"id"),(0,i.mdx)(Z.Di,{mdxType:"TypeCell"},(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-javascript"},"string\n"))),(0,i.mdx)(Z.dS,{isRequired:!0,mdxType:"RequiredCell"}),(0,i.mdx)(Z.mW,{mdxType:"DefaultValueCell"},(0,i.mdx)("p",null,"none")),(0,i.mdx)(Z.Ex,{mdxType:"DescriptionCell"},(0,i.mdx)("p",null,"The html 'id' attribute for the pill, needed for proper keyboard interactions. (Required & must be unique)."))),(0,i.mdx)(Z.X2,{key:"ROW2",mdxType:"Row"},(0,i.mdx)(Z.O,{mdxType:"PropNameCell"},"label"),(0,i.mdx)(Z.Di,{mdxType:"TypeCell"},(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-javascript"},"string\n"))),(0,i.mdx)(Z.dS,{isRequired:!0,mdxType:"RequiredCell"}),(0,i.mdx)(Z.mW,{mdxType:"DefaultValueCell"},(0,i.mdx)("p",null,"none")),(0,i.mdx)(Z.Ex,{mdxType:"DescriptionCell"},(0,i.mdx)("p",null,"The label text for the pill. (Required)."))),(0,i.mdx)(Z.X2,{key:"ROW3",mdxType:"Row"},(0,i.mdx)(Z.O,{mdxType:"PropNameCell"},"labelCategory"),(0,i.mdx)(Z.Di,{mdxType:"TypeCell"},(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-javascript"},"string\n"))),(0,i.mdx)(Z.dS,{isRequired:!1,mdxType:"RequiredCell"}),(0,i.mdx)(Z.mW,{mdxType:"DefaultValueCell"},(0,i.mdx)("p",null,"none")),(0,i.mdx)(Z.Ex,{mdxType:"DescriptionCell"},(0,i.mdx)("p",null,"Secondary label text for the pill that displays a filter category."))),(0,i.mdx)(Z.X2,{key:"ROW4",mdxType:"Row"},(0,i.mdx)(Z.O,{mdxType:"PropNameCell"},"metaData"),(0,i.mdx)(Z.Di,{mdxType:"TypeCell"},(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-javascript"},"object\n"))),(0,i.mdx)(Z.dS,{isRequired:!1,mdxType:"RequiredCell"}),(0,i.mdx)(Z.mW,{mdxType:"DefaultValueCell"},(0,i.mdx)("p",null,"none")),(0,i.mdx)(Z.Ex,{mdxType:"DescriptionCell"},(0,i.mdx)("p",null,"The associated metaData to be returned in the onRemove callback."))),(0,i.mdx)(Z.X2,{key:"ROW5",mdxType:"Row"},(0,i.mdx)(Z.O,{mdxType:"PropNameCell"},"onRemove"),(0,i.mdx)(Z.Di,{mdxType:"TypeCell"},(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-javascript"},"func\n"))),(0,i.mdx)(Z.dS,{isRequired:!1,mdxType:"RequiredCell"}),(0,i.mdx)(Z.mW,{mdxType:"DefaultValueCell"},(0,i.mdx)("p",null,"none")),(0,i.mdx)(Z.Ex,{mdxType:"DescriptionCell"},(0,i.mdx)("p",null,"A callback function to execute when the pill is removed. Returns id, metadata.")))))}H.isMDXComponent=!0;var G=["components"],K={},J="wrapper";function Q(e){var l=e.components,t=(0,n.Z)(e,G);return(0,i.mdx)(J,(0,a.Z)({},K,t,{components:l,mdxType:"MDXLayout"}),(0,i.mdx)(o.C,{mdxType:"Badge"}),(0,i.mdx)("h1",{id:"terra-filter-pills"},"Terra Filter Pills"),(0,i.mdx)("p",null,"Pills are generally used to assign a label or keyword to user interface (UI) objects, defining a non-hierarchical group. They are used to visually label UI objects for quick recognition. These labels can be generated either by the system or users entering data."),(0,i.mdx)("p",null,"When using a filter workflow, which removes items from a view that do not satisfy specific criteria, Filter Pills can provide indication as to which facet categories and attributes the user can narrow the content by, helping to further divide content in order to assist users in refining large results."),(0,i.mdx)("h2",{id:"what-the-component-is"},"What the component is"),(0,i.mdx)("p",null,"Filter Pills are comprised of the following:"),(0,i.mdx)("ul",null,(0,i.mdx)("li",{parentName:"ul"},"Label ",(0,i.mdx)("em",{parentName:"li"},"(clickable if truncated to disclose the full label)")),(0,i.mdx)("li",{parentName:"ul"},"An optional category to help describe the label"),(0,i.mdx)("li",{parentName:"ul"},"An interactive button to remove the filter")),(0,i.mdx)("h2",{id:"what-the-component-is-not"},"What the component is not"),(0,i.mdx)("ul",null,(0,i.mdx)("li",{parentName:"ul"},"Although similar, pills and tags have their own use cases and best practices for when they should be used within the UI. See ",(0,i.mdx)("a",{parentName:"li",href:"https://engineering.cerner.com/terra-ui/components/terra-tag/tag/tag"},"tags")," for more information."),(0,i.mdx)("li",{parentName:"ul"},"Although the filtering workflow may narrow down content to drive the user's workflow, it should not be used in the place of primary or secondary navigation.")),(0,i.mdx)("h2",{id:"getting-started"},"Getting Started"),(0,i.mdx)("ul",null,(0,i.mdx)("li",{parentName:"ul"},"Install with ",(0,i.mdx)("a",{parentName:"li",href:"https://www.npmjs.com/"},"npmjs"),":",(0,i.mdx)("ul",{parentName:"li"},(0,i.mdx)("li",{parentName:"ul"},(0,i.mdx)("inlineCode",{parentName:"li"},"npm install terra-pills"))))),(0,i.mdx)("h2",{id:"peer-dependencies"},"Peer Dependencies"),(0,i.mdx)("p",null,"This component requires the following peer dependencies be installed in your app for the component to properly function."),(0,i.mdx)("table",null,(0,i.mdx)("thead",{parentName:"table"},(0,i.mdx)("tr",{parentName:"thead"},(0,i.mdx)("th",{parentName:"tr",align:null},"Peer Dependency"),(0,i.mdx)("th",{parentName:"tr",align:null},"Version"))),(0,i.mdx)("tbody",{parentName:"table"},(0,i.mdx)("tr",{parentName:"tbody"},(0,i.mdx)("td",{parentName:"tr",align:null},"react"),(0,i.mdx)("td",{parentName:"tr",align:null},"^16.8.5")),(0,i.mdx)("tr",{parentName:"tbody"},(0,i.mdx)("td",{parentName:"tr",align:null},"react-dom"),(0,i.mdx)("td",{parentName:"tr",align:null},"^16.8.5")),(0,i.mdx)("tr",{parentName:"tbody"},(0,i.mdx)("td",{parentName:"tr",align:null},"react-intl"),(0,i.mdx)("td",{parentName:"tr",align:null},">=2.8.0 <6.0.0")))),(0,i.mdx)("h2",{id:"usage"},"Usage"),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-jsx"},"import FilterPills, { Pill } from '@cerner/terra-pills';\n")),(0,i.mdx)("h2",{id:"component-features"},"Component Features"),(0,i.mdx)("ul",null,(0,i.mdx)("li",{parentName:"ul"},(0,i.mdx)("a",{parentName:"li",href:"https://engineering.cerner.com/terra-ui/about/terra-ui/component-standards#cross-browser-support"},"Cross-Browser Support")),(0,i.mdx)("li",{parentName:"ul"},(0,i.mdx)("a",{parentName:"li",href:"https://engineering.cerner.com/terra-ui/about/terra-ui/component-standards#responsive-support"},"Responsive Support")),(0,i.mdx)("li",{parentName:"ul"},(0,i.mdx)("a",{parentName:"li",href:"https://engineering.cerner.com/terra-ui/about/terra-ui/component-standards#mobile-support"},"Mobile Support"))),(0,i.mdx)(d.Z,{newline:5,mdxType:"Whitespace"}),(0,i.mdx)("h2",{id:"introduction"},"Introduction:"),(0,i.mdx)("p",null,"Filter Pills can be added to a variety of situations and compositions when it is necessary to display the selected facets being applied to a filtered layout. They can be constructed into in various higher-order component patterns like an ",(0,i.mdx)("strong",{parentName:"p"},"Applied Filters")," toolbar, and similar locations that the applied category labels are removable by the user. They also have the ability to flex layouts between an expanded state showing all filter pills, and a collapsed state showing just a single line and roll-up toggle to show and hide the additional filter pills."),(0,i.mdx)(y,{title:"Introduction to Filter Pills: Applied Filters Toolbar",mdxType:"AppliedFiltersExample"}),(0,i.mdx)(d.Z,{newline:3,mdxType:"Whitespace"}),(0,i.mdx)("h2",{id:"how-to-construct"},"How To Construct:"),(0,i.mdx)("h3",{id:"filter-pill-with-a-basic-label"},"Filter Pill with a basic Label"),(0,i.mdx)("p",null,"Filter Pills in their standard form display a single keyword or short phrase as their label. They are also removable, which makes them interactive with the clickable remove (\"X\") button, as well as by interactive by keyboard, able to be removed by pressing the 'delete' or 'backspace' key when they are in focus."),(0,i.mdx)(N,{title:"Basic Label",mdxType:"BasicLabelExample"}),(0,i.mdx)(d.Z,{mdxType:"Whitespace"}),(0,i.mdx)("h3",{id:"adding-an-optional-category-to-the-label"},"Adding an optional Category to the Label"),(0,i.mdx)("p",null,"Additional category terms can be added to the single keyword or short phrase label to provide additional clarity in situations where the same keyword label may appear twice (but apply to different groupings), or is needed to help indicate to a user the category groupings the labels belong to."),(0,i.mdx)(k,{title:"Adding a Label Category",mdxType:"CategoryLabelExample"}),(0,i.mdx)(d.Z,{mdxType:"Whitespace"}),(0,i.mdx)("h3",{id:"long-labels--truncation-a-popup-is-added"},"Long Labels & Truncation: A Popup is Added"),(0,i.mdx)("p",null,"In cases where the width of the space is constrained and the text label for the Filter Pill is unable to fully display, a popup will automatically be added, the label will become an interactive target. Clicking the label will disclose the full Filter Pill text label (and category if applied) as the contents. No additional content can be added to the popup."),(0,i.mdx)(B,{title:"Selectable Label when Truncated",mdxType:"TruncatedLabelExample"}),(0,i.mdx)(d.Z,{newline:3,mdxType:"Whitespace"}),(0,i.mdx)("h2",{id:"usage-considerations"},"Usage Considerations:"),(0,i.mdx)("h3",{id:"adding-a-visible-label"},"Adding a Visible Label"),(0,i.mdx)("p",null,"Filter Pills are commonly used in a group or list, which must include a label to indicate the intent or purpose of the contents of the list. Accordingly, the filter pills component requires the ",(0,i.mdx)("inlineCode",{parentName:"p"},"ariaLabel")," prop for accessibility minimum standards, to give a screen reader user the proper context of the list, but it is not visible to users."),(0,i.mdx)(s.Notice,{variant:"ux-recommendation",ariaLevel:"3",mdxType:"Notice"},(0,i.mdx)("p",null,"As a best practice, the Filter Pills component should be accompanied by a visible label, which may need to be styled and positioned according to a specific usage and should be done so by each consumer. Use the ",(0,i.mdx)("inlineCode",{parentName:"p"},"ariaLabelledBy")," prop in Filter Pills, and provide it the 'id' of the visible label or heading, which will allow for the visible text to be accessibly connected to the pills. Read more details about the construction method in the ",(0,i.mdx)("a",{parentName:"p",href:"/terra-framework/pull/1843/components/cerner-terra-framework-docs/pills/accessibility-guide"},"Accessibility Guide")," and the example below.")),(0,i.mdx)("p",null,"Note: ",(0,i.mdx)("em",{parentName:"p"},"The visible label referenced by the ",(0,i.mdx)("inlineCode",{parentName:"em"},"ariaLabelledBy")," prop and the ",(0,i.mdx)("inlineCode",{parentName:"em"},"ariaLabel")," prop should be set to the same string values for fallback protection, even though when done properly ",(0,i.mdx)("inlineCode",{parentName:"em"},"ariaLabelledBy")," should override ",(0,i.mdx)("inlineCode",{parentName:"em"},"ariaLabel")," and the 'aria-labelledby' property will replace the 'aria-label' property in the compiled markup.")),(0,i.mdx)(A,{title:"Adding a Styled Label or Heading",mdxType:"VisibleLabelExample"}),(0,i.mdx)(d.Z,{mdxType:"Whitespace"}),(0,i.mdx)("h3",{id:"incorrect-use"},"Incorrect Use"),(0,i.mdx)("p",null,"Terra Filter Pills contains a specific reusable subcomponent ",(0,i.mdx)("inlineCode",{parentName:"p"},"<Pill/>"),". However, the inner 'Pill' subcomponent is not intended to be used alone, or independently without being used properly as children of the ",(0,i.mdx)("inlineCode",{parentName:"p"},"<FilterPills/>")," parent container. If used as standalone, the ",(0,i.mdx)("inlineCode",{parentName:"p"},"<Pill/>")," offers ",(0,i.mdx)("a",{parentName:"p",href:"/terra-framework/pull/1843/components/cerner-terra-framework-docs/pills/accessibility-guide"},"no support for accessibility")," or correct behaviors."),(0,i.mdx)("p",null,"The ",(0,i.mdx)("inlineCode",{parentName:"p"},"<Pill/>")," subcomponent was created and tested with the express intent of always being used as children of the ",(0,i.mdx)("inlineCode",{parentName:"p"},"<FilterPills/>")," component."),(0,i.mdx)(s.Notice,{variant:"not-supported",ariaLevel:"3",mdxType:"Notice"},(0,i.mdx)("p",null,"The example below shows an implementation with the intention of removing the parent ",(0,i.mdx)("inlineCode",{parentName:"p"},"<FilterPills/>")," component, such that only a single (or series) of the ",(0,i.mdx)("inlineCode",{parentName:"p"},"<Pill/>")," subcomponent remains:"),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-diff"},'    <div id="my-incorrect-usage-of-a-pill">\n-     <FilterPills\n-       ariaLabel="It is incorrect to remove the parent FilterPills"\n-     >\n        <Pill\n          label="Incorrect Use of Pill as standalone"\n          id={pill.id}\n          metaData={pill.metaData}\n          onRemove={handleOnRemove}\n        />\n-     </FilterPills>\n    </div>\n')),(0,i.mdx)("p",null,"Consumers should be aware to not intentionally create the above situation. ")),(0,i.mdx)(d.Z,{newline:5,mdxType:"Whitespace"}),(0,i.mdx)("h2",{id:"props-for-filter-pills"},"Props for Filter Pills"),(0,i.mdx)(I,{mdxType:"FilterPillsPropsTable"}),(0,i.mdx)("h2",{id:"props-for-pill-subcomponent"},"Props for Pill subcomponent"),(0,i.mdx)(H,{mdxType:"PillsPropsTable"}),(0,i.mdx)("h2",{id:"testing"},"Testing"),(0,i.mdx)("p",null,"Pills uses ",(0,i.mdx)("inlineCode",{parentName:"p"},"uuid")," which changes the component's description id dynamically. To mock the return value with the Jest testing library, ",(0,i.mdx)("inlineCode",{parentName:"p"},"jest.spyOn")," can be used."),(0,i.mdx)("p",null,"If Enzyme ",(0,i.mdx)("inlineCode",{parentName:"p"},"shallow")," rendering is being used for the tests then the mock may not be required. However, if ",(0,i.mdx)("inlineCode",{parentName:"p"},"mount")," is used then ",(0,i.mdx)("inlineCode",{parentName:"p"},"uuid")," should be mocked as shown below:"),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-js"},"import { v4 as uuidv4 } from 'uuid';\n\nlet mockSpyUuid;\n\n// using a variable may result in failures. For best results, mock return value.\nbeforeAll(() => {\n  mockSpyUuid = jest.spyOn(uuidv4, 'v4').mockReturnValue('00000000-0000-0000-0000-000000000000');\n});\n\n// restore the mock\nafterAll(() => {\n  mockSpyUuid.mockRestore();\n});\n\n")))}Q.isMDXComponent=!0},67547:function(e,l,t){t.d(l,{C:function(){return r}});var a=t(67294),n=t(22863),r=function(e){var l=e.url;return a.createElement(n.Z,{src:"https://github.com/cerner/terra-framework/tree/main/packages/terra-pills",name:"@cerner/terra-pills",version:"1.14.0",url:l})}},86009:function(e,l,t){var a=t(64836);l.Z=void 0;var n=a(t(10434)),r=a(t(70215)),i=a(t(67294)),o=a(t(45697)),s=a(t(94184)),d=a(t(47166)),m=a(t(72061)),p=["newline"],c=d.default.bind(m.default),u={newline:o.default.oneOf([1,2,3,4,5,6,7,8])},x=function(e){var l=e.newline,t=(0,r.default)(e,p),a=(0,s.default)(c("whitespace","newline-".concat(l)),t.className);return i.default.createElement("div",(0,n.default)({},t,{className:a,"aria-hidden":"true"}))};x.propTypes=u,x.defaultProps={newline:1};l.Z=x},19594:function(e,l,t){var a=t(64836),n=t(18698);l.Z=void 0;var r=a(t(861)),i=a(t(27424)),o=h(t(67294)),s=a(t(47166)),d=t(34261),m=a(t(55281)),p=h(t(43128)),c=a(t(5071)),u=a(t(47341)),x=a(t(4959)),f=a(t(57841));function b(e){if("function"!=typeof WeakMap)return null;var l=new WeakMap,t=new WeakMap;return(b=function(e){return e?t:l})(e)}function h(e,l){if(!l&&e&&e.__esModule)return e;if(null===e||"object"!=n(e)&&"function"!=typeof e)return{default:e};var t=b(l);if(t&&t.has(e))return t.get(e);var a={__proto__:null},r=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var i in e)if("default"!==i&&Object.prototype.hasOwnProperty.call(e,i)){var o=r?Object.getOwnPropertyDescriptor(e,i):null;o&&(o.get||o.set)?Object.defineProperty(a,i,o):a[i]=e[i]}return a.default=e,t&&t.set(e,a),a}var y=s.default.bind(f.default),g=function(){for(var e=o.default.useContext(u.default),l=[],t=1;t<11;t+=1){var a={label:"Selection ".concat(t),labelCategory:"Category",id:"terra-filter-pills-category-selection-".concat(t)};l.push(a)}var n=(0,o.useState)(l),s=(0,i.default)(n,2),f=s[0],b=s[1],h=f.length===l.length,g="Applied Filters:",v="terra-filter-pills-example-applied-filters-label";return o.default.createElement(o.default.Fragment,null,o.default.createElement("div",{className:y(["terra-filter-pills-doc-example-applied-filters",e.className])},o.default.createElement(x.default,{className:y("terra-filter-pills-doc-example-applied-filters-toolbar")},o.default.createElement("div",{className:y("toolbar-flex-container")},o.default.createElement("div",{className:y("toolbar-flex-item-start")},o.default.createElement(c.default,{id:v,className:y("applied-filters-label")},g)),o.default.createElement("div",{className:y("toolbar-flex-item-fill")},o.default.createElement(p.default,{ariaLabel:g,ariaLabelledBy:v,isCollapsible:!0,onRemove:function(e,l){var t=f;t.splice(l.index,1),b((0,r.default)(t))}},f.map((function(e,l){return o.default.createElement(p.Pill,{label:e.label,labelCategory:e.labelCategory,id:e.id,key:e.id,metaData:{index:l}})})))),o.default.createElement("div",{className:y("toolbar-flex-item-end")},o.default.createElement(m.default,{text:"Clear All Filters","aria-label":"Clear All Applied Filters",variant:"de-emphasis",onClick:function(){return b([])}})))),o.default.createElement("div",{className:y("applied-filters-content-panel")},o.default.createElement(d.Placeholder,{title:"Filtered Content Goes Here"}))),o.default.createElement(d.Button,{"aria-disabled":h,className:y(["terra-docs-example-reset-button",{"is-disabled":h},e.className]),disabled:h,onClick:function(){return b(l)}},"Reset Example"))};g.contextType=u.default;l.Z=g},26561:function(e,l,t){var a=t(64836),n=t(18698);l.Z=void 0;var r=a(t(861)),i=a(t(27424)),o=x(t(67294)),s=a(t(47166)),d=t(34261),m=x(t(43128)),p=a(t(47341)),c=a(t(57841));function u(e){if("function"!=typeof WeakMap)return null;var l=new WeakMap,t=new WeakMap;return(u=function(e){return e?t:l})(e)}function x(e,l){if(!l&&e&&e.__esModule)return e;if(null===e||"object"!=n(e)&&"function"!=typeof e)return{default:e};var t=u(l);if(t&&t.has(e))return t.get(e);var a={__proto__:null},r=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var i in e)if("default"!==i&&Object.prototype.hasOwnProperty.call(e,i)){var o=r?Object.getOwnPropertyDescriptor(e,i):null;o&&(o.get||o.set)?Object.defineProperty(a,i,o):a[i]=e[i]}return a.default=e,t&&t.set(e,a),a}var f=s.default.bind(c.default),b=function(){var e=o.default.useContext(p.default),l=[{label:"Asthma",id:"terra-filter-pills-asthma"},{label:"Bronchitis",id:"terra-filter-pills-bronchitis"},{label:"Fibro",id:"terra-filter-pills-fibro"}],t=(0,o.useState)(l),a=(0,i.default)(t,2),n=a[0],s=a[1],c=n.length===l.length;return o.default.createElement(o.default.Fragment,null,o.default.createElement(m.default,{ariaLabel:"Demonstration example of Filter Pills with basic labels",onRemove:function(e,l){var t=n;t.splice(l.index,1),s((0,r.default)(t))}},n.map((function(e,l){return o.default.createElement(m.Pill,{label:e.label,labelCategory:e.labelCategory,id:e.id,key:e.id,metaData:{index:l}})}))),o.default.createElement(d.Button,{"aria-disabled":c,className:f(["terra-docs-example-reset-button",{"is-disabled":c},e.className]),disabled:c,onClick:function(){return s(l)}},"Reset Example"))};b.contextType=p.default;l.Z=b},64964:function(e,l,t){var a=t(64836),n=t(18698);l.Z=void 0;var r=a(t(861)),i=a(t(27424)),o=x(t(67294)),s=a(t(47166)),d=t(34261),m=x(t(43128)),p=a(t(47341)),c=a(t(57841));function u(e){if("function"!=typeof WeakMap)return null;var l=new WeakMap,t=new WeakMap;return(u=function(e){return e?t:l})(e)}function x(e,l){if(!l&&e&&e.__esModule)return e;if(null===e||"object"!=n(e)&&"function"!=typeof e)return{default:e};var t=u(l);if(t&&t.has(e))return t.get(e);var a={__proto__:null},r=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var i in e)if("default"!==i&&Object.prototype.hasOwnProperty.call(e,i)){var o=r?Object.getOwnPropertyDescriptor(e,i):null;o&&(o.get||o.set)?Object.defineProperty(a,i,o):a[i]=e[i]}return a.default=e,t&&t.set(e,a),a}var f=s.default.bind(c.default),b=function(){var e=o.default.useContext(p.default),l=[{label:"Asthma",labelCategory:"Respiratory",id:"terra-filter-pills-respiratory-asthma"},{label:"Bronchitis",labelCategory:"Respiratory",id:"terra-filter-pills-respiratory-bronchitis"},{label:"Fibro",labelCategory:"Respiratory",id:"terra-filter-pills-respiratory-fibro"}],t=(0,o.useState)(l),a=(0,i.default)(t,2),n=a[0],s=a[1],c=n.length===l.length;return o.default.createElement(o.default.Fragment,null,o.default.createElement(m.default,{ariaLabel:"Demonstration example of Filter Pills with category labels",onRemove:function(e,l){var t=n;t.splice(l.index,1),s((0,r.default)(t))}},n.map((function(e,l){return o.default.createElement(m.Pill,{label:e.label,labelCategory:e.labelCategory,id:e.id,key:e.id,metaData:{index:l}})}))),o.default.createElement(d.Button,{"aria-disabled":c,className:f(["terra-docs-example-reset-button",{"is-disabled":c},e.className]),disabled:c,onClick:function(){return s(l)}},"Reset Example"))};b.contextType=p.default;l.Z=b},68157:function(e,l,t){var a=t(64836),n=t(18698);l.Z=void 0;var r=a(t(861)),i=a(t(27424)),o=x(t(67294)),s=a(t(47166)),d=t(34261),m=x(t(43128)),p=a(t(47341)),c=a(t(57841));function u(e){if("function"!=typeof WeakMap)return null;var l=new WeakMap,t=new WeakMap;return(u=function(e){return e?t:l})(e)}function x(e,l){if(!l&&e&&e.__esModule)return e;if(null===e||"object"!=n(e)&&"function"!=typeof e)return{default:e};var t=u(l);if(t&&t.has(e))return t.get(e);var a={__proto__:null},r=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var i in e)if("default"!==i&&Object.prototype.hasOwnProperty.call(e,i)){var o=r?Object.getOwnPropertyDescriptor(e,i):null;o&&(o.get||o.set)?Object.defineProperty(a,i,o):a[i]=e[i]}return a.default=e,t&&t.set(e,a),a}var f=s.default.bind(c.default),b=function(){var e=o.default.useContext(p.default),l=[{label:"Chronic Obstructive Pulmonary Disease (COPD)",labelCategory:"Respiratory",id:"terra-filter-pills-respiratory-copd"}],t=(0,o.useState)(l),a=(0,i.default)(t,2),n=a[0],s=a[1],c=n.length===l.length;return o.default.createElement(o.default.Fragment,null,o.default.createElement("div",{className:f(["terra-filter-pills-doc-example-truncated-label-container",e.className])},o.default.createElement(m.default,{ariaLabel:"Demonstration example of a Filter Pill with a long label",onRemove:function(e,l){var t=n;t.splice(l.index,1),s((0,r.default)(t))}},n.map((function(e,l){return o.default.createElement(m.Pill,{label:e.label,labelCategory:e.labelCategory,id:e.id,key:e.id,metaData:{index:l}})})))),o.default.createElement(d.Button,{"aria-disabled":c,className:f(["terra-docs-example-reset-button",{"is-disabled":c},e.className]),disabled:c,onClick:function(){return s(l)}},"Reset Example"))};b.contextType=p.default;l.Z=b},15495:function(e,l,t){var a=t(64836),n=t(18698);l.Z=void 0;var r=a(t(861)),i=a(t(27424)),o=f(t(67294)),s=a(t(47166)),d=t(34261),m=f(t(43128)),p=a(t(5071)),c=a(t(47341)),u=a(t(57841));function x(e){if("function"!=typeof WeakMap)return null;var l=new WeakMap,t=new WeakMap;return(x=function(e){return e?t:l})(e)}function f(e,l){if(!l&&e&&e.__esModule)return e;if(null===e||"object"!=n(e)&&"function"!=typeof e)return{default:e};var t=x(l);if(t&&t.has(e))return t.get(e);var a={__proto__:null},r=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var i in e)if("default"!==i&&Object.prototype.hasOwnProperty.call(e,i)){var o=r?Object.getOwnPropertyDescriptor(e,i):null;o&&(o.get||o.set)?Object.defineProperty(a,i,o):a[i]=e[i]}return a.default=e,t&&t.set(e,a),a}var b=s.default.bind(u.default),h=function(){var e=o.default.useContext(c.default),l=[{label:"Asthma",labelCategory:"Respiratory",id:"terra-filter-pills-respiratory-asthma"},{label:"Bronchitis",labelCategory:"Respiratory",id:"terra-filter-pills-respiratory-bronchitis"},{label:"Fibro",labelCategory:"Respiratory",id:"terra-filter-pills-respiratory-fibro"}],t=(0,o.useState)(l),a=(0,i.default)(t,2),n=a[0],s=a[1],u=n.length===l.length,x="Patient Education Search Terms:",f="terra-filter-pills-example-patient-education-search-terms-label";return o.default.createElement(o.default.Fragment,null,o.default.createElement("div",{className:b(["terra-filter-pills-doc-example-search-terms",e.className])},o.default.createElement(p.default,{id:f,className:b("search-terms-label")},x),o.default.createElement(m.default,{ariaLabelledBy:f,ariaLabel:x,onRemove:function(e,l){var t=n;t.splice(l.index,1),s((0,r.default)(t))}},n.map((function(e,l){return o.default.createElement(m.Pill,{label:e.label,labelCategory:e.labelCategory,id:e.id,key:e.id,metaData:{index:l}})})))),o.default.createElement(d.Button,{"aria-disabled":u,className:b(["terra-docs-example-reset-button",{"is-disabled":u},e.className]),disabled:u,onClick:function(){return s(l)}},"Reset Example"))};h.contextType=c.default;l.Z=h},72061:function(e,l,t){t.r(l),l.default={whitespace:"Whitespace-module__whitespace___ZHva5","newline-1":"Whitespace-module__newline-1___aPEyq","newline-2":"Whitespace-module__newline-2___G+-sh","newline-3":"Whitespace-module__newline-3___4OJK-","newline-4":"Whitespace-module__newline-4___3Z0jB","newline-5":"Whitespace-module__newline-5___lBkK-","newline-6":"Whitespace-module__newline-6___FT7fE","newline-7":"Whitespace-module__newline-7___OMery","newline-8":"Whitespace-module__newline-8___vvoWz"}},57841:function(e,l,t){t.r(l),l.default={"clinical-lowlight-theme":"FilterPillsCommon-module__clinical-lowlight-theme___kufCR","orion-fusion-theme":"FilterPillsCommon-module__orion-fusion-theme___DX+Eh","terra-docs-example-reset-button":"FilterPillsCommon-module__terra-docs-example-reset-button___4QxNs","is-disabled":"FilterPillsCommon-module__is-disabled___d7Ypu","terra-filter-pills-doc-example-applied-filters":"FilterPillsCommon-module__terra-filter-pills-doc-example-applied-filters___FHD3-","applied-filters-content-panel":"FilterPillsCommon-module__applied-filters-content-panel___UliYh","applied-filters-label":"FilterPillsCommon-module__applied-filters-label___qK0hr","terra-filter-pills-doc-example-applied-filters-toolbar":"FilterPillsCommon-module__terra-filter-pills-doc-example-applied-filters-toolbar___XhHa0","toolbar-flex-container":"FilterPillsCommon-module__toolbar-flex-container___5Vbzr","toolbar-flex-item-start":"FilterPillsCommon-module__toolbar-flex-item-start___-CPMv","toolbar-flex-item-fill":"FilterPillsCommon-module__toolbar-flex-item-fill___vGICq","toolbar-flex-item-end":"FilterPillsCommon-module__toolbar-flex-item-end___kRZI6","terra-filter-pills-doc-example-truncated-label-container":"FilterPillsCommon-module__terra-filter-pills-doc-example-truncated-label-container___sgh3Q","terra-filter-pills-doc-example-search-terms":"FilterPillsCommon-module__terra-filter-pills-doc-example-search-terms___my1Na","search-terms-label":"FilterPillsCommon-module__search-terms-label___ABfLO"}}}]);