"use strict";(self.webpackChunkterra_framework=self.webpackChunkterra_framework||[]).push([[17985],{82281:function(e,n,a){a.r(n),a.d(n,{default:function(){return i}});var l=a(87462),d=a(44925),t=(a(67294),a(81254)),o=a(55509),r=["components"],s={},m="wrapper";function i(e){var n=e.components,a=(0,d.Z)(e,r);return(0,t.mdx)(m,(0,l.Z)({},s,a,{components:n,mdxType:"MDXLayout"}),(0,t.mdx)("h1",{id:"expandcollapse"},"Expand/Collapse"),(0,t.mdx)("h3",{id:"description"},"Description"),(0,t.mdx)("p",null,"The following example demonstrates expandable/collapsible folders."),(0,t.mdx)("h3",{id:"required-properties"},"Required Properties"),(0,t.mdx)("p",null,"Expanded/collapsed state is controlled by the consuming component.\nThe following FolderTreeItem props are required for expand/collapse:"),(0,t.mdx)("ul",null,(0,t.mdx)("li",{parentName:"ul"},(0,t.mdx)("strong",{parentName:"li"},"isExpanded"),": Identifies whether or not the FolderTreeItem is currently expanded. "),(0,t.mdx)("li",{parentName:"ul"},(0,t.mdx)("strong",{parentName:"li"},"onToggle"),": This callback is called when interacting with a row that has ",(0,t.mdx)("inlineCode",{parentName:"li"},"subfolderItems")," via either of the following methods:",(0,t.mdx)("ul",{parentName:"li"},(0,t.mdx)("li",{parentName:"ul"},"Mouse click:",(0,t.mdx)("ul",{parentName:"li"},(0,t.mdx)("li",{parentName:"ul"},"Clicking anywhere on a row that has ",(0,t.mdx)("inlineCode",{parentName:"li"},"subfolderItems"),", other than on the radio button."))),(0,t.mdx)("li",{parentName:"ul"},"Keyboard:",(0,t.mdx)("ul",{parentName:"li"},(0,t.mdx)("li",{parentName:"ul"},"Pressing Right Arrow on a focused, collapsed row that has ",(0,t.mdx)("inlineCode",{parentName:"li"},"subfolderItems"),", or Left Arrow on a focused, expanded row that has ",(0,t.mdx)("inlineCode",{parentName:"li"},"subfolderItems"),"."))))),(0,t.mdx)("li",{parentName:"ul"},(0,t.mdx)("strong",{parentName:"li"},"subfolderItems"),": Only FolderTreeItems that have ",(0,t.mdx)("inlineCode",{parentName:"li"},"subfolderItems")," with 1 or more items can be expanded/collapsed,\nand will display a folder icon.")),(0,t.mdx)("pre",null,(0,t.mdx)("code",{parentName:"pre",className:"language-js"},'// Initialize folders to be collapsed\nconst [expandedItems, setExpandedItems] = React.useState({\n  "row-item-1": false\n});\n\nconst handleExpandCollapse = (key) => {\n  const newExpandedItems = {\n    ...expandedItems,\n    [key]: !expandedItems[key],\n  };\n  setExpandedItems(newExpandedItems);\n};\n\n<FolderTree.Item\n  key="row-item-1"\n  label="Projects"\n  isExpanded={expandedItems["row-item-1"]}\n  onToggle={() => {handleExpandCollapse("row-item-1")}}\n  subfolderItems=[...]\n/>\n')),(0,t.mdx)(o.Z,{mdxType:"FolderTreeExpandCollapse"}))}i.isMDXComponent=!0}}]);