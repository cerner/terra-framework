"use strict";(self.webpackChunkterra_framework=self.webpackChunkterra_framework||[]).push([[51567,48883,57721],{41740:function(e,n,t){t.r(n),t.d(n,{default:function(){return y}});var l=t(87462),o=t(44925),a=t(67294),r=t(81254),i=t(96216),s=["components"],d={};function c(e){var n=e.components,t=(0,o.Z)(e,s);return(0,r.mdx)("wrapper",(0,l.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-jsx"},"import React, { useCallback, useState } from 'react';\nimport { WorklistDataGrid } from 'terra-data-grid';\n\nconst gridDataJSON = {\n  cols: [\n    { id: 'Column-0', displayName: 'Patient' },\n    { id: 'Column-1', displayName: 'Location' },\n    { id: 'Column-2', displayName: 'Illness Severity' },\n    { id: 'Column-3', displayName: 'Visit' },\n    { id: 'Column-4', displayName: 'Allergy' },\n    { id: 'Column-5', displayName: 'Primary Contact' },\n    { id: 'Column-6', displayName: 'Generic Order Counts' },\n    { id: 'Column-7', displayName: 'Patient Age' },\n    { id: 'Column-8', displayName: 'Medication History' },\n    { id: 'Column-9', displayName: 'My Relationship' },\n    { id: 'Column-10', displayName: 'Not Selectable', isSelectable: false },\n  ],\n  rows: [\n    {\n      id: '1',\n      cells: [\n        { content: 'Fleck, Arthur' },\n        { content: '1007-MTN' },\n        { content: 'Unstable' },\n        { content: 'Inpatient, 2 months' },\n        { content: '' },\n        { content: 'Quinzell, Harleen' },\n        { content: '' },\n        { isMasked: true },\n        { isMasked: true },\n        { content: 'Admitting Physician' },\n        { content: '', isSelectable: false },\n      ],\n    },\n    {\n      id: '2',\n      cells: [\n        { content: 'Wayne, Bruce' },\n        { content: '1007-MTN-DR' },\n        { content: 'Stable' },\n        { content: 'Outpatient, 2 days' },\n        { content: 'Phytochemicals' },\n        { content: 'Grayson, Richard' },\n        { content: '' },\n        { content: '' },\n        { isMasked: true },\n        { content: 'Admitting Physician' },\n        { content: '', isSelectable: false },\n      ],\n    },\n  ],\n};\n\nconst PinnedColumns = () => {\n  const rowHeaderIndex = 0;\n  const { cols, rows } = gridDataJSON;\n\n  const [rowData, setRowData] = useState(rows);\n\n  const onCellSelect = useCallback((rowId, columnId) => {\n    if (rowId && columnId) {\n      const rowIndex = rowData.findIndex(row => row.id === rowId);\n      const columnIndex = cols.findIndex(column => column.id === columnId);\n\n      // Remove current selections\n      const newRowData = [...rowData];\n      for (let row = 0; row < rowData.length; row += 1) {\n        for (let cell = 0; cell < rowData[row].cells.length; cell += 1) {\n          const currentCell = rowData[row].cells[cell];\n          if (currentCell.isSelected && !(row === rowIndex && cell === columnIndex)) {\n            currentCell.isSelected = false;\n          }\n        }\n      }\n\n      // Toggle selection state of selected cell\n      newRowData[rowIndex].cells[columnIndex].isSelected = !rowData[rowIndex].cells[columnIndex].isSelected;\n      setRowData(newRowData);\n    }\n  }, [cols, rowData]);\n\n  const onClearSelectedCells = useCallback(() => {\n    // Remove current selections\n    const newRowData = [...rowData];\n    for (let row = 0; row < rowData.length; row += 1) {\n      for (let cell = 0; cell < rowData[row].cells.length; cell += 1) {\n        newRowData[row].cells[cell].isSelected = false;\n      }\n    }\n\n    setRowData(newRowData);\n  }, [rowData]);\n\n  return (\n    <WorklistDataGrid\n      id=\"terra-worklist-data-grid-pinned-columns\"\n      pinnedColumns={cols.slice(0, 3)} // This prop must be specified to display columns that need to pinned (stickied).\n      overflowColumns={cols.slice(3)} // This prop must be specified to display columns that do not need to be stickied and can be scrolled horizontally.\n      rows={rowData}\n      rowHeaderIndex={rowHeaderIndex}\n      ariaLabel=\"Worklist Data Grid\"\n      onCellSelect={onCellSelect}\n      onClearSelectedCells={onClearSelectedCells}\n    />\n  );\n};\n\nexport default PinnedColumns;\n\n")))}c.isMDXComponent=!0;var u=t(49271),m=function(e){var n=e.title,t=e.description,l=e.isExpanded;return a.createElement(u.Z,{title:n||"Pinned Columns",description:t,example:a.createElement(i.Z,null),exampleSrc:a.createElement(c,null),isExpanded:l})},p=["components"],f={},w="wrapper";function y(e){var n=e.components,t=(0,o.Z)(e,p);return(0,r.mdx)(w,(0,l.Z)({},f,t,{components:n,mdxType:"MDXLayout"}),(0,r.mdx)("h1",{id:"pinned-columns"},"Pinned Columns"),(0,r.mdx)("h3",{id:"description"},"Description"),(0,r.mdx)("p",null,"The ",(0,r.mdx)("a",{parentName:"p",href:"/terra-framework/pull/1919/components/cerner-terra-framework-docs/data-grid/worklist-data-grid/about"},"Worklist Data Grid")," defines two types of columns: Pinned and Overflow.\nThe pinned columns are aligned to the left of the Worklist Data Grid and cannot be scrolled.\nThe overflow section is aligned to the right of pinned columns and scrolls horizontally to reveal each overflow column.\nThis example demonstrates a Worklist Data Grid that supports both pinned and overflow columns."),(0,r.mdx)("h3",{id:"properties-required"},"Properties required"),(0,r.mdx)("ul",null,(0,r.mdx)("li",{parentName:"ul"},(0,r.mdx)("p",{parentName:"li"},"The ",(0,r.mdx)("strong",{parentName:"p"},"pinnedColumns")," prop is used to specify columns that need to be aligned left of the grid and stickied.")),(0,r.mdx)("li",{parentName:"ul"},(0,r.mdx)("p",{parentName:"li"},"The ",(0,r.mdx)("strong",{parentName:"p"},"overflowColumns")," prop is used to specify columns that do not need to be stickied and can scroll horizontally."))),(0,r.mdx)("p",null,"Columns specified in both these props will rendered in the order in which they are provided."),(0,r.mdx)(m,{title:"Worklist Data Grid with Pinned Columns",mdxType:"PinnedColumns"}))}y.isMDXComponent=!0},96216:function(e,n,t){var l=t(64836),o=t(18698);n.Z=void 0;var a=l(t(861)),r=l(t(27424)),i=function(e,n){if(!n&&e&&e.__esModule)return e;if(null===e||"object"!=o(e)&&"function"!=typeof e)return{default:e};var t=d(n);if(t&&t.has(e))return t.get(e);var l={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var r in e)if("default"!==r&&Object.prototype.hasOwnProperty.call(e,r)){var i=a?Object.getOwnPropertyDescriptor(e,r):null;i&&(i.get||i.set)?Object.defineProperty(l,r,i):l[r]=e[r]}return l.default=e,t&&t.set(e,l),l}(t(67294)),s=t(55730);function d(e){if("function"!=typeof WeakMap)return null;var n=new WeakMap,t=new WeakMap;return(d=function(e){return e?t:n})(e)}var c=[{id:"Column-0",displayName:"Patient"},{id:"Column-1",displayName:"Location"},{id:"Column-2",displayName:"Illness Severity"},{id:"Column-3",displayName:"Visit"},{id:"Column-4",displayName:"Allergy"},{id:"Column-5",displayName:"Primary Contact"},{id:"Column-6",displayName:"Generic Order Counts"},{id:"Column-7",displayName:"Patient Age"},{id:"Column-8",displayName:"Medication History"},{id:"Column-9",displayName:"My Relationship"},{id:"Column-10",displayName:"Not Selectable",isSelectable:!1}],u=[{id:"1",cells:[{content:"Fleck, Arthur"},{content:"1007-MTN"},{content:"Unstable"},{content:"Inpatient, 2 months"},{content:""},{content:"Quinzell, Harleen"},{content:""},{isMasked:!0},{isMasked:!0},{content:"Admitting Physician"},{content:"",isSelectable:!1}]},{id:"2",cells:[{content:"Wayne, Bruce"},{content:"1007-MTN-DR"},{content:"Stable"},{content:"Outpatient, 2 days"},{content:"Phytochemicals"},{content:"Grayson, Richard"},{content:""},{content:""},{isMasked:!0},{content:"Admitting Physician"},{content:"",isSelectable:!1}]}];n.Z=function(){var e=c,n=u,t=(0,i.useState)(n),l=(0,r.default)(t,2),o=l[0],d=l[1],m=(0,i.useCallback)((function(n,t){if(n&&t){for(var l=o.findIndex((function(e){return e.id===n})),r=e.findIndex((function(e){return e.id===t})),i=(0,a.default)(o),s=0;s<o.length;s+=1)for(var c=0;c<o[s].cells.length;c+=1){var u=o[s].cells[c];!u.isSelected||s===l&&c===r||(u.isSelected=!1)}i[l].cells[r].isSelected=!o[l].cells[r].isSelected,d(i)}}),[e,o]),p=(0,i.useCallback)((function(){for(var e=(0,a.default)(o),n=0;n<o.length;n+=1)for(var t=0;t<o[n].cells.length;t+=1)e[n].cells[t].isSelected=!1;d(e)}),[o]);return i.default.createElement(s.WorklistDataGrid,{id:"terra-worklist-data-grid-pinned-columns",pinnedColumns:e.slice(0,3),overflowColumns:e.slice(3),rows:o,rowHeaderIndex:0,ariaLabel:"Worklist Data Grid",onCellSelect:m,onClearSelectedCells:p})}}}]);