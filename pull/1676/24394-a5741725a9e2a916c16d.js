"use strict";(self.webpackChunkterra_framework=self.webpackChunkterra_framework||[]).push([[24394],{49271:function(e,t,n){var l=n(64836),o=n(18698);t.Z=void 0;var a=l(n(27424)),r=function(e,t){if(!t&&e&&e.__esModule)return e;if(null===e||"object"!==o(e)&&"function"!=typeof e)return{default:e};var n=p(t);if(n&&n.has(e))return n.get(e);var l={},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var r in e)if("default"!==r&&Object.prototype.hasOwnProperty.call(e,r)){var c=a?Object.getOwnPropertyDescriptor(e,r):null;c&&(c.get||c.set)?Object.defineProperty(l,r,c):l[r]=e[r]}l.default=e,n&&n.set(e,l);return l}(n(67294)),c=l(n(45697)),i=l(n(47166)),s=n(21538),d=l(n(33864)),u=l(n(23399)),m=n(51051),f=l(n(53560));function p(e){if("function"!=typeof WeakMap)return null;var t=new WeakMap,n=new WeakMap;return(p=function(e){return e?n:t})(e)}var w=i.default.bind(f.default),h={example:c.default.element,exampleSrc:c.default.element,exampleCssSrc:c.default.element,title:c.default.string,description:c.default.node,isExpanded:c.default.bool},S=function(e){e.currentTarget.setAttribute("data-focus-styles-enabled","true")},y=function(e){e.currentTarget.setAttribute("data-focus-styles-enabled","false")},g=function(e){var t=e.example,n=e.exampleSrc,l=e.exampleCssSrc,o=e.title,c=e.description,i=e.isExpanded,f=(0,r.useState)(i),p=(0,a.default)(f,2),h=p[0],g=p[1],_=(0,r.useState)(!1),v=(0,a.default)(_,2),b=v[0],R=v[1],x=r.default.useContext(s.ThemeContext),C=void 0!==l,E=function(){R(!b),h&&g(!h)},k=function(){g(!h),b&&R(!b)},M=function(e,t){e.nativeEvent.keyCode!==m.KEY_SPACE&&e.nativeEvent.keyCode!==m.KEY_RETURN||(e.preventDefault(),t())};return r.default.createElement("div",{className:w("template",x.className)},r.default.createElement("div",{className:w("header")},o&&r.default.createElement("h2",{className:w("title")},o)),r.default.createElement("div",{className:w("content")},c&&r.default.createElement("div",{className:w("description")},c),t),r.default.createElement("div",{className:w("footer")},n?r.default.createElement("div",{className:w("button-container")},C&&r.default.createElement("button",{type:"button",className:w("css-toggle","item",{"is-selected":b}),onClick:E,onKeyDown:function(e){return M(e,E)},onBlur:S,onMouseDown:y,tabIndex:0,"data-focus-styles-enabled":!0},r.default.createElement(d.default,{className:w("chevron")}),r.default.createElement("span",null,"CSS"),r.default.createElement(u.default,{className:w("chevron")})),r.default.createElement("button",{type:"button",className:w("code-toggle","item",{"is-selected":h}),onClick:k,onKeyDown:function(e){return M(e,k)},onBlur:S,onMouseDown:y,tabIndex:0,"data-focus-styles-enabled":!0},r.default.createElement(d.default,{className:w("chevron")}),r.default.createElement("span",null,"Code"),r.default.createElement(u.default,{className:w("chevron")}))):null,r.default.createElement("div",null,b&&r.default.createElement("div",{className:w("css")},l),h&&r.default.createElement("div",{className:w("code")},n))))};g.propTypes=h,g.defaultProps={isExpanded:!1};var _=g;t.Z=_},32276:function(e,t,n){n.r(t),n.d(t,{default:function(){return h}});var l=n(87462),o=n(44925),a=n(67294),r=n(81254),c=n(91144),i=["components"],s={};function d(e){var t=e.components,n=(0,o.Z)(e,i);return(0,r.mdx)("wrapper",(0,l.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-jsx"},"import React, { useState, useRef } from 'react';\nimport WorklistDataGrid from 'terra-worklist-data-grid';\nimport { DisclosureManagerContext } from 'terra-disclosure-manager';\nimport DisclosureComponent from './disclosure/DisclosureComponent';\n\nconst gridDataJSON = {\n  cols: [\n    { id: 'Column-0', displayName: 'Patient' },\n    { id: 'Column-1', displayName: 'Location' },\n    { id: 'Column-2', displayName: 'Illness Severity' },\n    { id: 'Column-3', displayName: 'Visit' },\n    { id: 'Column-4', displayName: 'Allergy' },\n    { id: 'Column-5', displayName: 'Primary Contact' },\n    { id: 'Column-6', displayName: 'Generic Order Counts' },\n    { id: 'Column-7', displayName: 'Patient Age' },\n    { id: 'Column-8', displayName: 'Medication History' },\n    { id: 'Column-9', displayName: 'My Relationship' },\n    { id: 'Column-10', displayName: 'Not Selectable', isSelectable: false },\n  ],\n  rows: [\n    {\n      id: '1',\n      cells: [\n        { content: 'Fleck, Arthur' },\n        { content: '1007-MTN' },\n        { content: 'Unstable' },\n        { content: 'Inpatient, 2 months' },\n        { content: '' },\n        { content: 'Quinzell, Harleen' },\n        { content: '' },\n        { isMasked: true },\n        { isMasked: true },\n        { content: 'Admitting Physician' },\n        { content: '', isSelectable: false },\n      ],\n    },\n    {\n      id: '2',\n      cells: [\n        { content: 'Wayne, Bruce' },\n        { content: '1007-MTN-DR' },\n        { content: 'Stable' },\n        { content: 'Outpatient, 2 days' },\n        { content: 'Phytochemicals' },\n        { content: 'Grayson, Richard' },\n        { content: '' },\n        { content: '' },\n        { isMasked: true },\n        { content: 'Admitting Physician' },\n        { content: '', isSelectable: false },\n      ],\n    },\n  ],\n};\n\nconst WDGWithRowSelectionModeToggleAndCellSelectionDisclosure = () => {\n  const rowSelectionModeRef = useRef();\n  const rowHeaderIndex = 0;\n  const { cols, rows } = gridDataJSON;\n  const [selectedRows, setSelectedRows] = useState([]);\n  const [hasSelectableRows, setHasSelectableRows] = useState(false);\n\n  const disclosureManager = React.useContext(DisclosureManagerContext);\n\n  const determineSelectedRows = (allRowsSelected, userSelectedRow) => {\n    if (!userSelectedRow) {\n      return [];\n    }\n\n    let remainingSelectedRow = [];\n    if (allRowsSelected) {\n      remainingSelectedRow = userSelectedRow;\n    } else if (selectedRows.includes(userSelectedRow[0])) {\n      // Row Deselect so remove this rowId.\n      remainingSelectedRow = selectedRows.filter(e => (e !== userSelectedRow[0]));\n    } else {\n      // Row Selected so add this rowId.\n      remainingSelectedRow = remainingSelectedRow.concat(selectedRows);\n      remainingSelectedRow.push(userSelectedRow[0]);\n    }\n    return remainingSelectedRow;\n  };\n\n  const clearRowSelection = () => {\n    // eslint-disable-next-line no-param-reassign\n    rows.forEach(r => { if (r.isSelected) { r.isSelected = false; } });\n    setSelectedRows([]);\n  };\n\n  const disableSelectableRows = () => {\n    rowSelectionModeRef.current.checked = false;\n    setHasSelectableRows(false);\n    clearRowSelection();\n  };\n\n  const onRowSelectionModeChange = (event) => {\n    if (!event.target.checked) {\n      clearRowSelection();\n    }\n    setHasSelectableRows(event.target.checked);\n  };\n\n  const onCellSelect = (rowId, columnId) => {\n    if (rowId && columnId) {\n      const rowIndex = rows.findIndex(e => e.id === rowId);\n      const colIndex = cols.findIndex(e => e.id === columnId);\n      disclosureManager.disclose({\n        preferredType: 'panel',\n        size: 'tiny',\n        content: {\n          component: (\n            <DisclosureComponent\n              columnHeader={cols[colIndex].displayName}\n              rowHeader={rows[rowIndex].cells[0].content}\n              content={rows[rowIndex].cells[colIndex].content}\n              name={cols[colIndex].displayName}\n            />\n          ),\n        },\n      });\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <div>\n        <label htmlFor=\"rowSelectionMode\"><b>Row Selection Mode</b></label>\n        <input\n          id=\"rowSelectionMode\"\n          type=\"checkbox\"\n          ref={rowSelectionModeRef}\n          onChange={onRowSelectionModeChange}\n        />\n      </div>\n      <WorklistDataGrid\n        id=\"default-terra-worklist-data-grid\"\n        columns={cols}\n        rows={[...rows]}\n        rowHeaderIndex={rowHeaderIndex}\n        rowHeight=\"50px\"\n        columnWidth=\"50px\"\n        columnHeaderHeight=\"50px\"\n        ariaLabel=\"Worklist Data Grid\"\n        hasSelectableRows={hasSelectableRows}\n        onRowSelect={(rowId) => {\n          const newRows = [];\n          const selectedRow = rows.find(e => e.id === rowId);\n          selectedRow.isSelected = !selectedRow.isSelected;\n          rows.forEach(element => {\n            if (element.isSelected) {\n              newRows.push(element.id);\n            }\n          });\n          setSelectedRows(determineSelectedRows(false, newRows));\n        }}\n        onRowSelectAll={() => {\n          const newRows = [];\n          rows.forEach(e => { e.isSelected = true; newRows.push(e.id); });\n          setSelectedRows(determineSelectedRows(true, newRows));\n        }}\n        onCellSelect={onCellSelect}\n        onClearSelectedRows={() => {\n          clearRowSelection();\n        }}\n        onDisableSelectableRows={() => {\n          disableSelectableRows();\n        }}\n      />\n    </React.Fragment>\n  );\n};\n\nexport default WDGWithRowSelectionModeToggleAndCellSelectionDisclosure;\n\n")))}d.isMDXComponent=!0;var u=n(49271),m=function(e){var t=e.title,n=e.description,l=e.isExpanded;return a.createElement(u.Z,{title:t||"WDG With Row Selection Mode Toggle And Cell Selection Disclosure",description:n,example:a.createElement(c.Z,null),exampleSrc:a.createElement(d,null),isExpanded:l})},f=["components"],p={},w="wrapper";function h(e){var t=e.components,n=(0,o.Z)(e,f);return(0,r.mdx)(w,(0,l.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.mdx)(m,{title:"Worklist Data Grid With Row Selection Mode toggle and disclosure on cell selection",mdxType:"WDGWithRowSelectionModeToggleAndCellSelectionDisclosure"}))}h.isMDXComponent=!0},91144:function(e,t,n){var l=n(64836),o=n(18698);t.Z=void 0;var a=l(n(861)),r=l(n(27424)),c=function(e,t){if(!t&&e&&e.__esModule)return e;if(null===e||"object"!==o(e)&&"function"!=typeof e)return{default:e};var n=u(t);if(n&&n.has(e))return n.get(e);var l={},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var r in e)if("default"!==r&&Object.prototype.hasOwnProperty.call(e,r)){var c=a?Object.getOwnPropertyDescriptor(e,r):null;c&&(c.get||c.set)?Object.defineProperty(l,r,c):l[r]=e[r]}l.default=e,n&&n.set(e,l);return l}(n(67294)),i=l(n(72095)),s=n(56019),d=l(n(6399));function u(e){if("function"!=typeof WeakMap)return null;var t=new WeakMap,n=new WeakMap;return(u=function(e){return e?n:t})(e)}var m=[{id:"Column-0",displayName:"Patient"},{id:"Column-1",displayName:"Location"},{id:"Column-2",displayName:"Illness Severity"},{id:"Column-3",displayName:"Visit"},{id:"Column-4",displayName:"Allergy"},{id:"Column-5",displayName:"Primary Contact"},{id:"Column-6",displayName:"Generic Order Counts"},{id:"Column-7",displayName:"Patient Age"},{id:"Column-8",displayName:"Medication History"},{id:"Column-9",displayName:"My Relationship"},{id:"Column-10",displayName:"Not Selectable",isSelectable:!1}],f=[{id:"1",cells:[{content:"Fleck, Arthur"},{content:"1007-MTN"},{content:"Unstable"},{content:"Inpatient, 2 months"},{content:""},{content:"Quinzell, Harleen"},{content:""},{isMasked:!0},{isMasked:!0},{content:"Admitting Physician"},{content:"",isSelectable:!1}]},{id:"2",cells:[{content:"Wayne, Bruce"},{content:"1007-MTN-DR"},{content:"Stable"},{content:"Outpatient, 2 days"},{content:"Phytochemicals"},{content:"Grayson, Richard"},{content:""},{content:""},{isMasked:!0},{content:"Admitting Physician"},{content:"",isSelectable:!1}]}],p=function(){var e=(0,c.useRef)(),t=m,n=f,l=(0,c.useState)([]),o=(0,r.default)(l,2),u=o[0],p=o[1],w=(0,c.useState)(!1),h=(0,r.default)(w,2),S=h[0],y=h[1],g=c.default.useContext(s.DisclosureManagerContext),_=function(e,t){if(!t)return[];var n=[];return e?n=t:u.includes(t[0])?n=u.filter((function(e){return e!==t[0]})):(n=n.concat(u)).push(t[0]),n},v=function(){n.forEach((function(e){e.isSelected&&(e.isSelected=!1)})),p([])};return c.default.createElement(c.default.Fragment,null,c.default.createElement("div",null,c.default.createElement("label",{htmlFor:"rowSelectionMode"},c.default.createElement("b",null,"Row Selection Mode")),c.default.createElement("input",{id:"rowSelectionMode",type:"checkbox",ref:e,onChange:function(e){e.target.checked||v(),y(e.target.checked)}})),c.default.createElement(i.default,{id:"default-terra-worklist-data-grid",columns:t,rows:(0,a.default)(n),rowHeaderIndex:0,rowHeight:"50px",columnWidth:"50px",columnHeaderHeight:"50px",ariaLabel:"Worklist Data Grid",hasSelectableRows:S,onRowSelect:function(e){var t=[],l=n.find((function(t){return t.id===e}));l.isSelected=!l.isSelected,n.forEach((function(e){e.isSelected&&t.push(e.id)})),p(_(!1,t))},onRowSelectAll:function(){var e=[];n.forEach((function(t){t.isSelected=!0,e.push(t.id)})),p(_(!0,e))},onCellSelect:function(e,l){if(e&&l){var o=n.findIndex((function(t){return t.id===e})),a=t.findIndex((function(e){return e.id===l}));g.disclose({preferredType:"panel",size:"tiny",content:{component:c.default.createElement(d.default,{columnHeader:t[a].displayName,rowHeader:n[o].cells[0].content,content:n[o].cells[a].content,name:t[a].displayName})}})}},onClearSelectedRows:function(){v()},onDisableSelectableRows:function(){e.current.checked=!1,y(!1),v()}}))};t.Z=p},6399:function(e,t,n){var l=n(64836);Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var o=l(n(56690)),a=l(n(89728)),r=l(n(66115)),c=l(n(61655)),i=l(n(94993)),s=l(n(73808)),d=l(n(67294)),u=l(n(45697)),m=l(n(47166)),f=l(n(55281)),p=l(n(10027)),w=l(n(17092)),h=n(56019),S=l(n(86174));function y(e){var t=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}();return function(){var n,l=(0,s.default)(e);if(t){var o=(0,s.default)(this).constructor;n=Reflect.construct(l,arguments,o)}else n=l.apply(this,arguments);return(0,i.default)(this,n)}}var g=m.default.bind(S.default),_={name:u.default.string,content:u.default.string,rowHeader:u.default.string,columnHeader:u.default.string,disclosureManager:h.disclosureManagerShape},v=function(e){(0,c.default)(n,e);var t=y(n);function n(e){var l;return(0,o.default)(this,n),(l=t.call(this,e)).checkLockState=l.checkLockState.bind((0,r.default)(l)),l.state={text:void 0},l}return(0,a.default)(n,[{key:"componentDidMount",value:function(){var e=this.props.disclosureManager;e&&e.registerDismissCheck&&e.registerDismissCheck(this.checkLockState)}},{key:"checkLockState",value:function(){var e=this;return this.state.text&&this.state.text.length?new Promise((function(t,n){confirm("".concat(e.props.name," has unsaved changes that will be lost. Do you wish to continue?"))?t():n()})):Promise.resolve()}},{key:"render",value:function(){var e=this.props,t=e.disclosureManager,n=e.name,l=e.content,o=e.rowHeader,a=e.columnHeader;return d.default.createElement(p.default,{fill:!0,header:d.default.createElement(w.default,{title:"Disclosure - ".concat(n),onClose:t.closeDisclosure})},d.default.createElement("div",{className:g("content-wrapper")},d.default.createElement("h3",null,"".concat(o," - ").concat(a)),d.default.createElement("p",null,l),d.default.createElement(f.default,{text:"Dismiss",onClick:function(){t.dismiss().catch((function(){console.log("Dismiss failed. A lock must be in place.")}))}})))}}]),n}(d.default.Component);v.propTypes=_,v.defaultProps={name:"Disclosure Component"};var b=(0,h.withDisclosureManager)(v);t.default=b},53560:function(e,t,n){n.r(t),t.default={"clinical-lowlight-theme":"ExampleTemplate-module__clinical-lowlight-theme___rBbtD","orion-fusion-theme":"ExampleTemplate-module__orion-fusion-theme___GzA23",template:"ExampleTemplate-module__template___a4uPk",header:"ExampleTemplate-module__header___iFXV3",content:"ExampleTemplate-module__content___48m4Q",description:"ExampleTemplate-module__description___NwBJo",footer:"ExampleTemplate-module__footer___GpSoG","button-container":"ExampleTemplate-module__button-container___rAD11",css:"ExampleTemplate-module__css___+jtk1",code:"ExampleTemplate-module__code___7rC6C","css-toggle":"ExampleTemplate-module__css-toggle___chHK7","code-toggle":"ExampleTemplate-module__code-toggle___TGlE-","is-selected":"ExampleTemplate-module__is-selected___0BYwS",item:"ExampleTemplate-module__item___8FTQq",chevron:"ExampleTemplate-module__chevron___VbY7N",title:"ExampleTemplate-module__title___r+nbJ","dynamic-content":"ExampleTemplate-module__dynamic-content___k+1H7"}},86174:function(e,t,n){n.r(t),t.default={"content-wrapper":"DisclosureComponent-module__content-wrapper___cz74h"}},33864:function(e,t,n){Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var l=a(n(67294)),o=a(n(99139));function a(e){return e&&e.__esModule?e:{default:e}}function r(){return r=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var l in n)Object.prototype.hasOwnProperty.call(n,l)&&(e[l]=n[l])}return e},r.apply(this,arguments)}var c=function(e){var t=r({},e);return l.default.createElement(o.default,t,l.default.createElement("path",{d:"M10.3 24L33.8 0l3.9 3.8L18 24l19.7 20.2-3.9 3.8z"}))};c.displayName="IconChevronLeft",c.defaultProps={className:"",viewBox:"0 0 48 48",xmlns:"http://www.w3.org/2000/svg","data-name":"Layer 1",isBidi:!0};var i=c;t.default=i},87462:function(e,t,n){function l(){return l=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var l in n)Object.prototype.hasOwnProperty.call(n,l)&&(e[l]=n[l])}return e},l.apply(this,arguments)}n.d(t,{Z:function(){return l}})},44925:function(e,t,n){function l(e,t){if(null==e)return{};var n,l,o=function(e,t){if(null==e)return{};var n,l,o={},a=Object.keys(e);for(l=0;l<a.length;l++)n=a[l],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(l=0;l<a.length;l++)n=a[l],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}n.d(t,{Z:function(){return l}})}}]);