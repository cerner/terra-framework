"use strict";(self.webpackChunkterra_framework=self.webpackChunkterra_framework||[]).push([[65360],{9665:function(e,n,t){t.r(n),t.d(n,{default:function(){return g}});var l=t(87462),a=t(44925),d=t(67294),r=t(81254),m=t(22863),i=function(e){var n=e.url;return d.createElement(m.Z,{src:"https://github.com/cerner/terra-core/tree/main/packages/terra-grid",name:"terra-grid",version:"6.34.0",url:n})},o=t(78530),p=["components"],x={},s="wrapper";function u(e){var n=e.components,t=(0,a.Z)(e,p);return(0,r.mdx)(s,(0,l.Z)({},x,t,{components:n,mdxType:"MDXLayout"}),(0,r.mdx)(o.ZP,{mdxType:"PropsTable"},(0,r.mdx)(o.X2,{key:"ROW1",mdxType:"Row"},(0,r.mdx)(o.O,{mdxType:"PropNameCell"},"ariaLabelledby"),(0,r.mdx)(o.Di,{mdxType:"TypeCell"},(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-javascript"},"string\n"))),(0,r.mdx)(o.dS,{isRequired:!1,mdxType:"RequiredCell"}),(0,r.mdx)(o.mW,{mdxType:"DefaultValueCell"},(0,r.mdx)("p",null,"none")),(0,r.mdx)(o.Ex,{mdxType:"DescriptionCell"},(0,r.mdx)("p",null,"String representing an attribute which identifies the element that labels the grid."))),(0,r.mdx)(o.X2,{key:"ROW2",mdxType:"Row"},(0,r.mdx)(o.O,{mdxType:"PropNameCell"},"ariaLabel"),(0,r.mdx)(o.Di,{mdxType:"TypeCell"},(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-javascript"},"string\n"))),(0,r.mdx)(o.dS,{isRequired:!1,mdxType:"RequiredCell"}),(0,r.mdx)(o.mW,{mdxType:"DefaultValueCell"},(0,r.mdx)("p",null,"none")),(0,r.mdx)(o.Ex,{mdxType:"DescriptionCell"},(0,r.mdx)("p",null,"String that labels the grid for accessibility. If ariaLabelledby is specified, ariaLabel will not be used."))),(0,r.mdx)(o.X2,{key:"ROW3",mdxType:"Row"},(0,r.mdx)(o.O,{mdxType:"PropNameCell"},"id"),(0,r.mdx)(o.Di,{mdxType:"TypeCell"},(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-javascript"},"string\n"))),(0,r.mdx)(o.dS,{isRequired:!0,mdxType:"RequiredCell"}),(0,r.mdx)(o.mW,{mdxType:"DefaultValueCell"},(0,r.mdx)("p",null,"none")),(0,r.mdx)(o.Ex,{mdxType:"DescriptionCell"},(0,r.mdx)("p",null,"String that will be used to identify the Grid. If multiple grids are on the same page, each grid should have\na unique id."))),(0,r.mdx)(o.X2,{key:"ROW4",mdxType:"Row"},(0,r.mdx)(o.O,{mdxType:"PropNameCell"},"columns"),(0,r.mdx)(o.Di,{mdxType:"TypeCell"},(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-javascript"},"arrayOf: [{\n  type: 'custom',\n}],\n"))),(0,r.mdx)(o.dS,{isRequired:!1,mdxType:"RequiredCell"}),(0,r.mdx)(o.mW,{mdxType:"DefaultValueCell"},(0,r.mdx)("p",null,"none")),(0,r.mdx)(o.Ex,{mdxType:"DescriptionCell"},(0,r.mdx)("p",null,"Data for columns. Columns will be presented in the order given."))),(0,r.mdx)(o.X2,{key:"ROW5",mdxType:"Row"},(0,r.mdx)(o.O,{mdxType:"PropNameCell"},"rows"),(0,r.mdx)(o.Di,{mdxType:"TypeCell"},(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-javascript"},"arrayOf: [{\n  type: 'custom',\n}],\n"))),(0,r.mdx)(o.dS,{isRequired:!1,mdxType:"RequiredCell"}),(0,r.mdx)(o.mW,{mdxType:"DefaultValueCell"},(0,r.mdx)("p",null,"none")),(0,r.mdx)(o.Ex,{mdxType:"DescriptionCell"},(0,r.mdx)("p",null,"Data for content in the body of the Grid. Rows will be rendered in the order given."))),(0,r.mdx)(o.X2,{key:"ROW6",mdxType:"Row"},(0,r.mdx)(o.O,{mdxType:"PropNameCell"},"columnWidth"),(0,r.mdx)(o.Di,{mdxType:"TypeCell"},(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-javascript"},"string\n"))),(0,r.mdx)(o.dS,{isRequired:!1,mdxType:"RequiredCell"}),(0,r.mdx)(o.mW,{mdxType:"DefaultValueCell"},(0,r.mdx)("p",null,"none")),(0,r.mdx)(o.Ex,{mdxType:"DescriptionCell"},(0,r.mdx)("p",null,"String that specifies the default width for columns in the grid. Any valid CSS width value is accepted.\nTo override the default value, provide width for the column that needs to be overridden."))),(0,r.mdx)(o.X2,{key:"ROW7",mdxType:"Row"},(0,r.mdx)(o.O,{mdxType:"PropNameCell"},"columnHeaderHeight"),(0,r.mdx)(o.Di,{mdxType:"TypeCell"},(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-javascript"},"string\n"))),(0,r.mdx)(o.dS,{isRequired:!1,mdxType:"RequiredCell"}),(0,r.mdx)(o.mW,{mdxType:"DefaultValueCell"},(0,r.mdx)("p",null,"none")),(0,r.mdx)(o.Ex,{mdxType:"DescriptionCell"},(0,r.mdx)("p",null,"String that specifies the column height. Any valid CSS height value is accepted."))),(0,r.mdx)(o.X2,{key:"ROW8",mdxType:"Row"},(0,r.mdx)(o.O,{mdxType:"PropNameCell"},"rowHeight"),(0,r.mdx)(o.Di,{mdxType:"TypeCell"},(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-javascript"},"string\n"))),(0,r.mdx)(o.dS,{isRequired:!1,mdxType:"RequiredCell"}),(0,r.mdx)(o.mW,{mdxType:"DefaultValueCell"},(0,r.mdx)("p",null,"none")),(0,r.mdx)(o.Ex,{mdxType:"DescriptionCell"},(0,r.mdx)("p",null,"String that specifies the height for the rows in the grid. Any valid CSS width value is accepted."))),(0,r.mdx)(o.X2,{key:"ROW9",mdxType:"Row"},(0,r.mdx)(o.O,{mdxType:"PropNameCell"},"rowHeaderIndex"),(0,r.mdx)(o.Di,{mdxType:"TypeCell"},(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-javascript"},"number\n"))),(0,r.mdx)(o.dS,{isRequired:!1,mdxType:"RequiredCell"}),(0,r.mdx)(o.mW,{mdxType:"DefaultValueCell"},(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-javascript"},"0\n"))),(0,r.mdx)(o.Ex,{mdxType:"DescriptionCell"},(0,r.mdx)("p",null,"Number indicating the index of the column that represents row header. Index is 0 based and cannot exceed one less than the number of columns in the grid."))),(0,r.mdx)(o.X2,{key:"ROW10",mdxType:"Row"},(0,r.mdx)(o.O,{mdxType:"PropNameCell"},"onCellSelect"),(0,r.mdx)(o.Di,{mdxType:"TypeCell"},(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-javascript"},"func\n"))),(0,r.mdx)(o.dS,{isRequired:!1,mdxType:"RequiredCell"}),(0,r.mdx)(o.mW,{mdxType:"DefaultValueCell"},(0,r.mdx)("p",null,"none")),(0,r.mdx)(o.Ex,{mdxType:"DescriptionCell"},(0,r.mdx)("p",null,"Callback function that is called when a selectable cell is selected. Parameters: ",(0,r.mdx)("inlineCode",{parentName:"p"},"onRowSelect(rowId, columnId)"),"."))),(0,r.mdx)(o.X2,{key:"ROW11",mdxType:"Row"},(0,r.mdx)(o.O,{mdxType:"PropNameCell"},"onRowSelect"),(0,r.mdx)(o.Di,{mdxType:"TypeCell"},(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-javascript"},"func\n"))),(0,r.mdx)(o.dS,{isRequired:!1,mdxType:"RequiredCell"}),(0,r.mdx)(o.mW,{mdxType:"DefaultValueCell"},(0,r.mdx)("p",null,"none")),(0,r.mdx)(o.Ex,{mdxType:"DescriptionCell"},(0,r.mdx)("p",null,"Function that is called when a selectable header cell is selected. Parameters: ",(0,r.mdx)("inlineCode",{parentName:"p"},"onColumnSelect(columnId)")))),(0,r.mdx)(o.X2,{key:"ROW12",mdxType:"Row"},(0,r.mdx)(o.O,{mdxType:"PropNameCell"},"onRowSelectAll"),(0,r.mdx)(o.Di,{mdxType:"TypeCell"},(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-javascript"},"func\n"))),(0,r.mdx)(o.dS,{isRequired:!1,mdxType:"RequiredCell"}),(0,r.mdx)(o.mW,{mdxType:"DefaultValueCell"},(0,r.mdx)("p",null,"none")),(0,r.mdx)(o.Ex,{mdxType:"DescriptionCell"},(0,r.mdx)("p",null,"Callback function that will be called when all rows are selected. Parameters: ",(0,r.mdx)("inlineCode",{parentName:"p"},"onSelectAllRows()"),"."))),(0,r.mdx)(o.X2,{key:"ROW13",mdxType:"Row"},(0,r.mdx)(o.O,{mdxType:"PropNameCell"},"onColumnSelect"),(0,r.mdx)(o.Di,{mdxType:"TypeCell"},(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-javascript"},"func\n"))),(0,r.mdx)(o.dS,{isRequired:!1,mdxType:"RequiredCell"}),(0,r.mdx)(o.mW,{mdxType:"DefaultValueCell"},(0,r.mdx)("p",null,"none")),(0,r.mdx)(o.Ex,{mdxType:"DescriptionCell"},(0,r.mdx)("p",null,"Function that is called when a selectable header cell is selected. Parameters: ",(0,r.mdx)("inlineCode",{parentName:"p"},"onColumnSelect(columnId)")))),(0,r.mdx)(o.X2,{key:"ROW14",mdxType:"Row"},(0,r.mdx)(o.O,{mdxType:"PropNameCell"},"onClearSelectedRows"),(0,r.mdx)(o.Di,{mdxType:"TypeCell"},(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-javascript"},"func\n"))),(0,r.mdx)(o.dS,{isRequired:!1,mdxType:"RequiredCell"}),(0,r.mdx)(o.mW,{mdxType:"DefaultValueCell"},(0,r.mdx)("p",null,"none")),(0,r.mdx)(o.Ex,{mdxType:"DescriptionCell"},(0,r.mdx)("p",null,"Callback function that is called when all selected rows need to be unselected."))),(0,r.mdx)(o.X2,{key:"ROW15",mdxType:"Row"},(0,r.mdx)(o.O,{mdxType:"PropNameCell"},"onDisableSelectableRows"),(0,r.mdx)(o.Di,{mdxType:"TypeCell"},(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-javascript"},"func\n"))),(0,r.mdx)(o.dS,{isRequired:!1,mdxType:"RequiredCell"}),(0,r.mdx)(o.mW,{mdxType:"DefaultValueCell"},(0,r.mdx)("p",null,"none")),(0,r.mdx)(o.Ex,{mdxType:"DescriptionCell"},(0,r.mdx)("p",null,"Callback function that is called when no row is selected and the row selection mode needs to turned off."))),(0,r.mdx)(o.X2,{key:"ROW16",mdxType:"Row"},(0,r.mdx)(o.O,{mdxType:"PropNameCell"},"hasSelectableRows"),(0,r.mdx)(o.Di,{mdxType:"TypeCell"},(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-javascript"},"bool\n"))),(0,r.mdx)(o.dS,{isRequired:!1,mdxType:"RequiredCell"}),(0,r.mdx)(o.mW,{mdxType:"DefaultValueCell"},(0,r.mdx)("p",null,"none")),(0,r.mdx)(o.Ex,{mdxType:"DescriptionCell"},(0,r.mdx)("p",null,"Boolean indicating whether or not the DataGrid should allow entire rows to be selectable. An additional column will be\nrendered to allow for row selection to occur.")))))}u.isMDXComponent=!0;var c=t(52357),y=(t(29033),["components"]),h={},N="wrapper";function g(e){var n=e.components,t=(0,a.Z)(e,y);return(0,r.mdx)(N,(0,l.Z)({},h,t,{components:n,mdxType:"MDXLayout"}),(0,r.mdx)(i,{mdxType:"Badge"}),(0,r.mdx)("h1",{id:"terra-worklistdatagrid-input"},"Terra WorklistDataGrid Input"),(0,r.mdx)("h2",{id:"getting-started"},"Getting Started"),(0,r.mdx)("ul",null,(0,r.mdx)("li",{parentName:"ul"},"Install with ",(0,r.mdx)("a",{parentName:"li",href:"https://www.npmjs.com/"},"npmjs"),":",(0,r.mdx)("ul",{parentName:"li"},(0,r.mdx)("li",{parentName:"ul"},(0,r.mdx)("inlineCode",{parentName:"li"},"npm install terra-worklist-data-grid"))))),(0,r.mdx)("h2",{id:"peer-dependencies"},"Peer Dependencies"),(0,r.mdx)("p",null,"This component requires the following peer dependencies be installed in your app for the component to properly function."),(0,r.mdx)("table",null,(0,r.mdx)("thead",{parentName:"table"},(0,r.mdx)("tr",{parentName:"thead"},(0,r.mdx)("th",{parentName:"tr",align:null},"Peer Dependency"),(0,r.mdx)("th",{parentName:"tr",align:null},"Version"))),(0,r.mdx)("tbody",{parentName:"table"},(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},"react"),(0,r.mdx)("td",{parentName:"tr",align:null},"^16.8.5")),(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},"react-dom"),(0,r.mdx)("td",{parentName:"tr",align:null},"^16.8.5")),(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},"react-intl"),(0,r.mdx)("td",{parentName:"tr",align:null},"^2.8.0")))),(0,r.mdx)("h2",{id:"component-features"},"Component Features"),(0,r.mdx)("ul",null,(0,r.mdx)("li",{parentName:"ul"},(0,r.mdx)("a",{parentName:"li",href:"https://engineering.cerner.com/terra-ui/about/terra-ui/component-standards#cross-browser-support"},"Cross-Browser Support")),(0,r.mdx)("li",{parentName:"ul"},(0,r.mdx)("a",{parentName:"li",href:"https://engineering.cerner.com/terra-ui/about/terra-ui/component-standards#mobile-support"},"Mobile Support")),(0,r.mdx)("li",{parentName:"ul"},(0,r.mdx)("a",{parentName:"li",href:"https://engineering.cerner.com/terra-ui/about/terra-ui/component-standards#internationalization-i18n"},"Internationalization Support")),(0,r.mdx)("li",{parentName:"ul"},(0,r.mdx)("a",{parentName:"li",href:"https://engineering.cerner.com/terra-ui/about/terra-ui/component-standards#ltr--rtl"},"LTR/RTL Support"))),(0,r.mdx)("h2",{id:"examples"},"Examples"),(0,r.mdx)(c.Z,{title:"Default Worklist Data Grid",mdxType:"DefaultWorklistDataGrid"}),(0,r.mdx)("h2",{id:"grid-props-table"},"Grid props table"),(0,r.mdx)(u,{mdxType:"WorklistDataGridPropsTable"}),(0,r.mdx)("h3",{id:"rows"},"Rows"),(0,r.mdx)("p",null,"Rows define the cells rendered within the row as well as the row's selection properties.\nThe order in which the rows are provided will be the order in which they are rendered."),(0,r.mdx)("table",null,(0,r.mdx)("thead",{parentName:"table"},(0,r.mdx)("tr",{parentName:"thead"},(0,r.mdx)("th",{parentName:"tr",align:null},"Name"),(0,r.mdx)("th",{parentName:"tr",align:null},"Type"),(0,r.mdx)("th",{parentName:"tr",align:null},"Is Required"),(0,r.mdx)("th",{parentName:"tr",align:null},"Default Value"),(0,r.mdx)("th",{parentName:"tr",align:null},"Description"))),(0,r.mdx)("tbody",{parentName:"table"},(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("strong",{parentName:"td"},"id")),(0,r.mdx)("td",{parentName:"tr",align:null},"string"),(0,r.mdx)("td",{parentName:"tr",align:null},"required"),(0,r.mdx)("td",{parentName:"tr",align:null},"none"),(0,r.mdx)("td",{parentName:"tr",align:null},"An identifier for the row. This identifier should be unique across the set of rows provided to the Grid.")),(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("strong",{parentName:"td"},"ariaLabel")),(0,r.mdx)("td",{parentName:"tr",align:null},"string"),(0,r.mdx)("td",{parentName:"tr",align:null},"optional"),(0,r.mdx)("td",{parentName:"tr",align:null},"none"),(0,r.mdx)("td",{parentName:"tr",align:null},"A string identifier used to describe the row contents. This value will be used for accessibilty when announcing the row that is selected or deselected.")),(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("strong",{parentName:"td"},"isSelectable")),(0,r.mdx)("td",{parentName:"tr",align:null},"bool"),(0,r.mdx)("td",{parentName:"tr",align:null},"optional"),(0,r.mdx)("td",{parentName:"tr",align:null},"none"),(0,r.mdx)("td",{parentName:"tr",align:null},"A boolean indicating whether or not the row is selectable.")),(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("strong",{parentName:"td"},"isSelected")),(0,r.mdx)("td",{parentName:"tr",align:null},"bool"),(0,r.mdx)("td",{parentName:"tr",align:null},"optional"),(0,r.mdx)("td",{parentName:"tr",align:null},"none"),(0,r.mdx)("td",{parentName:"tr",align:null},"A boolean indicating whether or not the row should render as selected.")),(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("strong",{parentName:"td"},"cells")),(0,r.mdx)("td",{parentName:"tr",align:null},"array"),(0,r.mdx)("td",{parentName:"tr",align:null},"optional"),(0,r.mdx)("td",{parentName:"tr",align:null},"[]"),(0,r.mdx)("td",{parentName:"tr",align:null},"An array of cell objects that define the content to be rendered in the row. The order in which the cells are rendered is determined by the order in which they are provided.")))),(0,r.mdx)("h3",{id:"cells"},"Cells"),(0,r.mdx)("p",null,"Cells define the content rendered in a given row, and column. Cells will be rendered in the order given and are expected to be in the same order as the column."),(0,r.mdx)("table",null,(0,r.mdx)("thead",{parentName:"table"},(0,r.mdx)("tr",{parentName:"thead"},(0,r.mdx)("th",{parentName:"tr",align:null},"Name"),(0,r.mdx)("th",{parentName:"tr",align:null},"Type"),(0,r.mdx)("th",{parentName:"tr",align:null},"Is Required"),(0,r.mdx)("th",{parentName:"tr",align:null},"Default Value"),(0,r.mdx)("th",{parentName:"tr",align:null},"Description"))),(0,r.mdx)("tbody",{parentName:"table"},(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("strong",{parentName:"td"},"isSelectable")),(0,r.mdx)("td",{parentName:"tr",align:null},"bool"),(0,r.mdx)("td",{parentName:"tr",align:null},"optional"),(0,r.mdx)("td",{parentName:"tr",align:null},"none"),(0,r.mdx)("td",{parentName:"tr",align:null},"A boolean indicating whether or not the cell is selectable.")),(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("strong",{parentName:"td"},"isMasked")),(0,r.mdx)("td",{parentName:"tr",align:null},"bool"),(0,r.mdx)("td",{parentName:"tr",align:null},"optional"),(0,r.mdx)("td",{parentName:"tr",align:null},"none"),(0,r.mdx)("td",{parentName:"tr",align:null},"A boolean indicating whether or not the cell is masked.")),(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("strong",{parentName:"td"},"content")),(0,r.mdx)("td",{parentName:"tr",align:null},"content"),(0,r.mdx)("td",{parentName:"tr",align:null},"optional"),(0,r.mdx)("td",{parentName:"tr",align:null},"none"),(0,r.mdx)("td",{parentName:"tr",align:null},"The content to render within the cell.")))),(0,r.mdx)("h2",{id:"testing"},"Testing"))}g.isMDXComponent=!0},52357:function(e,n,t){t.d(n,{Z:function(){return s}});var l=t(67294),a=t(13576),d=t(87462),r=t(44925),m=t(81254),i=["components"],o={};function p(e){var n=e.components,t=(0,r.Z)(e,i);return(0,m.mdx)("wrapper",(0,d.Z)({},o,t,{components:n,mdxType:"MDXLayout"}),(0,m.mdx)("pre",null,(0,m.mdx)("code",{parentName:"pre",className:"language-jsx"},"import React from 'react';\nimport WorklistDataGrid from 'terra-worklist-data-grid';\n\nconst gridDataJSON = {\n  cols: [\n    { id: 'Column-0', displayName: 'Patient' },\n    { id: 'Column-1', displayName: 'Location' },\n    { id: 'Column-2', displayName: 'Illness Severity' },\n    { id: 'Column-3', displayName: 'Visit' },\n    { id: 'Column-4', displayName: 'Allergy' },\n    { id: 'Column-5', displayName: 'Primary Contact' },\n    { id: 'Column-6', displayName: 'Generic Order Counts' },\n    { id: 'Column-7', displayName: 'Patient Age' },\n    { id: 'Column-8', displayName: 'Medication History' },\n    { id: 'Column-9', displayName: 'My Relationship' },\n    { id: 'Column-10', displayName: 'Not Selectable', isSelectable: false },\n  ],\n  rows: [\n    {\n      id: '1',\n      cells: [\n        { content: 'Fleck, Arthur' },\n        { content: '1007-MTN' },\n        { content: 'Unstable' },\n        { content: 'Inpatient, 2 months' },\n        { content: '' },\n        { content: 'Quinzell, Harleen' },\n        { content: '' },\n        { isMasked: true },\n        { isMasked: true },\n        { content: 'Admitting Physician' },\n        { content: '', isSelectable: false },\n      ],\n    },\n    {\n      id: '2',\n      cells: [\n        { content: 'Wayne, Bruce' },\n        { content: '1007-MTN-DR' },\n        { content: 'Stable' },\n        { content: 'Outpatient, 2 days' },\n        { content: 'Phytochemicals' },\n        { content: 'Grayson, Richard' },\n        { content: '' },\n        { content: '' },\n        { isMasked: true },\n        { content: 'Admitting Physician' },\n        { content: '', isSelectable: false },\n      ],\n    },\n  ],\n};\n\nconst DefaultWorklistDataGrid = () => {\n  const rowHeaderIndex = 0;\n  const { cols, rows } = gridDataJSON;\n\n  return (\n    <React.Fragment>\n      <WorklistDataGrid\n        id=\"default-terra-worklist-data-grid\"\n        columns={cols}\n        rows={rows}\n        rowHeaderIndex={rowHeaderIndex}\n        rowHeight=\"50px\"\n        columnWidth=\"50px\"\n        columnHeaderHeight=\"50px\"\n        ariaLabel=\"Worklist Data Grid\"\n      />\n    </React.Fragment>\n  );\n};\n\nexport default DefaultWorklistDataGrid;\n\n")))}p.isMDXComponent=!0;var x=t(49271),s=function(e){var n=e.title,t=e.description,d=e.isExpanded;return l.createElement(x.Z,{title:n||"Default Worklist Data Grid",description:t,example:l.createElement(a.Z,null),exampleSrc:l.createElement(p,null),isExpanded:d})}},13576:function(e,n,t){var l=t(64836);n.Z=void 0;var a=l(t(67294)),d=l(t(72095)),r=[{id:"Column-0",displayName:"Patient"},{id:"Column-1",displayName:"Location"},{id:"Column-2",displayName:"Illness Severity"},{id:"Column-3",displayName:"Visit"},{id:"Column-4",displayName:"Allergy"},{id:"Column-5",displayName:"Primary Contact"},{id:"Column-6",displayName:"Generic Order Counts"},{id:"Column-7",displayName:"Patient Age"},{id:"Column-8",displayName:"Medication History"},{id:"Column-9",displayName:"My Relationship"},{id:"Column-10",displayName:"Not Selectable",isSelectable:!1}],m=[{id:"1",cells:[{content:"Fleck, Arthur"},{content:"1007-MTN"},{content:"Unstable"},{content:"Inpatient, 2 months"},{content:""},{content:"Quinzell, Harleen"},{content:""},{isMasked:!0},{isMasked:!0},{content:"Admitting Physician"},{content:"",isSelectable:!1}]},{id:"2",cells:[{content:"Wayne, Bruce"},{content:"1007-MTN-DR"},{content:"Stable"},{content:"Outpatient, 2 days"},{content:"Phytochemicals"},{content:"Grayson, Richard"},{content:""},{content:""},{isMasked:!0},{content:"Admitting Physician"},{content:"",isSelectable:!1}]}],i=function(){var e=r,n=m;return a.default.createElement(a.default.Fragment,null,a.default.createElement(d.default,{id:"default-terra-worklist-data-grid",columns:e,rows:n,rowHeaderIndex:0,rowHeight:"50px",columnWidth:"50px",columnHeaderHeight:"50px",ariaLabel:"Worklist Data Grid"}))};n.Z=i}}]);