"use strict";(self.webpackChunkterra_framework=self.webpackChunkterra_framework||[]).push([[90519],{49271:function(e,t,n){var l=n(64836),o=n(18698);t.Z=void 0;var a=l(n(27424)),c=function(e,t){if(!t&&e&&e.__esModule)return e;if(null===e||"object"!==o(e)&&"function"!=typeof e)return{default:e};var n=p(t);if(n&&n.has(e))return n.get(e);var l={},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var c in e)if("default"!==c&&Object.prototype.hasOwnProperty.call(e,c)){var r=a?Object.getOwnPropertyDescriptor(e,c):null;r&&(r.get||r.set)?Object.defineProperty(l,c,r):l[c]=e[c]}l.default=e,n&&n.set(e,l);return l}(n(67294)),r=l(n(45697)),i=l(n(47166)),s=n(21538),d=l(n(33864)),u=l(n(23399)),m=n(51051),f=l(n(53560));function p(e){if("function"!=typeof WeakMap)return null;var t=new WeakMap,n=new WeakMap;return(p=function(e){return e?n:t})(e)}var w=i.default.bind(f.default),S={example:r.default.element,exampleSrc:r.default.element,exampleCssSrc:r.default.element,title:r.default.string,description:r.default.node,isExpanded:r.default.bool},b=function(e){e.currentTarget.setAttribute("data-focus-styles-enabled","true")},h=function(e){e.currentTarget.setAttribute("data-focus-styles-enabled","false")},R=function(e){var t=e.example,n=e.exampleSrc,l=e.exampleCssSrc,o=e.title,r=e.description,i=e.isExpanded,f=(0,c.useState)(i),p=(0,a.default)(f,2),S=p[0],R=p[1],_=(0,c.useState)(!1),y=(0,a.default)(_,2),v=y[0],C=y[1],g=c.default.useContext(s.ThemeContext),E=void 0!==l,k=function(){C(!v),S&&R(!S)},x=function(){R(!S),v&&C(!v)},N=function(e,t){e.nativeEvent.keyCode!==m.KEY_SPACE&&e.nativeEvent.keyCode!==m.KEY_RETURN||(e.preventDefault(),t())};return c.default.createElement("div",{className:w("template",g.className)},c.default.createElement("div",{className:w("header")},o&&c.default.createElement("h2",{className:w("title")},o)),c.default.createElement("div",{className:w("content")},r&&c.default.createElement("div",{className:w("description")},r),t),c.default.createElement("div",{className:w("footer")},n?c.default.createElement("div",{className:w("button-container")},E&&c.default.createElement("button",{type:"button",className:w("css-toggle","item",{"is-selected":v}),onClick:k,onKeyDown:function(e){return N(e,k)},onBlur:b,onMouseDown:h,tabIndex:0,"data-focus-styles-enabled":!0},c.default.createElement(d.default,{className:w("chevron")}),c.default.createElement("span",null,"CSS"),c.default.createElement(u.default,{className:w("chevron")})),c.default.createElement("button",{type:"button",className:w("code-toggle","item",{"is-selected":S}),onClick:x,onKeyDown:function(e){return N(e,x)},onBlur:b,onMouseDown:h,tabIndex:0,"data-focus-styles-enabled":!0},c.default.createElement(d.default,{className:w("chevron")}),c.default.createElement("span",null,"Code"),c.default.createElement(u.default,{className:w("chevron")}))):null,c.default.createElement("div",null,v&&c.default.createElement("div",{className:w("css")},l),S&&c.default.createElement("div",{className:w("code")},n))))};R.propTypes=S,R.defaultProps={isExpanded:!1};var _=R;t.Z=_},62280:function(e,t,n){n.r(t),n.d(t,{default:function(){return S}});var l=n(87462),o=n(44925),a=n(67294),c=n(81254),r=n(50672),i=["components"],s={};function d(e){var t=e.components,n=(0,o.Z)(e,i);return(0,c.mdx)("wrapper",(0,l.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,c.mdx)("pre",null,(0,c.mdx)("code",{parentName:"pre",className:"language-jsx"},"import React, { useState, useRef, useCallback } from 'react';\nimport WorklistDataGrid from 'terra-worklist-data-grid';\n\nconst gridDataJSON = {\n  cols: [\n    { id: 'Column-0', displayName: 'Patient' },\n    { id: 'Column-1', displayName: 'Location' },\n    { id: 'Column-2', displayName: 'Illness Severity' },\n    { id: 'Column-3', displayName: 'Visit' },\n    { id: 'Column-4', displayName: 'Allergy' },\n    { id: 'Column-5', displayName: 'Primary Contact' },\n    { id: 'Column-6', displayName: 'Generic Order Counts' },\n    { id: 'Column-7', displayName: 'Patient Age' },\n    { id: 'Column-8', displayName: 'Medication History' },\n    { id: 'Column-9', displayName: 'My Relationship' },\n    { id: 'Column-10', displayName: 'Not Selectable', isSelectable: false },\n  ],\n  rows: [\n    {\n      id: '1',\n      cells: [\n        { content: 'Fleck, Arthur' },\n        { content: '1007-MTN' },\n        { content: 'Unstable' },\n        { content: 'Inpatient, 2 months' },\n        { content: '' },\n        { content: 'Quinzell, Harleen' },\n        { content: '' },\n        { isMasked: true },\n        { isMasked: true },\n        { content: 'Admitting Physician' },\n        { content: '', isSelectable: false },\n      ],\n    },\n    {\n      id: '2',\n      cells: [\n        { content: 'Wayne, Bruce' },\n        { content: '1007-MTN-DR' },\n        { content: 'Stable' },\n        { content: 'Outpatient, 2 days' },\n        { content: 'Phytochemicals' },\n        { content: 'Grayson, Richard' },\n        { content: '' },\n        { content: '' },\n        { isMasked: true },\n        { content: 'Admitting Physician' },\n        { content: '', isSelectable: false },\n      ],\n    },\n  ],\n};\n\nconst RowSelection = () => {\n  const rowSelectionModeRef = useRef();\n  const rowHeaderIndex = 0;\n  const { cols, rows } = gridDataJSON;\n  const [selectedRows, setSelectedRows] = useState([]);\n  const [hasSelectableRows, setHasSelectableRows] = useState(false);\n\n  const determineSelectedRows = useCallback((allRowsSelected, userSelectedRow) => {\n    if (!userSelectedRow) {\n      return [];\n    }\n\n    let remainingSelectedRow = [];\n    if (allRowsSelected) {\n      remainingSelectedRow = userSelectedRow;\n    } else if (selectedRows.includes(userSelectedRow[0])) {\n      // Row Deselected so remove this rowId.\n      remainingSelectedRow = selectedRows.filter(row => (row !== userSelectedRow[0]));\n    } else {\n      // Row Selected so add this rowId.\n      remainingSelectedRow = remainingSelectedRow.concat(selectedRows);\n      remainingSelectedRow.push(userSelectedRow[0]);\n    }\n    return remainingSelectedRow;\n  }, [selectedRows]);\n\n  const clearRowSelection = useCallback(() => {\n    // eslint-disable-next-line no-param-reassign\n    rows.forEach(r => { if (r.isSelected) { r.isSelected = false; } });\n    setSelectedRows([]);\n  }, [rows]);\n\n  const disableSelectableRows = useCallback(() => {\n    rowSelectionModeRef.current.checked = false;\n    setHasSelectableRows(false);\n    clearRowSelection();\n  }, [clearRowSelection]);\n\n  const onRowSelect = useCallback((rowsToSelectAndUnSelect) => {\n    rowsToSelectAndUnSelect.forEach((changedRow) => {\n      const dataRowToUpdate = rows.find(row => row.id === changedRow.id);\n      if (dataRowToUpdate) {\n        dataRowToUpdate.isSelected = changedRow.selected;\n      }\n    });\n  }, [rows]);\n\n  const onRowSelectAll = useCallback(() => {\n    const newRows = [];\n    // eslint-disable-next-line no-param-reassign\n    rows.forEach(row => { row.isSelected = true; newRows.push(row.id); });\n    setSelectedRows(determineSelectedRows(true, newRows));\n  }, [determineSelectedRows, rows]);\n\n  const onRowSelectionModeChange = (event) => {\n    if (!event.target.checked) {\n      clearRowSelection();\n    }\n    setHasSelectableRows(event.target.checked);\n  };\n\n  const enableRowSelection = useCallback(() => {\n    if (!rowSelectionModeRef.current.checked) {\n      rowSelectionModeRef.current.checked = true;\n    }\n    setHasSelectableRows(true);\n  }, []);\n\n  return (\n    <React.Fragment>\n      <div>\n        <label htmlFor=\"rowSelectionMode\"><b>Row Selection Mode</b></label>\n        <input\n          id=\"rowSelectionMode\"\n          type=\"checkbox\"\n          ref={rowSelectionModeRef}\n          onChange={onRowSelectionModeChange}\n        />\n      </div>\n      <WorklistDataGrid\n        id=\"pinned-columns-with-row-selection\"\n        pinnedColumns={cols.slice(0, 3)}\n        overflowColumns={cols.slice(3)}\n        rows={[...rows]}\n        rowHeaderIndex={rowHeaderIndex}\n        defaultColumnWidth={180}\n        ariaLabel=\"Worklist Data Grid with Pinned Columns and Row Selection\"\n        hasSelectableRows={hasSelectableRows}\n        onRowSelect={onRowSelect}\n        onRowSelectAll={onRowSelectAll}\n        onClearSelectedRows={clearRowSelection}\n        onDisableSelectableRows={disableSelectableRows}\n        onEnableRowSelection={enableRowSelection}\n      />\n    </React.Fragment>\n  );\n};\n\nexport default RowSelection;\n\n")))}d.isMDXComponent=!0;var u=n(49271),m=function(e){var t=e.title,n=e.description,l=e.isExpanded;return a.createElement(u.Z,{title:t||"Pinned Columns With Row Selection",description:n,example:a.createElement(r.Z,null),exampleSrc:a.createElement(d,null),isExpanded:l})},f=["components"],p={},w="wrapper";function S(e){var t=e.components,n=(0,o.Z)(e,f);return(0,c.mdx)(w,(0,l.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,c.mdx)(m,{title:"Worklist Data Grid with Pinned Columns and Row Selection",mdxType:"PinnedColumnsWithRowSelection"}))}S.isMDXComponent=!0},50672:function(e,t,n){var l=n(64836),o=n(18698);t.Z=void 0;var a=l(n(861)),c=l(n(27424)),r=function(e,t){if(!t&&e&&e.__esModule)return e;if(null===e||"object"!==o(e)&&"function"!=typeof e)return{default:e};var n=s(t);if(n&&n.has(e))return n.get(e);var l={},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var c in e)if("default"!==c&&Object.prototype.hasOwnProperty.call(e,c)){var r=a?Object.getOwnPropertyDescriptor(e,c):null;r&&(r.get||r.set)?Object.defineProperty(l,c,r):l[c]=e[c]}l.default=e,n&&n.set(e,l);return l}(n(67294)),i=l(n(72095));function s(e){if("function"!=typeof WeakMap)return null;var t=new WeakMap,n=new WeakMap;return(s=function(e){return e?n:t})(e)}var d=[{id:"Column-0",displayName:"Patient"},{id:"Column-1",displayName:"Location"},{id:"Column-2",displayName:"Illness Severity"},{id:"Column-3",displayName:"Visit"},{id:"Column-4",displayName:"Allergy"},{id:"Column-5",displayName:"Primary Contact"},{id:"Column-6",displayName:"Generic Order Counts"},{id:"Column-7",displayName:"Patient Age"},{id:"Column-8",displayName:"Medication History"},{id:"Column-9",displayName:"My Relationship"},{id:"Column-10",displayName:"Not Selectable",isSelectable:!1}],u=[{id:"1",cells:[{content:"Fleck, Arthur"},{content:"1007-MTN"},{content:"Unstable"},{content:"Inpatient, 2 months"},{content:""},{content:"Quinzell, Harleen"},{content:""},{isMasked:!0},{isMasked:!0},{content:"Admitting Physician"},{content:"",isSelectable:!1}]},{id:"2",cells:[{content:"Wayne, Bruce"},{content:"1007-MTN-DR"},{content:"Stable"},{content:"Outpatient, 2 days"},{content:"Phytochemicals"},{content:"Grayson, Richard"},{content:""},{content:""},{isMasked:!0},{content:"Admitting Physician"},{content:"",isSelectable:!1}]}],m=function(){var e=(0,r.useRef)(),t=d,n=u,l=(0,r.useState)([]),o=(0,c.default)(l,2),s=o[0],m=o[1],f=(0,r.useState)(!1),p=(0,c.default)(f,2),w=p[0],S=p[1],b=(0,r.useCallback)((function(e,t){if(!t)return[];var n=[];return e?n=t:s.includes(t[0])?n=s.filter((function(e){return e!==t[0]})):(n=n.concat(s)).push(t[0]),n}),[s]),h=(0,r.useCallback)((function(){n.forEach((function(e){e.isSelected&&(e.isSelected=!1)})),m([])}),[n]),R=(0,r.useCallback)((function(){e.current.checked=!1,S(!1),h()}),[h]),_=(0,r.useCallback)((function(e){e.forEach((function(e){var t=n.find((function(t){return t.id===e.id}));t&&(t.isSelected=e.selected)}))}),[n]),y=(0,r.useCallback)((function(){var e=[];n.forEach((function(t){t.isSelected=!0,e.push(t.id)})),m(b(!0,e))}),[b,n]),v=(0,r.useCallback)((function(){e.current.checked||(e.current.checked=!0),S(!0)}),[]);return r.default.createElement(r.default.Fragment,null,r.default.createElement("div",null,r.default.createElement("label",{htmlFor:"rowSelectionMode"},r.default.createElement("b",null,"Row Selection Mode")),r.default.createElement("input",{id:"rowSelectionMode",type:"checkbox",ref:e,onChange:function(e){e.target.checked||h(),S(e.target.checked)}})),r.default.createElement(i.default,{id:"pinned-columns-with-row-selection",pinnedColumns:t.slice(0,3),overflowColumns:t.slice(3),rows:(0,a.default)(n),rowHeaderIndex:0,defaultColumnWidth:180,ariaLabel:"Worklist Data Grid with Pinned Columns and Row Selection",hasSelectableRows:w,onRowSelect:_,onRowSelectAll:y,onClearSelectedRows:h,onDisableSelectableRows:R,onEnableRowSelection:v}))};t.Z=m},53560:function(e,t,n){n.r(t),t.default={"clinical-lowlight-theme":"ExampleTemplate-module__clinical-lowlight-theme___rBbtD","orion-fusion-theme":"ExampleTemplate-module__orion-fusion-theme___GzA23",template:"ExampleTemplate-module__template___a4uPk",header:"ExampleTemplate-module__header___iFXV3",content:"ExampleTemplate-module__content___48m4Q",description:"ExampleTemplate-module__description___NwBJo",footer:"ExampleTemplate-module__footer___GpSoG","button-container":"ExampleTemplate-module__button-container___rAD11",css:"ExampleTemplate-module__css___+jtk1",code:"ExampleTemplate-module__code___7rC6C","css-toggle":"ExampleTemplate-module__css-toggle___chHK7","code-toggle":"ExampleTemplate-module__code-toggle___TGlE-","is-selected":"ExampleTemplate-module__is-selected___0BYwS",item:"ExampleTemplate-module__item___8FTQq",chevron:"ExampleTemplate-module__chevron___VbY7N",title:"ExampleTemplate-module__title___r+nbJ","dynamic-content":"ExampleTemplate-module__dynamic-content___k+1H7"}},33864:function(e,t,n){Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var l=a(n(67294)),o=a(n(99139));function a(e){return e&&e.__esModule?e:{default:e}}function c(){return c=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var l in n)Object.prototype.hasOwnProperty.call(n,l)&&(e[l]=n[l])}return e},c.apply(this,arguments)}var r=function(e){var t=c({},e);return l.default.createElement(o.default,t,l.default.createElement("path",{d:"M10.3 24 33.8 0l3.9 3.8L18 24l19.7 20.2-3.9 3.8z"}))};r.displayName="IconChevronLeft",r.defaultProps={viewBox:"0 0 48 48","data-name":"Layer 1",xmlns:"http://www.w3.org/2000/svg"};var i=r;t.default=i},87462:function(e,t,n){function l(){return l=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var l in n)Object.prototype.hasOwnProperty.call(n,l)&&(e[l]=n[l])}return e},l.apply(this,arguments)}n.d(t,{Z:function(){return l}})},44925:function(e,t,n){function l(e,t){if(null==e)return{};var n,l,o=function(e,t){if(null==e)return{};var n,l,o={},a=Object.keys(e);for(l=0;l<a.length;l++)n=a[l],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(l=0;l<a.length;l++)n=a[l],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}n.d(t,{Z:function(){return l}})}}]);