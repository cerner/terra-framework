"use strict";(self.webpackChunkterra_framework=self.webpackChunkterra_framework||[]).push([[77956],{76832:function(e,n,t){t.r(n),t.d(n,{default:function(){return i}});var l=t(45072),a=t(52822),r=(t(11504),t(69788)),d=t(13804),o=["components"],s={},m="wrapper";function i(e){var n=e.components,t=(0,a.c)(e,o);return(0,r.mdx)(m,(0,l.c)({},s,t,{components:n,mdxType:"MDXLayout"}),(0,r.mdx)("h1",{id:"expand-and-collapse"},"Expand and Collapse"),(0,r.mdx)("h3",{id:"description"},"Description"),(0,r.mdx)("p",null,"The example below demonstrates expandable and collapsible folders."),(0,r.mdx)("h3",{id:"required-properties"},"Required Properties"),(0,r.mdx)("p",null,"The consuming component controls the expanded and collapsed state.\nThe following FolderTree.Item properties are required for expand and collapse:"),(0,r.mdx)("ul",null,(0,r.mdx)("li",{parentName:"ul"},(0,r.mdx)("strong",{parentName:"li"},(0,r.mdx)("a",{parentName:"strong",href:"../about#foldertreeitem-props-table"},"isExpanded"),":")," Identifies whether the FolderTree.Item is currently expanded. "),(0,r.mdx)("li",{parentName:"ul"},(0,r.mdx)("strong",{parentName:"li"},(0,r.mdx)("a",{parentName:"strong",href:"../about#foldertreeitem-props-table"},"onToggle"),":")," This callback is requested when interacting with a row that has ",(0,r.mdx)("inlineCode",{parentName:"li"},"subfolderItems")," with one of the following methods:",(0,r.mdx)("ul",{parentName:"li"},(0,r.mdx)("li",{parentName:"ul"},(0,r.mdx)("strong",{parentName:"li"},"Mouse click:"),(0,r.mdx)("ul",{parentName:"li"},(0,r.mdx)("li",{parentName:"ul"},"Selecting anywhere but the radio button on a row that has ",(0,r.mdx)("inlineCode",{parentName:"li"},"subfolderItems"),"."))),(0,r.mdx)("li",{parentName:"ul"},(0,r.mdx)("strong",{parentName:"li"},"Keyboard:"),(0,r.mdx)("ul",{parentName:"li"},(0,r.mdx)("li",{parentName:"ul"},"Pressing the RIGHT ARROW key on an active, collapsed row that has ",(0,r.mdx)("inlineCode",{parentName:"li"},"subfolderItems"),", or the LEFT ARROW key on an active, expanded row that has ",(0,r.mdx)("inlineCode",{parentName:"li"},"subfolderItems"),"."))))),(0,r.mdx)("li",{parentName:"ul"},(0,r.mdx)("strong",{parentName:"li"},(0,r.mdx)("a",{parentName:"strong",href:"../about#foldertreeitem-props-table"},"subfolderItems"),":")," Only FolderTree.Items that have ",(0,r.mdx)("inlineCode",{parentName:"li"},"subfolderItems")," with one or more items can be expanded and collapsed.\nThese FolderTree.Items display a folder icon.")),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-js"},'// Initialize folders to be collapsed\nconst [expandedItems, setExpandedItems] = React.useState({\n  "row-item-1": false\n});\n\nconst handleExpandCollapse = (key) => {\n  const newExpandedItems = {\n    ...expandedItems,\n    [key]: !expandedItems[key],\n  };\n  setExpandedItems(newExpandedItems);\n};\n\n<FolderTree.Item\n  key="row-item-1"\n  label="Projects"\n  isExpanded={expandedItems["row-item-1"]}\n  onToggle={() => {handleExpandCollapse("row-item-1")}}\n  subfolderItems=[...]\n/>\n')),(0,r.mdx)(d.c,{mdxType:"FolderTreeExpandCollapse"}))}i.isMDXComponent=!0},84576:function(e,n,t){t.d(n,{c:function(){return m}});var l=t(45072),a=t(52822),r=(t(11504),t(69788)),d=["components"],o={},s="wrapper";function m(e){var n=e.components,t=(0,a.c)(e,d);return(0,r.mdx)(s,(0,l.c)({},o,t,{components:n,mdxType:"MDXLayout"}),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-scss"},":local {\n  .content-wrapper {\n    position: relative;\n    width: 300px;\n  }\n}\n\n")))}m.isMDXComponent=!0},13804:function(e,n,t){t.d(n,{c:function(){return u}});var l=t(11504),a=t(98555),r=t(45072),d=t(52822),o=t(69788),s=["components"],m={};function i(e){var n=e.components,t=(0,d.c)(e,s);return(0,o.mdx)("wrapper",(0,r.c)({},m,t,{components:n,mdxType:"MDXLayout"}),(0,o.mdx)("pre",null,(0,o.mdx)("code",{parentName:"pre",className:"language-jsx"},"import React from 'react';\nimport classNames from 'classnames/bind';\n\nimport { IconDocuments } from 'terra-icon';\nimport FolderTree from 'terra-folder-tree';\n\nimport styles from './BasicFolderTree.module.scss';\n\nconst cx = classNames.bind(styles);\n\nconst data = {\n  title: 'Documents',\n  items: [\n    {\n      id: 'item-1-level-1',\n      label: 'Projects - Level 1',\n      items: [\n        {\n          id: 'item-1-level-2',\n          label: 'Projects - Level 2',\n          items: [\n            {\n              id: 'item-1-level-3',\n              label: 'Projects - Level 3',\n              items: [\n                {\n                  id: 'item-1-level-4',\n                  label: 'Projects - Level 4',\n                  items: [\n                    { id: 'item-1-level-5', label: 'Nested Document', icon: <IconDocuments /> },\n                  ],\n                },\n              ],\n            },\n          ],\n        },\n      ],\n    },\n  ],\n};\n\nconst folderExpandedState = {\n  'item-1-level-1': false,\n  'item-1-level-2': false,\n  'item-1-level-3': false,\n  'item-1-level-4': false,\n};\n\nconst FolderTreeExpandCollapse = () => {\n  const [selectedKey, setSelectedKey] = React.useState('');\n  const [expandedItems, setExpandedItems] = React.useState(folderExpandedState);\n\n  const handleExpandCollapseKeys = (key) => {\n    const newExpandedItems = {\n      ...expandedItems,\n      [key]: !expandedItems[key],\n    };\n    setExpandedItems(newExpandedItems);\n  };\n\n  const handleExpandAll = () => {\n    const newExpandedItems = {\n      ...expandedItems,\n    };\n    Object.keys(newExpandedItems).forEach(v => { newExpandedItems[v] = true; });\n\n    setExpandedItems(newExpandedItems);\n  };\n\n  const handleCollapseAll = () => {\n    const newExpandedItems = {\n      ...expandedItems,\n    };\n    Object.keys(newExpandedItems).forEach(v => { newExpandedItems[v] = false; });\n\n    setExpandedItems(newExpandedItems);\n  };\n\n  const buildFolderTreeItems = (items) => {\n    if (items) {\n      const elements = [];\n      items.forEach(item => {\n        elements.push(\n          <FolderTree.Item\n            key={item.id}\n            label={item.label}\n            icon={item.icon}\n            subfolderItems={buildFolderTreeItems(item.items)}\n            isExpanded={expandedItems[item.id]}\n            isSelected={selectedKey === item.id}\n            onSelect={() => { setSelectedKey(item.id); }}\n            onToggle={() => { handleExpandCollapseKeys(item.id); }}\n          />,\n        );\n      });\n      return elements;\n    }\n\n    return null;\n  };\n\n  return (\n    <div className={cx('content-wrapper')}>\n      <FolderTree\n        title=\"Documents\"\n        onExpandAll={handleExpandAll}\n        onCollapseAll={handleCollapseAll}\n      >\n        {buildFolderTreeItems(data.items)}\n      </FolderTree>\n    </div>\n  );\n};\n\nexport default FolderTreeExpandCollapse;\n\n")))}i.isMDXComponent=!0;var c=t(33792),p=t(84576),u=function(e){var n=e.title,t=e.description,r=e.isExpanded;return l.createElement(c.c,{title:n||"Folder Tree Expand Collapse",description:t,example:l.createElement(a.c,null),exampleCssSrc:l.createElement(p.c,null),exampleSrc:l.createElement(i,null),isExpanded:r})}},98555:function(e,n,t){var l=t(22411);n.c=void 0;var a=l(t(2676)),r=l(t(97936)),d=l(t(11504)),o=l(t(74824)),s=t(95324),m=l(t(38976)),i=l(t(35591));function c(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);n&&(l=l.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,l)}return t}function p(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?c(Object(t),!0).forEach((function(n){(0,a.default)(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):c(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}var u=o.default.bind(i.default),x={title:"Documents",items:[{id:"item-1-level-1",label:"Projects - Level 1",items:[{id:"item-1-level-2",label:"Projects - Level 2",items:[{id:"item-1-level-3",label:"Projects - Level 3",items:[{id:"item-1-level-4",label:"Projects - Level 4",items:[{id:"item-1-level-5",label:"Nested Document",icon:d.default.createElement(s.IconDocuments,null)}]}]}]}]}]},f={"item-1-level-1":!1,"item-1-level-2":!1,"item-1-level-3":!1,"item-1-level-4":!1};n.c=function(){var e=d.default.useState(""),n=(0,r.default)(e,2),t=n[0],l=n[1],o=d.default.useState(f),s=(0,r.default)(o,2),i=s[0],c=s[1];return d.default.createElement("div",{className:u("content-wrapper")},d.default.createElement(m.default,{title:"Documents",onExpandAll:function(){var e=p({},i);Object.keys(e).forEach((function(n){e[n]=!0})),c(e)},onCollapseAll:function(){var e=p({},i);Object.keys(e).forEach((function(n){e[n]=!1})),c(e)}},function e(n){if(n){var r=[];return n.forEach((function(n){r.push(d.default.createElement(m.default.Item,{key:n.id,label:n.label,icon:n.icon,subfolderItems:e(n.items),isExpanded:i[n.id],isSelected:t===n.id,onSelect:function(){l(n.id)},onToggle:function(){var e,t;e=n.id,t=p(p({},i),{},(0,a.default)({},e,!i[e])),c(t)}}))})),r}return null}(x.items)))}},35591:function(e,n,t){t.r(n),n.default={"content-wrapper":"BasicFolderTree-module__content-wrapper___oiYHU"}}}]);