"use strict";(self.webpackChunkterra_framework=self.webpackChunkterra_framework||[]).push([[87461],{22863:function(e,l,n){var t=n(64836);l.Z=void 0;var a=t(n(67294)),i=t(n(45697)),d=t(n(47166)),o=t(n(17422)),s=d.default.bind(o.default),m={name:i.default.string.isRequired,src:i.default.string,url:i.default.string,version:i.default.string.isRequired},r=function(e){var l=e.src,n=e.name,t=e.url,i=e.version,d=a.default.createElement("a",{className:s("badge"),href:t||"https://www.npmjs.org/package/".concat(n,"/v/").concat(i)},a.default.createElement("span",{className:s("badge-name")},t?"package":"npm"),a.default.createElement("span",{className:s("badge-version")},"v".concat(i))),o=l?a.default.createElement("a",{className:s("badge"),href:l},a.default.createElement("span",{className:s("badge-name")},"github"),a.default.createElement("span",{className:s("badge-version")},"source")):void 0;return a.default.createElement("div",{className:s("badge-container")},d,o)};r.propTypes=m;var p=r;l.Z=p},49271:function(e,l,n){var t=n(64836),a=n(18698);l.Z=void 0;var i=t(n(27424)),d=function(e,l){if(!l&&e&&e.__esModule)return e;if(null===e||"object"!==a(e)&&"function"!=typeof e)return{default:e};var n=x(l);if(n&&n.has(e))return n.get(e);var t={},i=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var d in e)if("default"!==d&&Object.prototype.hasOwnProperty.call(e,d)){var o=i?Object.getOwnPropertyDescriptor(e,d):null;o&&(o.get||o.set)?Object.defineProperty(t,d,o):t[d]=e[d]}t.default=e,n&&n.set(e,t);return t}(n(67294)),o=t(n(45697)),s=t(n(47166)),m=n(21538),r=t(n(33864)),p=t(n(23399)),u=n(51051),c=t(n(53560));function x(e){if("function"!=typeof WeakMap)return null;var l=new WeakMap,n=new WeakMap;return(x=function(e){return e?n:l})(e)}var y=s.default.bind(c.default),g={example:o.default.element,exampleSrc:o.default.element,exampleCssSrc:o.default.element,title:o.default.string,description:o.default.node,isExpanded:o.default.bool},h=function(e){e.currentTarget.setAttribute("data-focus-styles-enabled","true")},f=function(e){e.currentTarget.setAttribute("data-focus-styles-enabled","false")},C=function(e){var l=e.example,n=e.exampleSrc,t=e.exampleCssSrc,a=e.title,o=e.description,s=e.isExpanded,c=(0,d.useState)(s),x=(0,i.default)(c,2),g=x[0],C=x[1],T=(0,d.useState)(!1),w=(0,i.default)(T,2),b=w[0],k=w[1],v=d.default.useContext(m.ThemeContext),I=void 0!==t,D=function(){k(!b),g&&C(!g)},O=function(){C(!g),b&&k(!b)},V=function(e,l){e.nativeEvent.keyCode!==u.KEY_SPACE&&e.nativeEvent.keyCode!==u.KEY_RETURN||(e.preventDefault(),l())};return d.default.createElement("div",{className:y("template",v.className)},d.default.createElement("div",{className:y("header")},a&&d.default.createElement("h2",{className:y("title")},a)),d.default.createElement("div",{className:y("content")},o&&d.default.createElement("div",{className:y("description")},o),l),d.default.createElement("div",{className:y("footer")},n?d.default.createElement("div",{className:y("button-container")},I&&d.default.createElement("button",{type:"button",className:y("css-toggle","item",{"is-selected":b}),onClick:D,onKeyDown:function(e){return V(e,D)},onBlur:h,onMouseDown:f,tabIndex:0,"data-focus-styles-enabled":!0},d.default.createElement(r.default,{className:y("chevron")}),d.default.createElement("span",null,"CSS"),d.default.createElement(p.default,{className:y("chevron")})),d.default.createElement("button",{type:"button",className:y("code-toggle","item",{"is-selected":g}),onClick:O,onKeyDown:function(e){return V(e,O)},onBlur:h,onMouseDown:f,tabIndex:0,"data-focus-styles-enabled":!0},d.default.createElement(r.default,{className:y("chevron")}),d.default.createElement("span",null,"Code"),d.default.createElement(p.default,{className:y("chevron")}))):null,d.default.createElement("div",null,b&&d.default.createElement("div",{className:y("css")},t),g&&d.default.createElement("div",{className:y("code")},n))))};C.propTypes=g,C.defaultProps={isExpanded:!1};var T=C;l.Z=T},76729:function(e,l,n){n.r(l),n.d(l,{default:function(){return $}});var t=n(87462),a=n(44925),i=n(67294),d=n(81254),o=n(33431),s=n(78530),m=["components"],r={},p="wrapper";function u(e){var l=e.components,n=(0,a.Z)(e,m);return(0,d.mdx)(p,(0,t.Z)({},r,n,{components:l,mdxType:"MDXLayout"}),(0,d.mdx)(s.ZP,{mdxType:"PropsTable"},(0,d.mdx)(s.X2,{key:"ROW1",mdxType:"Row"},(0,d.mdx)(s.O,{mdxType:"PropNameCell"},"children"),(0,d.mdx)(s.Di,{mdxType:"TypeCell"},(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-javascript"},"node\n"))),(0,d.mdx)(s.dS,{isRequired:!0,mdxType:"RequiredCell"}),(0,d.mdx)(s.mW,{mdxType:"DefaultValueCell"},(0,d.mdx)("p",null,"none")),(0,d.mdx)(s.Ex,{mdxType:"DescriptionCell"},(0,d.mdx)("p",null,"Item/ItemGroup/Divider elements to display in the view. Items that will fit in the space available will\ndisplay face-up the remainder will be rolled into a menu"))),(0,d.mdx)(s.X2,{key:"ROW2",mdxType:"Row"},(0,d.mdx)(s.O,{mdxType:"PropNameCell"},"menuWidth"),(0,d.mdx)(s.Di,{mdxType:"TypeCell"},(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-javascript"},"enum: [\n  '160'\n  '240'\n  '320'\n  '640'\n  '960'\n  '1280'\n  '1760'\n  'auto'\n],\n"))),(0,d.mdx)(s.dS,{isRequired:!1,mdxType:"RequiredCell"}),(0,d.mdx)(s.mW,{mdxType:"DefaultValueCell"},(0,d.mdx)("p",null,"none")),(0,d.mdx)(s.Ex,{mdxType:"DescriptionCell"},(0,d.mdx)("p",null,"A string representation of the width in px, limited to:\n160, 240, 320, 640, 960, 1280, 1760, or auto"))),(0,d.mdx)(s.X2,{key:"ROW3",mdxType:"Row"},(0,d.mdx)(s.O,{mdxType:"PropNameCell"},"boundingRef"),(0,d.mdx)(s.Di,{mdxType:"TypeCell"},(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-javascript"},"func\n"))),(0,d.mdx)(s.dS,{isRequired:!1,mdxType:"RequiredCell"}),(0,d.mdx)(s.mW,{mdxType:"DefaultValueCell"},(0,d.mdx)("p",null,"none")),(0,d.mdx)(s.Ex,{mdxType:"DescriptionCell"},(0,d.mdx)("p",null,"Bounding container for the menu, will use window if no value provided."))),(0,d.mdx)(s.X2,{key:"ROW4",mdxType:"Row"},(0,d.mdx)(s.O,{mdxType:"PropNameCell"},"alwaysCollapsedMenuItems"),(0,d.mdx)(s.Di,{mdxType:"TypeCell"},(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-javascript"},"arrayOf: [{\n  type: 'element',\n}],\n"))),(0,d.mdx)(s.dS,{isRequired:!1,mdxType:"RequiredCell"}),(0,d.mdx)(s.mW,{mdxType:"DefaultValueCell"},(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-javascript"},"[]\n"))),(0,d.mdx)(s.Ex,{mdxType:"DescriptionCell"},(0,d.mdx)("p",null,"Puts items under the collapsed (more) menu. More button will be always shown if at least one item is populated here."))),(0,d.mdx)(s.X2,{key:"ROW5",mdxType:"Row"},(0,d.mdx)(s.O,{mdxType:"PropNameCell"},"isStartAligned"),(0,d.mdx)(s.Di,{mdxType:"TypeCell"},(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-javascript"},"bool\n"))),(0,d.mdx)(s.dS,{isRequired:!1,mdxType:"RequiredCell"}),(0,d.mdx)(s.mW,{mdxType:"DefaultValueCell"},(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-javascript"},"false\n"))),(0,d.mdx)(s.Ex,{mdxType:"DescriptionCell"},(0,d.mdx)("p",null,"Aligns the menu to the start of the container")))))}u.isMDXComponent=!0;var c=["components"],x={},y="wrapper";function g(e){var l=e.components,n=(0,a.Z)(e,c);return(0,d.mdx)(y,(0,t.Z)({},x,n,{components:l,mdxType:"MDXLayout"}),(0,d.mdx)(s.ZP,{mdxType:"PropsTable"},(0,d.mdx)(s.X2,{key:"ROW1",mdxType:"Row"},(0,d.mdx)(s.O,{mdxType:"PropNameCell"},"text"),(0,d.mdx)(s.Di,{mdxType:"TypeCell"},(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-javascript"},"string\n"))),(0,d.mdx)(s.dS,{isRequired:!0,mdxType:"RequiredCell"}),(0,d.mdx)(s.mW,{mdxType:"DefaultValueCell"},(0,d.mdx)("p",null,"none")),(0,d.mdx)(s.Ex,{mdxType:"DescriptionCell"},(0,d.mdx)("p",null,"Sets the item's text"))),(0,d.mdx)(s.X2,{key:"ROW2",mdxType:"Row"},(0,d.mdx)(s.O,{mdxType:"PropNameCell"},"boundingRef"),(0,d.mdx)(s.Di,{mdxType:"TypeCell"},(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-javascript"},"func\n"))),(0,d.mdx)(s.dS,{isRequired:!1,mdxType:"RequiredCell"}),(0,d.mdx)(s.mW,{mdxType:"DefaultValueCell"},(0,d.mdx)("p",null,"none")),(0,d.mdx)(s.Ex,{mdxType:"DescriptionCell"},(0,d.mdx)("p",null,"Bounding container for the menu, will use window if no value provided."))),(0,d.mdx)(s.X2,{key:"ROW3",mdxType:"Row"},(0,d.mdx)(s.O,{mdxType:"PropNameCell"},"icon"),(0,d.mdx)(s.Di,{mdxType:"TypeCell"},(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-javascript"},"element\n"))),(0,d.mdx)(s.dS,{isRequired:!1,mdxType:"RequiredCell"}),(0,d.mdx)(s.mW,{mdxType:"DefaultValueCell"},(0,d.mdx)("p",null,"none")),(0,d.mdx)(s.Ex,{mdxType:"DescriptionCell"},(0,d.mdx)("p",null,"An optional icon. Nested inline with the text when provided"))),(0,d.mdx)(s.X2,{key:"ROW4",mdxType:"Row"},(0,d.mdx)(s.O,{mdxType:"PropNameCell"},"isIconOnly"),(0,d.mdx)(s.Di,{mdxType:"TypeCell"},(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-javascript"},"bool\n"))),(0,d.mdx)(s.dS,{isRequired:!1,mdxType:"RequiredCell"}),(0,d.mdx)(s.mW,{mdxType:"DefaultValueCell"},(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-javascript"},"false\n"))),(0,d.mdx)(s.Ex,{mdxType:"DescriptionCell"},(0,d.mdx)("p",null,"Indicates if only the icon should display when item is face-up. (Text should still be given to be displayed when item is in the menu)"))),(0,d.mdx)(s.X2,{key:"ROW5",mdxType:"Row"},(0,d.mdx)(s.O,{mdxType:"PropNameCell"},"isReversed"),(0,d.mdx)(s.Di,{mdxType:"TypeCell"},(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-javascript"},"bool\n"))),(0,d.mdx)(s.dS,{isRequired:!1,mdxType:"RequiredCell"}),(0,d.mdx)(s.mW,{mdxType:"DefaultValueCell"},(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-javascript"},"false\n"))),(0,d.mdx)(s.Ex,{mdxType:"DescriptionCell"},(0,d.mdx)("p",null,"Reverses the position of the icon and text"))),(0,d.mdx)(s.X2,{key:"ROW6",mdxType:"Row"},(0,d.mdx)(s.O,{mdxType:"PropNameCell"},"isSelected"),(0,d.mdx)(s.Di,{mdxType:"TypeCell"},(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-javascript"},"bool\n"))),(0,d.mdx)(s.dS,{isRequired:!1,mdxType:"RequiredCell"}),(0,d.mdx)(s.mW,{mdxType:"DefaultValueCell"},(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-javascript"},"false\n"))),(0,d.mdx)(s.Ex,{mdxType:"DescriptionCell"},(0,d.mdx)("p",null,"Indicates if the item start as selected when placed in a button group"))),(0,d.mdx)(s.X2,{key:"ROW7",mdxType:"Row"},(0,d.mdx)(s.O,{mdxType:"PropNameCell"},"isDisabled"),(0,d.mdx)(s.Di,{mdxType:"TypeCell"},(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-javascript"},"bool\n"))),(0,d.mdx)(s.dS,{isRequired:!1,mdxType:"RequiredCell"}),(0,d.mdx)(s.mW,{mdxType:"DefaultValueCell"},(0,d.mdx)("p",null,"none")),(0,d.mdx)(s.Ex,{mdxType:"DescriptionCell"},(0,d.mdx)("p",null,"Indicates if the item should be disabled."))),(0,d.mdx)(s.X2,{key:"ROW8",mdxType:"Row"},(0,d.mdx)(s.O,{mdxType:"PropNameCell"},"shouldCloseOnClick"),(0,d.mdx)(s.Di,{mdxType:"TypeCell"},(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-javascript"},"bool\n"))),(0,d.mdx)(s.dS,{isRequired:!1,mdxType:"RequiredCell"}),(0,d.mdx)(s.mW,{mdxType:"DefaultValueCell"},(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-javascript"},"true\n"))),(0,d.mdx)(s.Ex,{mdxType:"DescriptionCell"},(0,d.mdx)("p",null,"Indicates that clicking on this item while displayed inside a menu should close the menu."))),(0,d.mdx)(s.X2,{key:"ROW9",mdxType:"Row"},(0,d.mdx)(s.O,{mdxType:"PropNameCell"},"subMenuItems"),(0,d.mdx)(s.Di,{mdxType:"TypeCell"},(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-javascript"},"arrayOf: [{\n  type: 'element',\n}],\n"))),(0,d.mdx)(s.dS,{isRequired:!1,mdxType:"RequiredCell"}),(0,d.mdx)(s.mW,{mdxType:"DefaultValueCell"},(0,d.mdx)("p",null,"none")),(0,d.mdx)(s.Ex,{mdxType:"DescriptionCell"},(0,d.mdx)("p",null,"List of Menu.Items to display in a submenu when this item is selected."))),(0,d.mdx)(s.X2,{key:"ROW10",mdxType:"Row"},(0,d.mdx)(s.O,{mdxType:"PropNameCell"},"onClick"),(0,d.mdx)(s.Di,{mdxType:"TypeCell"},(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-javascript"},"func\n"))),(0,d.mdx)(s.dS,{isRequired:!1,mdxType:"RequiredCell"}),(0,d.mdx)(s.mW,{mdxType:"DefaultValueCell"},(0,d.mdx)("p",null,"none")),(0,d.mdx)(s.Ex,{mdxType:"DescriptionCell"},(0,d.mdx)("p",null,"Callback function for when the item is clicked"))),(0,d.mdx)(s.X2,{key:"ROW11",mdxType:"Row"},(0,d.mdx)(s.O,{mdxType:"PropNameCell"},"menuWidth"),(0,d.mdx)(s.Di,{mdxType:"TypeCell"},(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-javascript"},"enum: [\n  '160'\n  '240'\n  '320'\n  '640'\n  '960'\n  '1280'\n  '1760'\n  'auto'\n],\n"))),(0,d.mdx)(s.dS,{isRequired:!1,mdxType:"RequiredCell"}),(0,d.mdx)(s.mW,{mdxType:"DefaultValueCell"},(0,d.mdx)("p",null,"none")),(0,d.mdx)(s.Ex,{mdxType:"DescriptionCell"},(0,d.mdx)("p",null,"A string representation of the width in px, limited to:\n160, 240, 320, 640, 960, 1280, 1760, or auto")))))}g.isMDXComponent=!0;var h=["components"],f={},C="wrapper";function T(e){var l=e.components,n=(0,a.Z)(e,h);return(0,d.mdx)(C,(0,t.Z)({},f,n,{components:l,mdxType:"MDXLayout"}),(0,d.mdx)(s.ZP,{mdxType:"PropsTable"},(0,d.mdx)(s.X2,{key:"ROW1",mdxType:"Row"},(0,d.mdx)(s.O,{mdxType:"PropNameCell"},"onChange"),(0,d.mdx)(s.Di,{mdxType:"TypeCell"},(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-javascript"},"func\n"))),(0,d.mdx)(s.dS,{isRequired:!1,mdxType:"RequiredCell"}),(0,d.mdx)(s.mW,{mdxType:"DefaultValueCell"},(0,d.mdx)("p",null,"none")),(0,d.mdx)(s.Ex,{mdxType:"DescriptionCell"},(0,d.mdx)("p",null,"Callback function that is called when the group's selection state changes"))),(0,d.mdx)(s.X2,{key:"ROW2",mdxType:"Row"},(0,d.mdx)(s.O,{mdxType:"PropNameCell"},"children"),(0,d.mdx)(s.Di,{mdxType:"TypeCell"},(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-javascript"},"node\n"))),(0,d.mdx)(s.dS,{isRequired:!0,mdxType:"RequiredCell"}),(0,d.mdx)(s.mW,{mdxType:"DefaultValueCell"},(0,d.mdx)("p",null,"none")),(0,d.mdx)(s.Ex,{mdxType:"DescriptionCell"},(0,d.mdx)("p",null,"CollapsibleMenuView.Items to be grouped together"))),(0,d.mdx)(s.X2,{key:"ROW3",mdxType:"Row"},(0,d.mdx)(s.O,{mdxType:"PropNameCell"},"isMultiSelect"),(0,d.mdx)(s.Di,{mdxType:"TypeCell"},(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-javascript"},"bool\n"))),(0,d.mdx)(s.dS,{isRequired:!1,mdxType:"RequiredCell"}),(0,d.mdx)(s.mW,{mdxType:"DefaultValueCell"},(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-javascript"},"false\n"))),(0,d.mdx)(s.Ex,{mdxType:"DescriptionCell"},(0,d.mdx)("p",null,(0,d.mdx)("img",{parentName:"p",src:"https://badgen.net/badge/UX/Accessibility/blue",alt:"IMPORTANT"})," For best practices, ensure to use ",(0,d.mdx)("inlineCode",{parentName:"p"},"isMultiSelect"),"\nin collapsibleMenuViewItemGroup element when creating multi select group items. This ensures collapsibleMenuItem's are rendered with role ",(0,d.mdx)("inlineCode",{parentName:"p"},"checkbox")," for face up group items and\nrole ",(0,d.mdx)("inlineCode",{parentName:"p"},"menuItemCheckBox")," for collapsed group items."))),(0,d.mdx)(s.X2,{key:"ROW4",mdxType:"Row"},(0,d.mdx)(s.O,{mdxType:"PropNameCell"},"selectedKeys"),(0,d.mdx)(s.Di,{mdxType:"TypeCell"},(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-javascript"},"arrayOf: [{\n  type: 'string',\n}],\n"))),(0,d.mdx)(s.dS,{isRequired:!1,mdxType:"RequiredCell"}),(0,d.mdx)(s.mW,{mdxType:"DefaultValueCell"},(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-javascript"},"[]\n"))),(0,d.mdx)(s.Ex,{mdxType:"DescriptionCell"},(0,d.mdx)("p",null,"A list of keys of the CollapsibleMenuView.Items that should be selected.")))))}T.isMDXComponent=!0;var w=["components"],b={},k="wrapper";function v(e){var l=e.components,n=(0,a.Z)(e,w);return(0,d.mdx)(k,(0,t.Z)({},b,n,{components:l,mdxType:"MDXLayout"}),(0,d.mdx)(s.ZP,{mdxType:"PropsTable"},(0,d.mdx)(s.X2,{key:"ROW1",mdxType:"Row"},(0,d.mdx)(s.O,{mdxType:"PropNameCell"},"text"),(0,d.mdx)(s.Di,{mdxType:"TypeCell"},(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-javascript"},"string\n"))),(0,d.mdx)(s.dS,{isRequired:!0,mdxType:"RequiredCell"}),(0,d.mdx)(s.mW,{mdxType:"DefaultValueCell"},(0,d.mdx)("p",null,"none")),(0,d.mdx)(s.Ex,{mdxType:"DescriptionCell"},(0,d.mdx)("p",null,"Sets the item's text"))),(0,d.mdx)(s.X2,{key:"ROW2",mdxType:"Row"},(0,d.mdx)(s.O,{mdxType:"PropNameCell"},"isSelected"),(0,d.mdx)(s.Di,{mdxType:"TypeCell"},(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-javascript"},"bool\n"))),(0,d.mdx)(s.dS,{isRequired:!1,mdxType:"RequiredCell"}),(0,d.mdx)(s.mW,{mdxType:"DefaultValueCell"},(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-javascript"},"false\n"))),(0,d.mdx)(s.Ex,{mdxType:"DescriptionCell"},(0,d.mdx)("p",null,"Indicates if the item is selected."))),(0,d.mdx)(s.X2,{key:"ROW3",mdxType:"Row"},(0,d.mdx)(s.O,{mdxType:"PropNameCell"},"onChange"),(0,d.mdx)(s.Di,{mdxType:"TypeCell"},(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-javascript"},"func\n"))),(0,d.mdx)(s.dS,{isRequired:!1,mdxType:"RequiredCell"}),(0,d.mdx)(s.mW,{mdxType:"DefaultValueCell"},(0,d.mdx)("p",null,"none")),(0,d.mdx)(s.Ex,{mdxType:"DescriptionCell"},(0,d.mdx)("p",null,"Callback function for when selection state changes. Is called with event and isSelected parameters"))),(0,d.mdx)(s.X2,{key:"ROW4",mdxType:"Row"},(0,d.mdx)(s.O,{mdxType:"PropNameCell"},"isSelectable"),(0,d.mdx)(s.Di,{mdxType:"TypeCell"},(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-javascript"},"bool\n"))),(0,d.mdx)(s.dS,{isRequired:!1,mdxType:"RequiredCell"}),(0,d.mdx)(s.mW,{mdxType:"DefaultValueCell"},(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-javascript"},"true\n"))),(0,d.mdx)(s.Ex,{mdxType:"DescriptionCell"},(0,d.mdx)("p",null,"Indicates that the toggle should be selectable"))),(0,d.mdx)(s.X2,{key:"ROW5",mdxType:"Row"},(0,d.mdx)(s.O,{mdxType:"PropNameCell"},"isDisabled"),(0,d.mdx)(s.Di,{mdxType:"TypeCell"},(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-javascript"},"bool\n"))),(0,d.mdx)(s.dS,{isRequired:!1,mdxType:"RequiredCell"}),(0,d.mdx)(s.mW,{mdxType:"DefaultValueCell"},(0,d.mdx)("p",null,"none")),(0,d.mdx)(s.Ex,{mdxType:"DescriptionCell"},(0,d.mdx)("p",null,"Indicates if the toggle should be disabled."))),(0,d.mdx)(s.X2,{key:"ROW6",mdxType:"Row"},(0,d.mdx)(s.O,{mdxType:"PropNameCell"},"shouldCloseOnClick"),(0,d.mdx)(s.Di,{mdxType:"TypeCell"},(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-javascript"},"bool\n"))),(0,d.mdx)(s.dS,{isRequired:!1,mdxType:"RequiredCell"}),(0,d.mdx)(s.mW,{mdxType:"DefaultValueCell"},(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-javascript"},"true\n"))),(0,d.mdx)(s.Ex,{mdxType:"DescriptionCell"},(0,d.mdx)("p",null,"Indicates that clicking on this item while displayed inside a menu should close the menu")))))}v.isMDXComponent=!0;var I=["components"],D={},O="wrapper";function V(e){var l=e.components,n=(0,a.Z)(e,I);return(0,d.mdx)(O,(0,t.Z)({},D,n,{components:l,mdxType:"MDXLayout"}),(0,d.mdx)(s.ZP,{mdxType:"PropsTable"},(0,d.mdx)(s.X2,{key:"ROW1",mdxType:"Row"},(0,d.mdx)(s.O,{mdxType:"PropNameCell"},"text"),(0,d.mdx)(s.Di,{mdxType:"TypeCell"},(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-javascript"},"string\n"))),(0,d.mdx)(s.dS,{isRequired:!1,mdxType:"RequiredCell"}),(0,d.mdx)(s.mW,{mdxType:"DefaultValueCell"},(0,d.mdx)("p",null,"none")),(0,d.mdx)(s.Ex,{mdxType:"DescriptionCell"},(0,d.mdx)("p",null,"The content to display inside link."))),(0,d.mdx)(s.X2,{key:"ROW2",mdxType:"Row"},(0,d.mdx)(s.O,{mdxType:"PropNameCell"},"title"),(0,d.mdx)(s.Di,{mdxType:"TypeCell"},(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-javascript"},"string\n"))),(0,d.mdx)(s.dS,{isRequired:!1,mdxType:"RequiredCell"}),(0,d.mdx)(s.mW,{mdxType:"DefaultValueCell"},(0,d.mdx)("p",null,"none")),(0,d.mdx)(s.Ex,{mdxType:"DescriptionCell"},(0,d.mdx)("p",null,"Additional information to display as a native tooltip on hover."))),(0,d.mdx)(s.X2,{key:"ROW3",mdxType:"Row"},(0,d.mdx)(s.O,{mdxType:"PropNameCell"},"href"),(0,d.mdx)(s.Di,{mdxType:"TypeCell"},(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-javascript"},"string\n"))),(0,d.mdx)(s.dS,{isRequired:!1,mdxType:"RequiredCell"}),(0,d.mdx)(s.mW,{mdxType:"DefaultValueCell"},(0,d.mdx)("p",null,"none")),(0,d.mdx)(s.Ex,{mdxType:"DescriptionCell"},(0,d.mdx)("p",null,(0,d.mdx)("img",{parentName:"p",src:"https://badgen.net/badge/UX/Accessibility/blue",alt:"IMPORTANT"}),"\nSets the href of the link. href is required for hyperlinks and should be ignored when ",(0,d.mdx)("inlineCode",{parentName:"p"},"onClick")," callback is used."))),(0,d.mdx)(s.X2,{key:"ROW4",mdxType:"Row"},(0,d.mdx)(s.O,{mdxType:"PropNameCell"},"onClick"),(0,d.mdx)(s.Di,{mdxType:"TypeCell"},(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-javascript"},"func\n"))),(0,d.mdx)(s.dS,{isRequired:!1,mdxType:"RequiredCell"}),(0,d.mdx)(s.mW,{mdxType:"DefaultValueCell"},(0,d.mdx)("p",null,"none")),(0,d.mdx)(s.Ex,{mdxType:"DescriptionCell"},(0,d.mdx)("p",null,(0,d.mdx)("img",{parentName:"p",src:"https://badgen.net/badge/UX/Accessibility/blue",alt:"IMPORTANT"}),"\nCallback function triggered when clicked. onClick is required to render hyperlink as a button.\n",(0,d.mdx)("inlineCode",{parentName:"p"},"onClick")," should be ignored when ",(0,d.mdx)("inlineCode",{parentName:"p"},"href")," is provided."))),(0,d.mdx)(s.X2,{key:"ROW5",mdxType:"Row"},(0,d.mdx)(s.O,{mdxType:"PropNameCell"},"onBlur"),(0,d.mdx)(s.Di,{mdxType:"TypeCell"},(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-javascript"},"func\n"))),(0,d.mdx)(s.dS,{isRequired:!1,mdxType:"RequiredCell"}),(0,d.mdx)(s.mW,{mdxType:"DefaultValueCell"},(0,d.mdx)("p",null,"none")),(0,d.mdx)(s.Ex,{mdxType:"DescriptionCell"},(0,d.mdx)("p",null,"Callback function triggered when hyperlink loses focus."))),(0,d.mdx)(s.X2,{key:"ROW6",mdxType:"Row"},(0,d.mdx)(s.O,{mdxType:"PropNameCell"},"onFocus"),(0,d.mdx)(s.Di,{mdxType:"TypeCell"},(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-javascript"},"func\n"))),(0,d.mdx)(s.dS,{isRequired:!1,mdxType:"RequiredCell"}),(0,d.mdx)(s.mW,{mdxType:"DefaultValueCell"},(0,d.mdx)("p",null,"none")),(0,d.mdx)(s.Ex,{mdxType:"DescriptionCell"},(0,d.mdx)("p",null,"Callback function triggered when hyperlink gains focus."))),(0,d.mdx)(s.X2,{key:"ROW7",mdxType:"Row"},(0,d.mdx)(s.O,{mdxType:"PropNameCell"},"onKeyDown"),(0,d.mdx)(s.Di,{mdxType:"TypeCell"},(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-javascript"},"func\n"))),(0,d.mdx)(s.dS,{isRequired:!1,mdxType:"RequiredCell"}),(0,d.mdx)(s.mW,{mdxType:"DefaultValueCell"},(0,d.mdx)("p",null,"none")),(0,d.mdx)(s.Ex,{mdxType:"DescriptionCell"},(0,d.mdx)("p",null,"Callback function triggered when key is pressed."))),(0,d.mdx)(s.X2,{key:"ROW8",mdxType:"Row"},(0,d.mdx)(s.O,{mdxType:"PropNameCell"},"onKeyUp"),(0,d.mdx)(s.Di,{mdxType:"TypeCell"},(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-javascript"},"func\n"))),(0,d.mdx)(s.dS,{isRequired:!1,mdxType:"RequiredCell"}),(0,d.mdx)(s.mW,{mdxType:"DefaultValueCell"},(0,d.mdx)("p",null,"none")),(0,d.mdx)(s.Ex,{mdxType:"DescriptionCell"},(0,d.mdx)("p",null,"Callback function triggered when key is released."))),(0,d.mdx)(s.X2,{key:"ROW9",mdxType:"Row"},(0,d.mdx)(s.O,{mdxType:"PropNameCell"},"variant"),(0,d.mdx)(s.Di,{mdxType:"TypeCell"},(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-javascript"},"enum: [\n  'default'\n  'external'\n  'image'\n  'video'\n  'audio'\n  'document'\n],\n"))),(0,d.mdx)(s.dS,{isRequired:!1,mdxType:"RequiredCell"}),(0,d.mdx)(s.mW,{mdxType:"DefaultValueCell"},(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-javascript"},"'default'\n"))),(0,d.mdx)(s.Ex,{mdxType:"DescriptionCell"},(0,d.mdx)("p",null,"Sets the hyperlink variant. One of ",(0,d.mdx)("inlineCode",{parentName:"p"},"default"),", ",(0,d.mdx)("inlineCode",{parentName:"p"},"external"),", ",(0,d.mdx)("inlineCode",{parentName:"p"},"image"),", ",(0,d.mdx)("inlineCode",{parentName:"p"},"video"),", ",(0,d.mdx)("inlineCode",{parentName:"p"},"audio"),", ",(0,d.mdx)("inlineCode",{parentName:"p"},"document"),".")))))}V.isMDXComponent=!0;var S=n(83930),E=["components"],N={};function M(e){var l=e.components,n=(0,a.Z)(e,E);return(0,d.mdx)("wrapper",(0,t.Z)({},N,n,{components:l,mdxType:"MDXLayout"}),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-jsx"},'import React from \'react\';\nimport {\n  IconBookmark,\n  IconCaretDown,\n  IconPrinter,\n  IconSend,\n  IconTable,\n  IconTrash,\n  IconTreemap,\n  IconVisualization,\n} from \'terra-icon\';\nimport CollapsibleMenuView from \'terra-collapsible-menu-view\';\n\nclass CollapsibleMenuViewDemo extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleDisplayTypeChange = this.handleDisplayTypeChange.bind(this);\n    this.handleToggleOneOnChange = this.handleToggleOneOnChange.bind(this);\n    this.handleToggleTwoOnChange = this.handleToggleTwoOnChange.bind(this);\n    this.handleToggleThreeOnChange = this.handleToggleThreeOnChange.bind(this);\n    this.state = {\n      toggle1Selection: false,\n      toggle2Selection: false,\n      toggle3Selection: false,\n      displayType: \'tableView\',\n    };\n  }\n\n  handleToggleOneOnChange(event, isSelected) {\n    this.setState({ toggle1Selection: isSelected });\n  }\n\n  handleToggleTwoOnChange(event, isSelected) {\n    this.setState({ toggle2Selection: isSelected });\n  }\n\n  handleToggleThreeOnChange(event, isSelected) {\n    this.setState({ toggle3Selection: isSelected });\n  }\n\n  handleDisplayTypeChange(event, selectedKey) {\n    this.setState({ displayType: selectedKey });\n  }\n\n  render() {\n    return (\n      <CollapsibleMenuView>\n        <CollapsibleMenuView.Toggle\n          text="Display Patient History"\n          key="displayPatientHistory"\n          shouldCloseOnClick={false}\n          onChange={this.handleToggleOneOnChange}\n          isSelected={this.state.toggle1Selection}\n        />\n        <CollapsibleMenuView.Toggle\n          text="Display Allergies"\n          key="displayAllergies"\n          shouldCloseOnClick={false}\n          onChange={this.handleToggleTwoOnChange}\n          isSelected={this.state.toggle2Selection}\n        />\n        <CollapsibleMenuView.Toggle\n          text="Display Problems"\n          key="displayProblems"\n          shouldCloseOnClick={false}\n          onChange={this.handleToggleThreeOnChange}\n          isSelected={this.state.toggle3Selection}\n        />\n        <CollapsibleMenuView.Divider key="Divider1" />\n        <CollapsibleMenuView.Item\n          icon={<IconCaretDown />}\n          text="Add Document"\n          key="addDocument"\n          isReversed\n          shouldCloseOnClick={false}\n          subMenuItems={[\n            <CollapsibleMenuView.Item text="Upload Document" key="uploadDocument" />,\n            <CollapsibleMenuView.Item text="Link to Document..." key="linkToDocument" />,\n          ]}\n        />\n        <CollapsibleMenuView.Item\n          icon={<IconCaretDown />}\n          text="Add"\n          key="Add"\n          isReversed\n          shouldCloseOnClick={false}\n          subMenuItems={[\n            <CollapsibleMenuView.Item text="Add Allergy" key="addAllergy" />,\n            <CollapsibleMenuView.Item text="Add Problem" key="addProblem" />,\n          ]}\n        />\n        <CollapsibleMenuView.Divider key="Divider2" />\n        <CollapsibleMenuView.ItemGroup aria-label="View Type Single Selection" id="view-type-single-select" key="ViewTypeSelection" selectedKeys={[this.state.displayType]} onChange={this.handleDisplayTypeChange}>\n          <CollapsibleMenuView.Item\n            icon={<IconTable />}\n            text="Table View"\n            key="tableView"\n            ariaDescribedBy="view-type-single-select"\n            isIconOnly\n            shouldCloseOnClick={false}\n            isSelected={this.state.displayType === \'tableView\'}\n          />\n          <CollapsibleMenuView.Item\n            icon={<IconVisualization />}\n            text="Chart View"\n            key="chartView"\n            ariaDescribedBy="view-type-single-select"\n            isIconOnly\n            shouldCloseOnClick={false}\n            isSelected={this.state.displayType === \'chartView\'}\n          />\n          <CollapsibleMenuView.Item\n            icon={<IconTreemap />}\n            text="Treemap View"\n            key="treemapView"\n            ariaDescribedBy="view-type-single-select"\n            isIconOnly\n            shouldCloseOnClick={false}\n            isSelected={this.state.displayType === \'treemapView\'}\n          />\n        </CollapsibleMenuView.ItemGroup>\n        <CollapsibleMenuView.Divider key="Divider3" />\n        <CollapsibleMenuView.Item icon={<IconSend />} text="Send" key="send" isIconOnly />\n        <CollapsibleMenuView.ItemGroup key="messageActionGroup">\n          <CollapsibleMenuView.Item icon={<IconPrinter />} text="Print" key="print" isIconOnly />\n          <CollapsibleMenuView.Item icon={<IconBookmark />} text="Bookmark" key="bookmark" isIconOnly />\n          <CollapsibleMenuView.Item icon={<IconTrash />} text="Trash" key="trash" isIconOnly />\n        </CollapsibleMenuView.ItemGroup>\n        <CollapsibleMenuView.Divider key="Divider4" />\n        <CollapsibleMenuView.Item text="Action 1" key="action1" />\n        <CollapsibleMenuView.Item text="Action 2" key="action2" />\n        <CollapsibleMenuView.Item text="Action 3" key="action3" />\n        <CollapsibleMenuView.Item text="Action 4" key="action4" />\n      </CollapsibleMenuView>\n    );\n  }\n}\n\nexport default CollapsibleMenuViewDemo;\n\n')))}M.isMDXComponent=!0;var R=n(49271),A=function(e){var l=e.title,n=e.description,t=e.isExpanded;return i.createElement(R.Z,{title:l||"Collapsible Menu View Demo",description:n,example:i.createElement(S.Z,null),exampleSrc:i.createElement(M,null),isExpanded:t})},_=n(14788),P=["components"],W={};function q(e){var l=e.components,n=(0,a.Z)(e,P);return(0,d.mdx)("wrapper",(0,t.Z)({},W,n,{components:l,mdxType:"MDXLayout"}),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-jsx"},'import React from \'react\';\nimport {\n  IconCaretDown,\n  IconTable,\n  IconTreemap,\n  IconVisualization,\n} from \'terra-icon\';\nimport CollapsibleMenuView from \'terra-collapsible-menu-view\';\n\nclass AlwaysCollapsedMenuItemsDemo extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleDisplayTypeChange = this.handleDisplayTypeChange.bind(this);\n    this.state = {\n      displayType: \'tableView\',\n    };\n  }\n\n  handleDisplayTypeChange(event, selectedKey) {\n    this.setState({ displayType: selectedKey });\n  }\n\n  render() {\n    return (\n      <CollapsibleMenuView\n        alwaysCollapsedMenuItems={[\n          <CollapsibleMenuView.Item text="Action 1" key="action1" />,\n          <CollapsibleMenuView.Item text="Action 2" key="action2" isDisabled />,\n          <CollapsibleMenuView.Item text="Action 3" key="action3" />,\n          <CollapsibleMenuView.Item text="Action 4" key="action4" />,\n        ]}\n      >\n        <CollapsibleMenuView.Item\n          icon={<IconCaretDown />}\n          text="Add Document"\n          key="addDocument"\n          isReversed\n          shouldCloseOnClick={false}\n          subMenuItems={[\n            <CollapsibleMenuView.Item text="Upload Document" key="uploadDocument" />,\n            <CollapsibleMenuView.Item text="Link to Document..." key="linkToDocument" />,\n          ]}\n        />\n        <CollapsibleMenuView.Item\n          icon={<IconCaretDown />}\n          text="Add"\n          key="Add"\n          isReversed\n          shouldCloseOnClick={false}\n          subMenuItems={[\n            <CollapsibleMenuView.Item text="Add Allergy" key="addAllergy" />,\n            <CollapsibleMenuView.Item text="Add Problem" key="addProblem" />,\n          ]}\n        />\n        <CollapsibleMenuView.Divider key="divider1" />\n        <CollapsibleMenuView.ItemGroup aria-label="View Type Single Selection" id="view-type-single-select" key="ViewTypeSelection" selectedKeys={[this.state.displayType]} onChange={this.handleDisplayTypeChange}>\n          <CollapsibleMenuView.Item\n            icon={<IconTable />}\n            text="Table View"\n            key="tableView"\n            ariaDescribedBy="view-type-single-select"\n            isIconOnly\n            shouldCloseOnClick={false}\n            isSelected={this.state.displayType === \'tableView\'}\n          />\n          <CollapsibleMenuView.Item\n            icon={<IconVisualization />}\n            text="Chart View"\n            key="chartView"\n            ariaDescribedBy="view-type-single-select"\n            isIconOnly\n            shouldCloseOnClick={false}\n            isSelected={this.state.displayType === \'chartView\'}\n          />\n          <CollapsibleMenuView.Item\n            icon={<IconTreemap />}\n            text="Treemap View"\n            key="treemapView"\n            ariaDescribedBy="view-type-single-select"\n            isIconOnly\n            shouldCloseOnClick={false}\n            isSelected={this.state.displayType === \'treemapView\'}\n          />\n        </CollapsibleMenuView.ItemGroup>\n      </CollapsibleMenuView>\n    );\n  }\n}\n\nexport default AlwaysCollapsedMenuItemsDemo;\n\n')))}q.isMDXComponent=!0;var j=function(e){var l=e.title,n=e.description,t=e.isExpanded;return i.createElement(R.Z,{title:l||"Always Collapsed Menu Items Demo",description:n,example:i.createElement(_.Z,null),exampleSrc:i.createElement(q,null),isExpanded:t})},B=n(68659),X=["components"],Z={};function K(e){var l=e.components,n=(0,a.Z)(e,X);return(0,d.mdx)("wrapper",(0,t.Z)({},Z,n,{components:l,mdxType:"MDXLayout"}),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-jsx"},'import React from \'react\';\nimport {\n  IconBookmark,\n  IconCaretDown,\n  IconPrinter,\n  IconSend,\n  IconTable,\n  IconTrash,\n  IconTreemap,\n  IconVisualization,\n} from \'terra-icon\';\nimport CollapsibleMenuView from \'terra-collapsible-menu-view\';\n\nclass CollapsibleMenuViewStartAligned extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleDisplayTypeChange = this.handleDisplayTypeChange.bind(this);\n    this.handleToggleOneOnChange = this.handleToggleOneOnChange.bind(this);\n    this.handleToggleTwoOnChange = this.handleToggleTwoOnChange.bind(this);\n    this.handleToggleThreeOnChange = this.handleToggleThreeOnChange.bind(this);\n    this.state = {\n      toggle1Selection: false,\n      toggle2Selection: false,\n      toggle3Selection: false,\n      displayType: \'tableView\',\n    };\n  }\n\n  handleToggleOneOnChange(event, isSelected) {\n    this.setState({ toggle1Selection: isSelected });\n  }\n\n  handleToggleTwoOnChange(event, isSelected) {\n    this.setState({ toggle2Selection: isSelected });\n  }\n\n  handleToggleThreeOnChange(event, isSelected) {\n    this.setState({ toggle3Selection: isSelected });\n  }\n\n  handleDisplayTypeChange(event, selectedKey) {\n    this.setState({ displayType: selectedKey });\n  }\n\n  render() {\n    return (\n      <CollapsibleMenuView isStartAligned>\n        <CollapsibleMenuView.Toggle\n          text="Display Patient History"\n          key="displayPatientHistory"\n          shouldCloseOnClick={false}\n          onChange={this.handleToggleOneOnChange}\n          isSelected={this.state.toggle1Selection}\n        />\n        <CollapsibleMenuView.Toggle\n          text="Display Allergies"\n          key="displayAllergies"\n          shouldCloseOnClick={false}\n          onChange={this.handleToggleTwoOnChange}\n          isSelected={this.state.toggle2Selection}\n        />\n        <CollapsibleMenuView.Toggle\n          text="Display Problems"\n          key="displayProblems"\n          shouldCloseOnClick={false}\n          onChange={this.handleToggleThreeOnChange}\n          isSelected={this.state.toggle3Selection}\n        />\n        <CollapsibleMenuView.Divider key="Divider1" />\n        <CollapsibleMenuView.Item\n          icon={<IconCaretDown />}\n          text="Add Document"\n          key="addDocument"\n          isReversed\n          shouldCloseOnClick={false}\n          subMenuItems={[\n            <CollapsibleMenuView.Item text="Upload Document" key="uploadDocument" />,\n            <CollapsibleMenuView.Item text="Link to Document..." key="linkToDocument" />,\n          ]}\n        />\n        <CollapsibleMenuView.Item\n          icon={<IconCaretDown />}\n          text="Add"\n          key="Add"\n          isReversed\n          shouldCloseOnClick={false}\n          subMenuItems={[\n            <CollapsibleMenuView.Item text="Add Allergy" key="addAllergy" />,\n            <CollapsibleMenuView.Item text="Add Problem" key="addProblem" />,\n          ]}\n        />\n        <CollapsibleMenuView.Divider key="Divider2" />\n        <CollapsibleMenuView.ItemGroup aria-label="View Type Single Selection" id="view-type-single-select" key="ViewTypeSelection" selectedKeys={[this.state.displayType]} onChange={this.handleDisplayTypeChange}>\n          <CollapsibleMenuView.Item\n            icon={<IconTable />}\n            text="Table View"\n            key="tableView"\n            ariaDescribedBy="view-type-single-select"\n            isIconOnly\n            shouldCloseOnClick={false}\n            isSelected={this.state.displayType === \'tableView\'}\n          />\n          <CollapsibleMenuView.Item\n            icon={<IconVisualization />}\n            text="Chart View"\n            key="chartView"\n            ariaDescribedBy="view-type-single-select"\n            isIconOnly\n            shouldCloseOnClick={false}\n            isSelected={this.state.displayType === \'chartView\'}\n          />\n          <CollapsibleMenuView.Item\n            icon={<IconTreemap />}\n            text="Treemap View"\n            key="treemapView"\n            ariaDescribedBy="view-type-single-select"\n            isIconOnly\n            shouldCloseOnClick={false}\n            isSelected={this.state.displayType === \'treemapView\'}\n          />\n        </CollapsibleMenuView.ItemGroup>\n        <CollapsibleMenuView.Divider key="Divider3" />\n        <CollapsibleMenuView.Item icon={<IconSend />} text="Send" key="send" isIconOnly />\n        <CollapsibleMenuView.ItemGroup key="messageActionGroup">\n          <CollapsibleMenuView.Item icon={<IconPrinter />} text="Print" key="print" isIconOnly />\n          <CollapsibleMenuView.Item icon={<IconBookmark />} text="Bookmark" key="bookmark" isIconOnly />\n          <CollapsibleMenuView.Item icon={<IconTrash />} text="Trash" key="trash" isIconOnly />\n        </CollapsibleMenuView.ItemGroup>\n        <CollapsibleMenuView.Divider key="Divider4" />\n        <CollapsibleMenuView.Item text="Action 1" key="action1" />\n        <CollapsibleMenuView.Item text="Action 2" key="action2" />\n        <CollapsibleMenuView.Item text="Action 3" key="action3" />\n        <CollapsibleMenuView.Item text="Action 4" key="action4" />\n      </CollapsibleMenuView>\n    );\n  }\n}\n\nexport default CollapsibleMenuViewStartAligned;\n\n')))}K.isMDXComponent=!0;var G=function(e){var l=e.title,n=e.description,t=e.isExpanded;return i.createElement(R.Z,{title:l||"Collapsible Menu View Start Aligned",description:n,example:i.createElement(B.Z,null),exampleSrc:i.createElement(K,null),isExpanded:t})},L=n(48102),z=["components"],H={};function U(e){var l=e.components,n=(0,a.Z)(e,z);return(0,d.mdx)("wrapper",(0,t.Z)({},H,n,{components:l,mdxType:"MDXLayout"}),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-jsx"},'import React from \'react\';\nimport IconTable from \'terra-icon/lib/icon/IconTable\';\nimport IconFlowsheet from \'terra-icon/lib/icon/IconFlowsheet\';\nimport IconVisualization from \'terra-icon/lib/icon/IconVisualization\';\nimport IconSend from \'terra-icon/lib/icon/IconSend\';\nimport CollapsibleMenuView from \'terra-collapsible-menu-view\';\n\nclass CollapsibleMenuViewWithMultiSelectItems extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleDisplayTypeChange = this.handleDisplayTypeChange.bind(this);\n    this.handleToggleOneOnChange = this.handleToggleOneOnChange.bind(this);\n    this.handleToggleTwoOnChange = this.handleToggleTwoOnChange.bind(this);\n    this.handleToggleThreeOnChange = this.handleToggleThreeOnChange.bind(this);\n    this.state = {\n      toggle1Selection: false,\n      toggle2Selection: false,\n      toggle3Selection: false,\n      selectedKeys: [],\n    };\n  }\n\n  handleToggleOneOnChange(event, isSelected) {\n    this.setState({ toggle1Selection: isSelected });\n  }\n\n  handleToggleTwoOnChange(event, isSelected) {\n    this.setState({ toggle2Selection: isSelected });\n  }\n\n  handleToggleThreeOnChange(event, isSelected) {\n    this.setState({ toggle3Selection: isSelected });\n  }\n\n  handleDisplayTypeChange(event, selectedKey) {\n    // eslint-disable-next-line react/no-access-state-in-setstate\n    const newSelectedKeys = this.state.selectedKeys;\n    if (!newSelectedKeys.includes(selectedKey)) {\n      newSelectedKeys.push(selectedKey);\n    } else {\n      newSelectedKeys.splice(newSelectedKeys.indexOf(selectedKey), 1);\n    }\n    this.setState({ selectedKeys: newSelectedKeys });\n  }\n\n  render() {\n    return (\n      <CollapsibleMenuView>\n        <CollapsibleMenuView.Toggle\n          text="InDesign"\n          key="toggle1"\n          shouldCloseOnClick={false}\n          onChange={this.handleToggleOneOnChange}\n          isSelected={this.state.toggle1Selection}\n        />\n        <CollapsibleMenuView.Toggle\n          text="Photoshop"\n          key="toggle21"\n          shouldCloseOnClick={false}\n          isSelected={this.state.toggle2Selection}\n        />\n        <CollapsibleMenuView.Toggle\n          text="Illustrator"\n          key="toggle3"\n          shouldCloseOnClick={false}\n          onChange={this.handleToggleThreeOnChange}\n          isSelected={this.state.toggle3Selection}\n        />\n        <CollapsibleMenuView.Divider key="Divider1" />\n        <CollapsibleMenuView.Item\n          text="Browsers"\n          key="MenuButton1"\n          shouldCloseOnClick={false}\n          subMenuItems={[\n            <CollapsibleMenuView.Item text="Edge" key="defaultItem1" />,\n            <CollapsibleMenuView.Item text="Chrome" key="defaultItem2" />,\n          ]}\n        />\n        <CollapsibleMenuView.Divider key="Divider2" />\n        <CollapsibleMenuView.ItemGroup aria-label="View Type Multi Selection" id="view-type-multi-select" key="ViewTypeSelection" isMultiSelect selectedKeys={this.state.selectedKeys} onChange={this.handleDisplayTypeChange}>\n          <CollapsibleMenuView.Item\n            icon={<IconTable />}\n            text="Table View"\n            key="tableView"\n            ariaDescribedBy="view-type-multi-select"\n            isIconOnly\n            shouldCloseOnClick={false}\n            isSelected={this.state.selectedKeys.includes(\'tableView\')}\n          />\n          <CollapsibleMenuView.Item\n            icon={<IconFlowsheet />}\n            text="Expanded View"\n            key="expandedView"\n            ariaDescribedBy="view-type-multi-select"\n            isIconOnly\n            shouldCloseOnClick={false}\n            isSelected={this.state.selectedKeys.includes(\'expandedView\')}\n          />\n          <CollapsibleMenuView.Item\n            icon={<IconVisualization />}\n            text="Trending View"\n            key="trendingView"\n            ariaDescribedBy="view-type-multi-select"\n            isIconOnly\n            shouldCloseOnClick={false}\n            isSelected={this.state.selectedKeys.includes(\'trendingView\')}\n          />\n        </CollapsibleMenuView.ItemGroup>\n        <CollapsibleMenuView.Divider key="Divider3" />\n        <CollapsibleMenuView.Item icon={<IconSend />} text="Send Message" key="send" isIconOnly />\n      </CollapsibleMenuView>\n    );\n  }\n}\n\nexport default CollapsibleMenuViewWithMultiSelectItems;\n\n')))}U.isMDXComponent=!0;var F=function(e){var l=e.title,n=e.description,t=e.isExpanded;return i.createElement(R.Z,{title:l||"Collapsible Menu View With Multi Select Items",description:n,example:i.createElement(L.Z,null),exampleSrc:i.createElement(U,null),isExpanded:t})},Y=["components"],J={},Q="wrapper";function $(e){var l=e.components,n=(0,a.Z)(e,Y);return(0,d.mdx)(Q,(0,t.Z)({},J,n,{components:l,mdxType:"MDXLayout"}),(0,d.mdx)(o.C,{mdxType:"Badge"}),(0,d.mdx)("h1",{id:"terra-collapsible-menu-view"},"Terra Collapsible Menu View"),(0,d.mdx)("p",null,"The collapsible menu view is a mechanism that can be used in toolbar scenarios where actionable items will be displayed face-up and flex based on the space available. Any items that can not fit in the available space will be rolled into an ellipsis menu."),(0,d.mdx)("p",null,"CollapsibleMenuView.Item will flex between a button when displayed face-up and a Menu.Item when in a menu. An item can have an onClick action and/or contain menuItems that will be displayed in a menu when clicked (they will be displayed in a submenu if the item is rolled into the ellipsis menu)"),(0,d.mdx)("p",null,"CollapsibleMenuView.Toggle will flex between a checkbox with a label when displayed face-up and a selectable Menu.Item when in a menu."),(0,d.mdx)("p",null,"CollapsibleMenuView.Hyperlink will flex between a hyperlink and a selectable Menu.Item when in a menu."),(0,d.mdx)("p",null,"CollapsibleMenuView.ItemGroup will flex between a button group when displayed face-up and a Menu.ItemGroup when rolled into the ellipsis menu. A selectable ItemGroup will have toggle style selection. An Item group that is not selectable will have its children roll into the ellipsis menu as non selectable Menu.Items."),(0,d.mdx)("p",null,"CollapsibleMenuView.Divider will flex between a vertical divider when displayed face-up and a Menu.Divider when in a menu."),(0,d.mdx)("p",null,"To pre-populate the collapsible menu view with menu items that always remain collapsed, use the ",(0,d.mdx)("inlineCode",{parentName:"p"},"alwaysCollapsedMenuItems")," prop."),(0,d.mdx)("h2",{id:"getting-started"},"Getting Started"),(0,d.mdx)("ul",null,(0,d.mdx)("li",{parentName:"ul"},"Install with ",(0,d.mdx)("a",{parentName:"li",href:"https://www.npmjs.com/"},"npmjs"),":",(0,d.mdx)("ul",{parentName:"li"},(0,d.mdx)("li",{parentName:"ul"},(0,d.mdx)("inlineCode",{parentName:"li"},"npm install terra-collapsible-menu-view"))))),(0,d.mdx)("h2",{id:"peer-dependencies"},"Peer Dependencies"),(0,d.mdx)("p",null,"This component requires the following peer dependencies be installed in your app for the component to properly function."),(0,d.mdx)("table",null,(0,d.mdx)("thead",{parentName:"table"},(0,d.mdx)("tr",{parentName:"thead"},(0,d.mdx)("th",{parentName:"tr",align:null},"Peer Dependency"),(0,d.mdx)("th",{parentName:"tr",align:null},"Version"))),(0,d.mdx)("tbody",{parentName:"table"},(0,d.mdx)("tr",{parentName:"tbody"},(0,d.mdx)("td",{parentName:"tr",align:null},"react"),(0,d.mdx)("td",{parentName:"tr",align:null},"^16.8.5")),(0,d.mdx)("tr",{parentName:"tbody"},(0,d.mdx)("td",{parentName:"tr",align:null},"react-dom"),(0,d.mdx)("td",{parentName:"tr",align:null},"^16.8.5")),(0,d.mdx)("tr",{parentName:"tbody"},(0,d.mdx)("td",{parentName:"tr",align:null},"react-intl"),(0,d.mdx)("td",{parentName:"tr",align:null},"^2.8.0")))),(0,d.mdx)("h2",{id:"usage"},"Usage"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-jsx"},"import CollapsibleMenuView from 'terra-collapsible-menu-view';\n")),(0,d.mdx)("h2",{id:"component-features"},"Component Features"),(0,d.mdx)("ul",null,(0,d.mdx)("li",{parentName:"ul"},(0,d.mdx)("a",{parentName:"li",href:"https://engineering.cerner.com/terra-ui/about/terra-ui/component-standards#cross-browser-support"},"Cross-Browser Support")),(0,d.mdx)("li",{parentName:"ul"},(0,d.mdx)("a",{parentName:"li",href:"https://engineering.cerner.com/terra-ui/about/terra-ui/component-standards#responsive-support"},"Responsive Support")),(0,d.mdx)("li",{parentName:"ul"},(0,d.mdx)("a",{parentName:"li",href:"https://engineering.cerner.com/terra-ui/about/terra-ui/component-standards#mobile-support"},"Mobile Support")),(0,d.mdx)("li",{parentName:"ul"},(0,d.mdx)("a",{parentName:"li",href:"https://engineering.cerner.com/terra-ui/about/terra-ui/component-standards#ltr--rtl"},"LTR/RTL Support"))),(0,d.mdx)("h2",{id:"examples"},"Examples"),(0,d.mdx)(A,{title:"CollapsibleMenuView Example",mdxType:"BasicView"}),(0,d.mdx)(j,{title:"Always collapsed menu items",mdxType:"AlwaysCollapsedMenuItemsDemo"}),(0,d.mdx)(G,{title:"CollapsibleMenuView start alignment",mdxType:"CollapsibleMenuViewStartAligned"}),(0,d.mdx)(F,{title:"CollapsibleMenuView with multiselect items",mdxType:"CollapsibleMenuViewWithMultiSelectItems"}),(0,d.mdx)("h2",{id:"collapsible-menu-view-props"},"Collapsible Menu View props"),(0,d.mdx)(u,{mdxType:"CollapsibleMenuViewProps"}),(0,d.mdx)("h2",{id:"collapsiblemenuviewitem-props"},"CollapsibleMenuView.Item props"),(0,d.mdx)(g,{mdxType:"CollapsibleMenuViewItemProps"}),(0,d.mdx)("h2",{id:"collapsiblemenuviewitemgroup-props"},"CollapsibleMenuView.ItemGroup props"),(0,d.mdx)(T,{mdxType:"CollapsibleMenuViewItemGroupProps"}),(0,d.mdx)("h2",{id:"collapsiblemenuviewtoggle-props"},"CollapsibleMenuView.Toggle props"),(0,d.mdx)(v,{mdxType:"CollapsibleMenuViewToggleProps"}),(0,d.mdx)("h2",{id:"collapsiblemenuviewhyperlink-props"},"CollapsibleMenuView.Hyperlink props"),(0,d.mdx)(V,{mdxType:"CollapsibleMenuViewHyperlinkProps"}))}$.isMDXComponent=!0},33431:function(e,l,n){n.d(l,{C:function(){return i}});var t=n(67294),a=n(22863),i=function(e){var l=e.url;return t.createElement(a.Z,{src:"https://github.com/cerner/terra-framework/tree/main/packages/terra-collapsible-menu-view",name:"terra-collapsible-menu-view",version:"6.82.0",url:l})}},14788:function(e,l,n){var t=n(64836);l.Z=void 0;var a=t(n(56690)),i=t(n(89728)),d=t(n(66115)),o=t(n(61655)),s=t(n(94993)),m=t(n(73808)),r=t(n(67294)),p=n(34614),u=t(n(57927));function c(e){var l=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}();return function(){var n,t=(0,m.default)(e);if(l){var a=(0,m.default)(this).constructor;n=Reflect.construct(t,arguments,a)}else n=t.apply(this,arguments);return(0,s.default)(this,n)}}var x=function(e){(0,o.default)(n,e);var l=c(n);function n(e){var t;return(0,a.default)(this,n),(t=l.call(this,e)).handleDisplayTypeChange=t.handleDisplayTypeChange.bind((0,d.default)(t)),t.state={displayType:"tableView"},t}return(0,i.default)(n,[{key:"handleDisplayTypeChange",value:function(e,l){this.setState({displayType:l})}},{key:"render",value:function(){return r.default.createElement(u.default,{alwaysCollapsedMenuItems:[r.default.createElement(u.default.Item,{text:"Action 1",key:"action1"}),r.default.createElement(u.default.Item,{text:"Action 2",key:"action2",isDisabled:!0}),r.default.createElement(u.default.Item,{text:"Action 3",key:"action3"}),r.default.createElement(u.default.Item,{text:"Action 4",key:"action4"})]},r.default.createElement(u.default.Item,{icon:r.default.createElement(p.IconCaretDown,null),text:"Add Document",key:"addDocument",isReversed:!0,shouldCloseOnClick:!1,subMenuItems:[r.default.createElement(u.default.Item,{text:"Upload Document",key:"uploadDocument"}),r.default.createElement(u.default.Item,{text:"Link to Document...",key:"linkToDocument"})]}),r.default.createElement(u.default.Item,{icon:r.default.createElement(p.IconCaretDown,null),text:"Add",key:"Add",isReversed:!0,shouldCloseOnClick:!1,subMenuItems:[r.default.createElement(u.default.Item,{text:"Add Allergy",key:"addAllergy"}),r.default.createElement(u.default.Item,{text:"Add Problem",key:"addProblem"})]}),r.default.createElement(u.default.Divider,{key:"divider1"}),r.default.createElement(u.default.ItemGroup,{"aria-label":"View Type Single Selection",id:"view-type-single-select",key:"ViewTypeSelection",selectedKeys:[this.state.displayType],onChange:this.handleDisplayTypeChange},r.default.createElement(u.default.Item,{icon:r.default.createElement(p.IconTable,null),text:"Table View",key:"tableView",ariaDescribedBy:"view-type-single-select",isIconOnly:!0,shouldCloseOnClick:!1,isSelected:"tableView"===this.state.displayType}),r.default.createElement(u.default.Item,{icon:r.default.createElement(p.IconVisualization,null),text:"Chart View",key:"chartView",ariaDescribedBy:"view-type-single-select",isIconOnly:!0,shouldCloseOnClick:!1,isSelected:"chartView"===this.state.displayType}),r.default.createElement(u.default.Item,{icon:r.default.createElement(p.IconTreemap,null),text:"Treemap View",key:"treemapView",ariaDescribedBy:"view-type-single-select",isIconOnly:!0,shouldCloseOnClick:!1,isSelected:"treemapView"===this.state.displayType})))}}]),n}(r.default.Component);l.Z=x},83930:function(e,l,n){var t=n(64836);l.Z=void 0;var a=t(n(56690)),i=t(n(89728)),d=t(n(66115)),o=t(n(61655)),s=t(n(94993)),m=t(n(73808)),r=t(n(67294)),p=n(34614),u=t(n(57927));function c(e){var l=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}();return function(){var n,t=(0,m.default)(e);if(l){var a=(0,m.default)(this).constructor;n=Reflect.construct(t,arguments,a)}else n=t.apply(this,arguments);return(0,s.default)(this,n)}}var x=function(e){(0,o.default)(n,e);var l=c(n);function n(e){var t;return(0,a.default)(this,n),(t=l.call(this,e)).handleDisplayTypeChange=t.handleDisplayTypeChange.bind((0,d.default)(t)),t.handleToggleOneOnChange=t.handleToggleOneOnChange.bind((0,d.default)(t)),t.handleToggleTwoOnChange=t.handleToggleTwoOnChange.bind((0,d.default)(t)),t.handleToggleThreeOnChange=t.handleToggleThreeOnChange.bind((0,d.default)(t)),t.state={toggle1Selection:!1,toggle2Selection:!1,toggle3Selection:!1,displayType:"tableView"},t}return(0,i.default)(n,[{key:"handleToggleOneOnChange",value:function(e,l){this.setState({toggle1Selection:l})}},{key:"handleToggleTwoOnChange",value:function(e,l){this.setState({toggle2Selection:l})}},{key:"handleToggleThreeOnChange",value:function(e,l){this.setState({toggle3Selection:l})}},{key:"handleDisplayTypeChange",value:function(e,l){this.setState({displayType:l})}},{key:"render",value:function(){return r.default.createElement(u.default,null,r.default.createElement(u.default.Toggle,{text:"Display Patient History",key:"displayPatientHistory",shouldCloseOnClick:!1,onChange:this.handleToggleOneOnChange,isSelected:this.state.toggle1Selection}),r.default.createElement(u.default.Toggle,{text:"Display Allergies",key:"displayAllergies",shouldCloseOnClick:!1,onChange:this.handleToggleTwoOnChange,isSelected:this.state.toggle2Selection}),r.default.createElement(u.default.Toggle,{text:"Display Problems",key:"displayProblems",shouldCloseOnClick:!1,onChange:this.handleToggleThreeOnChange,isSelected:this.state.toggle3Selection}),r.default.createElement(u.default.Divider,{key:"Divider1"}),r.default.createElement(u.default.Item,{icon:r.default.createElement(p.IconCaretDown,null),text:"Add Document",key:"addDocument",isReversed:!0,shouldCloseOnClick:!1,subMenuItems:[r.default.createElement(u.default.Item,{text:"Upload Document",key:"uploadDocument"}),r.default.createElement(u.default.Item,{text:"Link to Document...",key:"linkToDocument"})]}),r.default.createElement(u.default.Item,{icon:r.default.createElement(p.IconCaretDown,null),text:"Add",key:"Add",isReversed:!0,shouldCloseOnClick:!1,subMenuItems:[r.default.createElement(u.default.Item,{text:"Add Allergy",key:"addAllergy"}),r.default.createElement(u.default.Item,{text:"Add Problem",key:"addProblem"})]}),r.default.createElement(u.default.Divider,{key:"Divider2"}),r.default.createElement(u.default.ItemGroup,{"aria-label":"View Type Single Selection",id:"view-type-single-select",key:"ViewTypeSelection",selectedKeys:[this.state.displayType],onChange:this.handleDisplayTypeChange},r.default.createElement(u.default.Item,{icon:r.default.createElement(p.IconTable,null),text:"Table View",key:"tableView",ariaDescribedBy:"view-type-single-select",isIconOnly:!0,shouldCloseOnClick:!1,isSelected:"tableView"===this.state.displayType}),r.default.createElement(u.default.Item,{icon:r.default.createElement(p.IconVisualization,null),text:"Chart View",key:"chartView",ariaDescribedBy:"view-type-single-select",isIconOnly:!0,shouldCloseOnClick:!1,isSelected:"chartView"===this.state.displayType}),r.default.createElement(u.default.Item,{icon:r.default.createElement(p.IconTreemap,null),text:"Treemap View",key:"treemapView",ariaDescribedBy:"view-type-single-select",isIconOnly:!0,shouldCloseOnClick:!1,isSelected:"treemapView"===this.state.displayType})),r.default.createElement(u.default.Divider,{key:"Divider3"}),r.default.createElement(u.default.Item,{icon:r.default.createElement(p.IconSend,null),text:"Send",key:"send",isIconOnly:!0}),r.default.createElement(u.default.ItemGroup,{key:"messageActionGroup"},r.default.createElement(u.default.Item,{icon:r.default.createElement(p.IconPrinter,null),text:"Print",key:"print",isIconOnly:!0}),r.default.createElement(u.default.Item,{icon:r.default.createElement(p.IconBookmark,null),text:"Bookmark",key:"bookmark",isIconOnly:!0}),r.default.createElement(u.default.Item,{icon:r.default.createElement(p.IconTrash,null),text:"Trash",key:"trash",isIconOnly:!0})),r.default.createElement(u.default.Divider,{key:"Divider4"}),r.default.createElement(u.default.Item,{text:"Action 1",key:"action1"}),r.default.createElement(u.default.Item,{text:"Action 2",key:"action2"}),r.default.createElement(u.default.Item,{text:"Action 3",key:"action3"}),r.default.createElement(u.default.Item,{text:"Action 4",key:"action4"}))}}]),n}(r.default.Component);l.Z=x},68659:function(e,l,n){var t=n(64836);l.Z=void 0;var a=t(n(56690)),i=t(n(89728)),d=t(n(66115)),o=t(n(61655)),s=t(n(94993)),m=t(n(73808)),r=t(n(67294)),p=n(34614),u=t(n(57927));function c(e){var l=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}();return function(){var n,t=(0,m.default)(e);if(l){var a=(0,m.default)(this).constructor;n=Reflect.construct(t,arguments,a)}else n=t.apply(this,arguments);return(0,s.default)(this,n)}}var x=function(e){(0,o.default)(n,e);var l=c(n);function n(e){var t;return(0,a.default)(this,n),(t=l.call(this,e)).handleDisplayTypeChange=t.handleDisplayTypeChange.bind((0,d.default)(t)),t.handleToggleOneOnChange=t.handleToggleOneOnChange.bind((0,d.default)(t)),t.handleToggleTwoOnChange=t.handleToggleTwoOnChange.bind((0,d.default)(t)),t.handleToggleThreeOnChange=t.handleToggleThreeOnChange.bind((0,d.default)(t)),t.state={toggle1Selection:!1,toggle2Selection:!1,toggle3Selection:!1,displayType:"tableView"},t}return(0,i.default)(n,[{key:"handleToggleOneOnChange",value:function(e,l){this.setState({toggle1Selection:l})}},{key:"handleToggleTwoOnChange",value:function(e,l){this.setState({toggle2Selection:l})}},{key:"handleToggleThreeOnChange",value:function(e,l){this.setState({toggle3Selection:l})}},{key:"handleDisplayTypeChange",value:function(e,l){this.setState({displayType:l})}},{key:"render",value:function(){return r.default.createElement(u.default,{isStartAligned:!0},r.default.createElement(u.default.Toggle,{text:"Display Patient History",key:"displayPatientHistory",shouldCloseOnClick:!1,onChange:this.handleToggleOneOnChange,isSelected:this.state.toggle1Selection}),r.default.createElement(u.default.Toggle,{text:"Display Allergies",key:"displayAllergies",shouldCloseOnClick:!1,onChange:this.handleToggleTwoOnChange,isSelected:this.state.toggle2Selection}),r.default.createElement(u.default.Toggle,{text:"Display Problems",key:"displayProblems",shouldCloseOnClick:!1,onChange:this.handleToggleThreeOnChange,isSelected:this.state.toggle3Selection}),r.default.createElement(u.default.Divider,{key:"Divider1"}),r.default.createElement(u.default.Item,{icon:r.default.createElement(p.IconCaretDown,null),text:"Add Document",key:"addDocument",isReversed:!0,shouldCloseOnClick:!1,subMenuItems:[r.default.createElement(u.default.Item,{text:"Upload Document",key:"uploadDocument"}),r.default.createElement(u.default.Item,{text:"Link to Document...",key:"linkToDocument"})]}),r.default.createElement(u.default.Item,{icon:r.default.createElement(p.IconCaretDown,null),text:"Add",key:"Add",isReversed:!0,shouldCloseOnClick:!1,subMenuItems:[r.default.createElement(u.default.Item,{text:"Add Allergy",key:"addAllergy"}),r.default.createElement(u.default.Item,{text:"Add Problem",key:"addProblem"})]}),r.default.createElement(u.default.Divider,{key:"Divider2"}),r.default.createElement(u.default.ItemGroup,{"aria-label":"View Type Single Selection",id:"view-type-single-select",key:"ViewTypeSelection",selectedKeys:[this.state.displayType],onChange:this.handleDisplayTypeChange},r.default.createElement(u.default.Item,{icon:r.default.createElement(p.IconTable,null),text:"Table View",key:"tableView",ariaDescribedBy:"view-type-single-select",isIconOnly:!0,shouldCloseOnClick:!1,isSelected:"tableView"===this.state.displayType}),r.default.createElement(u.default.Item,{icon:r.default.createElement(p.IconVisualization,null),text:"Chart View",key:"chartView",ariaDescribedBy:"view-type-single-select",isIconOnly:!0,shouldCloseOnClick:!1,isSelected:"chartView"===this.state.displayType}),r.default.createElement(u.default.Item,{icon:r.default.createElement(p.IconTreemap,null),text:"Treemap View",key:"treemapView",ariaDescribedBy:"view-type-single-select",isIconOnly:!0,shouldCloseOnClick:!1,isSelected:"treemapView"===this.state.displayType})),r.default.createElement(u.default.Divider,{key:"Divider3"}),r.default.createElement(u.default.Item,{icon:r.default.createElement(p.IconSend,null),text:"Send",key:"send",isIconOnly:!0}),r.default.createElement(u.default.ItemGroup,{key:"messageActionGroup"},r.default.createElement(u.default.Item,{icon:r.default.createElement(p.IconPrinter,null),text:"Print",key:"print",isIconOnly:!0}),r.default.createElement(u.default.Item,{icon:r.default.createElement(p.IconBookmark,null),text:"Bookmark",key:"bookmark",isIconOnly:!0}),r.default.createElement(u.default.Item,{icon:r.default.createElement(p.IconTrash,null),text:"Trash",key:"trash",isIconOnly:!0})),r.default.createElement(u.default.Divider,{key:"Divider4"}),r.default.createElement(u.default.Item,{text:"Action 1",key:"action1"}),r.default.createElement(u.default.Item,{text:"Action 2",key:"action2"}),r.default.createElement(u.default.Item,{text:"Action 3",key:"action3"}),r.default.createElement(u.default.Item,{text:"Action 4",key:"action4"}))}}]),n}(r.default.Component);l.Z=x},48102:function(e,l,n){var t=n(64836);l.Z=void 0;var a=t(n(56690)),i=t(n(89728)),d=t(n(66115)),o=t(n(61655)),s=t(n(94993)),m=t(n(73808)),r=t(n(67294)),p=t(n(29690)),u=t(n(68559)),c=t(n(75852)),x=t(n(66053)),y=t(n(57927));function g(e){var l=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}();return function(){var n,t=(0,m.default)(e);if(l){var a=(0,m.default)(this).constructor;n=Reflect.construct(t,arguments,a)}else n=t.apply(this,arguments);return(0,s.default)(this,n)}}var h=function(e){(0,o.default)(n,e);var l=g(n);function n(e){var t;return(0,a.default)(this,n),(t=l.call(this,e)).handleDisplayTypeChange=t.handleDisplayTypeChange.bind((0,d.default)(t)),t.handleToggleOneOnChange=t.handleToggleOneOnChange.bind((0,d.default)(t)),t.handleToggleTwoOnChange=t.handleToggleTwoOnChange.bind((0,d.default)(t)),t.handleToggleThreeOnChange=t.handleToggleThreeOnChange.bind((0,d.default)(t)),t.state={toggle1Selection:!1,toggle2Selection:!1,toggle3Selection:!1,selectedKeys:[]},t}return(0,i.default)(n,[{key:"handleToggleOneOnChange",value:function(e,l){this.setState({toggle1Selection:l})}},{key:"handleToggleTwoOnChange",value:function(e,l){this.setState({toggle2Selection:l})}},{key:"handleToggleThreeOnChange",value:function(e,l){this.setState({toggle3Selection:l})}},{key:"handleDisplayTypeChange",value:function(e,l){var n=this.state.selectedKeys;n.includes(l)?n.splice(n.indexOf(l),1):n.push(l),this.setState({selectedKeys:n})}},{key:"render",value:function(){return r.default.createElement(y.default,null,r.default.createElement(y.default.Toggle,{text:"InDesign",key:"toggle1",shouldCloseOnClick:!1,onChange:this.handleToggleOneOnChange,isSelected:this.state.toggle1Selection}),r.default.createElement(y.default.Toggle,{text:"Photoshop",key:"toggle21",shouldCloseOnClick:!1,isSelected:this.state.toggle2Selection}),r.default.createElement(y.default.Toggle,{text:"Illustrator",key:"toggle3",shouldCloseOnClick:!1,onChange:this.handleToggleThreeOnChange,isSelected:this.state.toggle3Selection}),r.default.createElement(y.default.Divider,{key:"Divider1"}),r.default.createElement(y.default.Item,{text:"Browsers",key:"MenuButton1",shouldCloseOnClick:!1,subMenuItems:[r.default.createElement(y.default.Item,{text:"Edge",key:"defaultItem1"}),r.default.createElement(y.default.Item,{text:"Chrome",key:"defaultItem2"})]}),r.default.createElement(y.default.Divider,{key:"Divider2"}),r.default.createElement(y.default.ItemGroup,{"aria-label":"View Type Multi Selection",id:"view-type-multi-select",key:"ViewTypeSelection",isMultiSelect:!0,selectedKeys:this.state.selectedKeys,onChange:this.handleDisplayTypeChange},r.default.createElement(y.default.Item,{icon:r.default.createElement(p.default,null),text:"Table View",key:"tableView",ariaDescribedBy:"view-type-multi-select",isIconOnly:!0,shouldCloseOnClick:!1,isSelected:this.state.selectedKeys.includes("tableView")}),r.default.createElement(y.default.Item,{icon:r.default.createElement(u.default,null),text:"Expanded View",key:"expandedView",ariaDescribedBy:"view-type-multi-select",isIconOnly:!0,shouldCloseOnClick:!1,isSelected:this.state.selectedKeys.includes("expandedView")}),r.default.createElement(y.default.Item,{icon:r.default.createElement(c.default,null),text:"Trending View",key:"trendingView",ariaDescribedBy:"view-type-multi-select",isIconOnly:!0,shouldCloseOnClick:!1,isSelected:this.state.selectedKeys.includes("trendingView")})),r.default.createElement(y.default.Divider,{key:"Divider3"}),r.default.createElement(y.default.Item,{icon:r.default.createElement(x.default,null),text:"Send Message",key:"send",isIconOnly:!0}))}}]),n}(r.default.Component);l.Z=h},17422:function(e,l,n){n.r(l),l.default={badge:"Badges-module__badge___vex-+","badge-container":"Badges-module__badge-container___B13Mv","badge-name":"Badges-module__badge-name___jkN0m","badge-version":"Badges-module__badge-version___agZ+P"}},53560:function(e,l,n){n.r(l),l.default={"clinical-lowlight-theme":"ExampleTemplate-module__clinical-lowlight-theme___rBbtD","orion-fusion-theme":"ExampleTemplate-module__orion-fusion-theme___GzA23",template:"ExampleTemplate-module__template___a4uPk",header:"ExampleTemplate-module__header___iFXV3",content:"ExampleTemplate-module__content___48m4Q",description:"ExampleTemplate-module__description___NwBJo",footer:"ExampleTemplate-module__footer___GpSoG","button-container":"ExampleTemplate-module__button-container___rAD11",css:"ExampleTemplate-module__css___+jtk1",code:"ExampleTemplate-module__code___7rC6C","css-toggle":"ExampleTemplate-module__css-toggle___chHK7","code-toggle":"ExampleTemplate-module__code-toggle___TGlE-","is-selected":"ExampleTemplate-module__is-selected___0BYwS",item:"ExampleTemplate-module__item___8FTQq",chevron:"ExampleTemplate-module__chevron___VbY7N",title:"ExampleTemplate-module__title___r+nbJ","dynamic-content":"ExampleTemplate-module__dynamic-content___k+1H7"}}}]);