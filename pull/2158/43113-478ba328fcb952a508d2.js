"use strict";(self.webpackChunkterra_framework=self.webpackChunkterra_framework||[]).push([[43113],{43113:function(e,t,n){n.r(t),n.d(t,{default:function(){return f}});var o=n(58168),a=n(53986),l=n(96540),r=n(36665),c=n(74647),i=n(38549),s=["components"],d={};function u(e){var t=e.components,n=(0,a.A)(e,s);return(0,r.mdx)("wrapper",(0,o.A)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-jsx"},"import React, { useState, useRef, useCallback } from 'react';\nimport Table from 'terra-table';\n\nconst tableDataJSON = {\n  cols: [\n    { id: 'Column-0', displayName: 'Patient' },\n    { id: 'Column-1', displayName: 'Location' },\n    { id: 'Column-2', displayName: 'Illness Severity' },\n  ],\n  rows: [\n    {\n      id: '1',\n      cells: [\n        { content: 'Fleck, Arthur' },\n        { content: '1007-MTN' },\n        { content: 'Unstable' },\n      ],\n    },\n    {\n      id: '2',\n      cells: [\n        { content: 'Wayne, Bruce' },\n        { content: '1107-MTN-DR' },\n        { content: 'Stable' },\n\n      ],\n    },\n    {\n      id: '3',\n      cells: [\n        { content: 'Carr, Alicia' },\n        { content: '1007-MTN' },\n        { content: 'Unstable' },\n\n      ],\n    },\n    {\n      id: '4',\n      cells: [\n        { content: 'McMurphy, Donald' },\n        { content: '1024-MTN', isMasked: true },\n        { content: 'Stable' },\n      ],\n    },\n    {\n      id: '5',\n      cells: [\n        { content: 'Peters, Timothy' },\n        { content: '1207-MTN' },\n        { content: 'Unstable', isMasked: true },\n      ],\n    },\n  ],\n};\n\nconst TableRowSelection = () => {\n  const rowSelectionModeRef = useRef();\n  const rowHeaderIndex = 0;\n  const { cols, rows } = tableDataJSON;\n  const [rowData, setRowData] = useState(rows);\n  const [hasSelectableRows, setHasSelectableRows] = useState(false);\n\n  const clearRowSelection = useCallback(() => {\n    const newRowData = [...rowData];\n    // eslint-disable-next-line no-return-assign, no-param-reassign\n    newRowData.forEach(row => (row.isSelected = false));\n    setRowData(newRowData);\n  }, [rowData]);\n\n  const onRowSelectionModeChange = useCallback((event) => {\n    if (!event.target.checked) {\n      clearRowSelection();\n    }\n    setHasSelectableRows(event.target.checked);\n  }, [clearRowSelection]);\n\n  const onRowSelect = useCallback((rowSelection) => {\n    const { rowId } = rowSelection;\n\n    // Remove current selections\n    const newRowData = [...rowData];\n\n    const dataRowToUpdate = newRowData.find(row => row.id === rowId);\n    if (dataRowToUpdate) {\n      dataRowToUpdate.isSelected = !dataRowToUpdate.isSelected;\n    }\n\n    setRowData(newRowData);\n  }, [rowData]);\n\n  const onRowSelectionHeaderSelect = useCallback(() => {\n    // eslint-disable-next-line no-alert\n    alert('Row Selection Header Clicked');\n  }, []);\n\n  return (\n    <React.Fragment>\n      <div>\n        <label htmlFor=\"rowSelectionMode\"><b>Row Selection Mode</b></label>\n        <input\n          id=\"rowSelectionMode\"\n          type=\"checkbox\"\n          ref={rowSelectionModeRef}\n          onChange={onRowSelectionModeChange}\n        />\n      </div>\n      <Table\n        id=\"table-with-row-selections\"\n        overflowColumns={cols}\n        rows={rowData}\n        rowHeaderIndex={rowHeaderIndex}\n        columnWidth=\"180px\"\n        ariaLabel=\"Table with Row Selections\"\n        rowSelectionMode={hasSelectableRows ? 'multiple' : undefined} // Prop to turn row selection mode on/off\n        onRowSelect={onRowSelect} // For row selection, consumer must provide a callback that the Worklist Data Grid will call when the user selects one or more rows.\n        onRowSelectionHeaderSelect={onRowSelectionHeaderSelect}\n      />\n    </React.Fragment>\n  );\n};\n\nexport default TableRowSelection;\n\n")))}u.isMDXComponent=!0;var m=n(201),w=function(e){var t=e.title,n=e.description,o=e.isExpanded;return l.createElement(m.A,{title:t||"Table Row Selection",description:n,example:l.createElement(i.A,null),exampleSrc:l.createElement(u,null),isExpanded:o})},p=["components"],h={},b="wrapper";function f(e){var t=e.components,n=(0,a.A)(e,p);return(0,r.mdx)(b,(0,o.A)({},h,n,{components:t,mdxType:"MDXLayout"}),(0,r.mdx)("h1",{id:"table---multiple-row-selection"},"Table - Multiple Row Selection"),(0,r.mdx)("h3",{id:"description"},"Description"),(0,r.mdx)("p",null,"Row selection mode is controlled with a property and is off by default.\nWhen creating a table that supports multiple row selections, the consumer must set the property.\nThis example demonstrates a table with full support for multiple row selections.\nBecause the component is an accessible table, each row selection checkbox is a tab stop."),(0,r.mdx)("h3",{id:"required-properties"},"Required Properties"),(0,r.mdx)("ul",null,(0,r.mdx)("li",{parentName:"ul"},"rowSelectionMode"),(0,r.mdx)("li",{parentName:"ul"},"onRowSelect"),(0,r.mdx)("li",{parentName:"ul"},"onRowSelectionHeaderSelect")),(0,r.mdx)("h2",{id:"row-selection-interactions"},"Row Selection Interactions"),(0,r.mdx)(c.Notice,{variant:"important",ariaLevel:"2",mdxType:"Notice"},"This example demonstrates that the column header cell in the select box column can receive focus and trigger a callback. It can be used to support sorting of the table by selected and unselected rows. However, if sorting or another action is required, to comply with accessibility guidelines, a visual indication of the action must be provided in the column header cell. Cerner UX design standards do not currently support an icon to communicate column sortability. If your workflow requires support for sorting the checkbox column, work with a UX Designer to create a solution that meets accessibility requirements."),(0,r.mdx)("p",null,"For this example, you can perform the following actions to achieve row-centric outcomes:"),(0,r.mdx)("table",null,(0,r.mdx)("thead",{parentName:"table"},(0,r.mdx)("tr",{parentName:"thead"},(0,r.mdx)("th",{parentName:"tr",align:null},"Outcome"),(0,r.mdx)("th",{parentName:"tr",align:null},"Action"))),(0,r.mdx)("tbody",{parentName:"table"},(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},"Select a Row"),(0,r.mdx)("td",{parentName:"tr",align:null},"When multiple row selection is enabled, select the row, or press ",(0,r.mdx)("strong",{parentName:"td"},"TAB")," until the row checkbox is active and then press the ",(0,r.mdx)("strong",{parentName:"td"},"SPACEBAR")," to select the checkbox.")),(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},"Clear a Row"),(0,r.mdx)("td",{parentName:"tr",align:null},"Select the row, or press ",(0,r.mdx)("strong",{parentName:"td"},"TAB")," until the row checkbox is active and then press the ",(0,r.mdx)("strong",{parentName:"td"},"SPACEBAR")," to clear the checkbox.")))),(0,r.mdx)(w,{title:"Table With Row Selection",mdxType:"TableRowSelection"}))}f.isMDXComponent=!0},38549:function(e,t,n){var o=n(24994),a=n(73738);t.A=void 0;var l=o(n(41132)),r=o(n(85715)),c=function(e,t){if(!t&&e&&e.__esModule)return e;if(null===e||"object"!=a(e)&&"function"!=typeof e)return{default:e};var n=s(t);if(n&&n.has(e))return n.get(e);var o={__proto__:null},l=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var r in e)if("default"!==r&&{}.hasOwnProperty.call(e,r)){var c=l?Object.getOwnPropertyDescriptor(e,r):null;c&&(c.get||c.set)?Object.defineProperty(o,r,c):o[r]=e[r]}return o.default=e,n&&n.set(e,o),o}(n(96540)),i=o(n(83264));function s(e){if("function"!=typeof WeakMap)return null;var t=new WeakMap,n=new WeakMap;return(s=function(e){return e?n:t})(e)}var d=[{id:"Column-0",displayName:"Patient"},{id:"Column-1",displayName:"Location"},{id:"Column-2",displayName:"Illness Severity"}],u=[{id:"1",cells:[{content:"Fleck, Arthur"},{content:"1007-MTN"},{content:"Unstable"}]},{id:"2",cells:[{content:"Wayne, Bruce"},{content:"1107-MTN-DR"},{content:"Stable"}]},{id:"3",cells:[{content:"Carr, Alicia"},{content:"1007-MTN"},{content:"Unstable"}]},{id:"4",cells:[{content:"McMurphy, Donald"},{content:"1024-MTN",isMasked:!0},{content:"Stable"}]},{id:"5",cells:[{content:"Peters, Timothy"},{content:"1207-MTN"},{content:"Unstable",isMasked:!0}]}];t.A=function(){var e=(0,c.useRef)(),t=d,n=u,o=(0,c.useState)(n),a=(0,r.default)(o,2),s=a[0],m=a[1],w=(0,c.useState)(!1),p=(0,r.default)(w,2),h=p[0],b=p[1],f=(0,c.useCallback)((function(){var e=(0,l.default)(s);e.forEach((function(e){return e.isSelected=!1})),m(e)}),[s]),S=(0,c.useCallback)((function(e){e.target.checked||f(),b(e.target.checked)}),[f]),x=(0,c.useCallback)((function(e){var t=e.rowId,n=(0,l.default)(s),o=n.find((function(e){return e.id===t}));o&&(o.isSelected=!o.isSelected),m(n)}),[s]),R=(0,c.useCallback)((function(){alert("Row Selection Header Clicked")}),[]);return c.default.createElement(c.default.Fragment,null,c.default.createElement("div",null,c.default.createElement("label",{htmlFor:"rowSelectionMode"},c.default.createElement("b",null,"Row Selection Mode")),c.default.createElement("input",{id:"rowSelectionMode",type:"checkbox",ref:e,onChange:S})),c.default.createElement(i.default,{id:"table-with-row-selections",overflowColumns:t,rows:s,rowHeaderIndex:0,columnWidth:"180px",ariaLabel:"Table with Row Selections",rowSelectionMode:h?"multiple":void 0,onRowSelect:x,onRowSelectionHeaderSelect:R}))}}}]);